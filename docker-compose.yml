# N8N Workflow Scraper - Production Architecture
# Version: 2.5 - Simple Service Separation with Supabase
# Purpose: Clean separation with working Supabase connection

services:
  # ============================================================================
  # DATABASE SERVICE - Supabase Connection Manager
  # ============================================================================
  n8n-scraper-database:
    image: postgres:17-alpine
    container_name: n8n-scraper-database
    restart: unless-stopped
    
    # Environment variables for Supabase connection
    environment:
      # Supabase connection details
      SUPABASE_HOST: aws-1-eu-north-1.pooler.supabase.com
      SUPABASE_PORT: 5432
      SUPABASE_USER: postgres.skduopoakfeaurttcaip
      SUPABASE_PASSWORD: crg3pjm8ych4ctu@KXT
      SUPABASE_DB: postgres
      
      # Local database settings
      POSTGRES_DB: n8n_scraper
      POSTGRES_USER: scraper_user
      POSTGRES_PASSWORD: scraper_pass
      PGDATA: /var/lib/postgresql/data/pgdata
    
    # Port mapping
    ports:
      - "5432:5432"
    
    # Volume for local data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
    # Health check - simple test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scraper_user -d n8n_scraper"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    
    # Simple startup - just start PostgreSQL
    command: ["postgres"]

  # ============================================================================
  # APPLICATION SERVICE
  # ============================================================================
  n8n-scraper-app:
    build: .
    container_name: n8n-scraper-app
    restart: unless-stopped
    
    # Environment variables
    environment:
      # Database connection (local PostgreSQL)
      DATABASE_URL: postgresql://scraper_user:scraper_pass@n8n-scraper-database:5432/n8n_scraper
      
      # Application settings
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
      SCRAPER_ENV: production
      SCRAPER_LOG_LEVEL: INFO
      
      # Browser settings
      BROWSER_HEADLESS: "true"
      BROWSER_TIMEOUT: 30000
      BROWSER_VIEWPORT_WIDTH: 1920
      BROWSER_VIEWPORT_HEIGHT: 1080
      
      # Rate limiting
      RATE_LIMIT_REQUESTS_PER_MINUTE: 60
      RATE_LIMIT_BURST_SIZE: 10
      
      # Retry settings
      MAX_RETRIES: 3
      RETRY_DELAY: 2
      
      # Batch processing
      BATCH_SIZE: 10
      MAX_CONCURRENT_WORKFLOWS: 5
      
      # Monitoring
      ENABLE_METRICS: "true"
      METRICS_PORT: 9090
      
      # Security
      ENABLE_SSL: "true"
      SSL_VERIFY: "true"
    
    # Port mappings
    ports:
      - "5001:5001"  # WebSocket Dashboard (HTTP)
      - "5002:5002"  # WebSocket Dashboard (WebSocket)
      - "5004:5004"  # Database Viewer
    
    # Volume mounts
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./scripts:/app/scripts
      - ./src:/app/src
      - ./tests:/app/tests
      - ./evidence:/app/evidence
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Dependencies
    depends_on:
      n8n-scraper-database:
        condition: service_healthy
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

# ============================================================================
# VOLUMES
# ============================================================================
volumes:
  postgres_data:
    driver: local

# ============================================================================
# NETWORKS
# ============================================================================
networks:
  default:
    name: n8n-scraper-network
    driver: bridge
