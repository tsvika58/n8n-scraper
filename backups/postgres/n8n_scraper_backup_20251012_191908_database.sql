--
-- PostgreSQL database dump
--

\restrict ppwpAMzO7vZqnGFRu4TKYfzStOt33CeJC1KvnqV7qhBuKR6Vfj8m178wnCFbsCG

-- Dumped from database version 17.6
-- Dumped by pg_dump version 17.6

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: video_transcripts; Type: TABLE; Schema: public; Owner: scraper_user
--

CREATE TABLE public.video_transcripts (
    id integer NOT NULL,
    workflow_id character varying(50) NOT NULL,
    video_url text NOT NULL,
    video_id character varying(100),
    platform character varying(50),
    transcript_text text,
    transcript_json jsonb,
    duration integer,
    language character varying(10),
    extracted_at timestamp without time zone NOT NULL
);


ALTER TABLE public.video_transcripts OWNER TO scraper_user;

--
-- Name: video_transcripts_id_seq; Type: SEQUENCE; Schema: public; Owner: scraper_user
--

CREATE SEQUENCE public.video_transcripts_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.video_transcripts_id_seq OWNER TO scraper_user;

--
-- Name: video_transcripts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: scraper_user
--

ALTER SEQUENCE public.video_transcripts_id_seq OWNED BY public.video_transcripts.id;


--
-- Name: workflow_content; Type: TABLE; Schema: public; Owner: scraper_user
--

CREATE TABLE public.workflow_content (
    id integer NOT NULL,
    workflow_id character varying(50) NOT NULL,
    explainer_text text,
    explainer_html text,
    setup_instructions text,
    use_instructions text,
    has_videos boolean,
    video_count integer,
    has_iframes boolean,
    iframe_count integer,
    raw_content jsonb,
    extracted_at timestamp without time zone NOT NULL
);


ALTER TABLE public.workflow_content OWNER TO scraper_user;

--
-- Name: workflow_content_id_seq; Type: SEQUENCE; Schema: public; Owner: scraper_user
--

CREATE SEQUENCE public.workflow_content_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.workflow_content_id_seq OWNER TO scraper_user;

--
-- Name: workflow_content_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: scraper_user
--

ALTER SEQUENCE public.workflow_content_id_seq OWNED BY public.workflow_content.id;


--
-- Name: workflow_metadata; Type: TABLE; Schema: public; Owner: scraper_user
--

CREATE TABLE public.workflow_metadata (
    id integer NOT NULL,
    workflow_id character varying(50) NOT NULL,
    title text,
    description text,
    use_case text,
    author_name character varying(255),
    author_url text,
    views integer,
    shares integer,
    categories jsonb,
    tags jsonb,
    workflow_created_at timestamp without time zone,
    workflow_updated_at timestamp without time zone,
    extracted_at timestamp without time zone NOT NULL,
    raw_metadata jsonb
);


ALTER TABLE public.workflow_metadata OWNER TO scraper_user;

--
-- Name: workflow_metadata_id_seq; Type: SEQUENCE; Schema: public; Owner: scraper_user
--

CREATE SEQUENCE public.workflow_metadata_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.workflow_metadata_id_seq OWNER TO scraper_user;

--
-- Name: workflow_metadata_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: scraper_user
--

ALTER SEQUENCE public.workflow_metadata_id_seq OWNED BY public.workflow_metadata.id;


--
-- Name: workflow_structure; Type: TABLE; Schema: public; Owner: scraper_user
--

CREATE TABLE public.workflow_structure (
    id integer NOT NULL,
    workflow_id character varying(50) NOT NULL,
    node_count integer,
    connection_count integer,
    node_types jsonb,
    extraction_type character varying(50),
    fallback_used boolean,
    workflow_json jsonb,
    extracted_at timestamp without time zone NOT NULL
);


ALTER TABLE public.workflow_structure OWNER TO scraper_user;

--
-- Name: workflow_structure_id_seq; Type: SEQUENCE; Schema: public; Owner: scraper_user
--

CREATE SEQUENCE public.workflow_structure_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.workflow_structure_id_seq OWNER TO scraper_user;

--
-- Name: workflow_structure_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: scraper_user
--

ALTER SEQUENCE public.workflow_structure_id_seq OWNED BY public.workflow_structure.id;


--
-- Name: workflows; Type: TABLE; Schema: public; Owner: scraper_user
--

CREATE TABLE public.workflows (
    id integer NOT NULL,
    workflow_id character varying(50) NOT NULL,
    url text NOT NULL,
    extracted_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    processing_time double precision,
    quality_score double precision,
    layer1_success boolean,
    layer2_success boolean,
    layer3_success boolean,
    error_message text,
    retry_count integer,
    last_scraped_at timestamp without time zone,
    created_at timestamp without time zone DEFAULT now()
);


ALTER TABLE public.workflows OWNER TO scraper_user;

--
-- Name: workflows_id_seq; Type: SEQUENCE; Schema: public; Owner: scraper_user
--

CREATE SEQUENCE public.workflows_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.workflows_id_seq OWNER TO scraper_user;

--
-- Name: workflows_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: scraper_user
--

ALTER SEQUENCE public.workflows_id_seq OWNED BY public.workflows.id;


--
-- Name: video_transcripts id; Type: DEFAULT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.video_transcripts ALTER COLUMN id SET DEFAULT nextval('public.video_transcripts_id_seq'::regclass);


--
-- Name: workflow_content id; Type: DEFAULT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflow_content ALTER COLUMN id SET DEFAULT nextval('public.workflow_content_id_seq'::regclass);


--
-- Name: workflow_metadata id; Type: DEFAULT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflow_metadata ALTER COLUMN id SET DEFAULT nextval('public.workflow_metadata_id_seq'::regclass);


--
-- Name: workflow_structure id; Type: DEFAULT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflow_structure ALTER COLUMN id SET DEFAULT nextval('public.workflow_structure_id_seq'::regclass);


--
-- Name: workflows id; Type: DEFAULT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflows ALTER COLUMN id SET DEFAULT nextval('public.workflows_id_seq'::regclass);


--
-- Data for Name: video_transcripts; Type: TABLE DATA; Schema: public; Owner: scraper_user
--

COPY public.video_transcripts (id, workflow_id, video_url, video_id, platform, transcript_text, transcript_json, duration, language, extracted_at) FROM stdin;
\.


--
-- Data for Name: workflow_content; Type: TABLE DATA; Schema: public; Owner: scraper_user
--

COPY public.workflow_content (id, workflow_id, explainer_text, explainer_html, setup_instructions, use_instructions, has_videos, video_count, has_iframes, iframe_count, raw_content, extracted_at) FROM stdin;
1979	498	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/zulip.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/openai-chat-model.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://gravatar.com/avatar/74234187cf4a650d53f6a86e7b03d1bcb8cfef4cbd0552eabd8d966cd808cc54?r=pg&d=retro&size=200", "https://n8n.io/nodes/telegram.svg", "https://gravatar.com/avatar/1d8dbb30401a76425734d4319abbaa38548b7572064ca080740bbfe60324772a?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/498-send-a-private-message-on-zulip", "workflow_id": "498", "extracted_at": "2025-10-12T12:39:47.441482", "extractor_version": "1.0.0"}, "extraction_time": 7.295168}	2025-10-12 11:37:30.891989
2031	40010	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/40010", "workflow_id": "40010", "extracted_at": "2025-10-12T15:25:13.114227", "extractor_version": "1.0.0"}, "extraction_time": 15.019913}	2025-10-12 15:23:57.363946
2034	40013	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/40013", "workflow_id": "40013", "extracted_at": "2025-10-12T15:25:10.243903", "extractor_version": "1.0.0"}, "extraction_time": 17.87688}	2025-10-12 15:25:43.405155
1977	2462	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/telegram.svg", "https://gravatar.com/avatar/1d8dbb30401a76425734d4319abbaa38548b7572064ca080740bbfe60324772a?r=pg&d=retro&size=200", "https://n8n.io/nodes/http-request.svg", "https://n8n.io/nodes/telegram-trigger.svg", "https://n8n.io/nodes/merge.svg", "https://n8n.io/nodes/openai-chat-model.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://gravatar.com/avatar/74234187cf4a650d53f6a86e7b03d1bcb8cfef4cbd0552eabd8d966cd808cc54?r=pg&d=retro&size=200", "https://gravatar.com/avatar/4ab99e51473df76838beeaac908747f7928c625f869794815cabe34016967d51?r=pg&d=retro&size=200", "https://gravatar.com/avatar/a551e67c6fe7affd5f882a527dee154bb6c3ac90cf878326accb3fb3ec77c8a6?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "How it works:This project creates a personal AI assistant named Angie that operates through Telegram. Angie can summarize daily emails, look up calendar entries, remind users of upcoming tasks, and retrieve contact information. The assistant can interact with users via both voice and text inputs.Step-by-step:Telegram Trigger: The workflow starts with a Telegram trigger that listens for incoming message events. The system determines if the incoming message is voice or text. If voice, the voice file is retrieved and transcribed to text using OpenAI's API Speech to TextAI Assistant: The telegram request is passed to the AI assistant (Angie).Tools Integration: The AI assistant is equipped with several tools:Get Email: Uses Gmail API to fetch recent emails, filtering by date.Get Calendar: Retrieves calendar entries for specified dates.Get Tasks: Connects to a Baserow (open-source Airtable alternative) database to fetch to-do list items.Get Contacts: Also uses Baserow to retrieve contact information.Response Generation: The AI formulates a response based on the gathered information and sends back to the user on Telegram", "step_by_step": [], "code_snippets": [], "tutorial_text": "How it works:This project creates a personal AI assistant named Angie that operates through Telegram. Angie can summarize daily emails, look up calendar entries, remind users of upcoming tasks, and retrieve contact information. The assistant can interact with users via both voice and text inputs.Step-by-step:Telegram Trigger: The workflow starts with a Telegram trigger that listens for incoming message events. The system determines if the incoming message is voice or text. If voice, the voice file is retrieved and transcribed to text using OpenAI's API Speech to TextAI Assistant: The telegram request is passed to the AI assistant (Angie).Tools Integration: The AI assistant is equipped with several tools:Get Email: Uses Gmail API to fetch recent emails, filtering by date.Get Calendar: Retrieves calendar entries for specified dates.Get Tasks: Connects to a Baserow (open-source Airtable alternative) database to fetch to-do list items.Get Contacts: Also uses Baserow to retrieve contact information.Response Generation: The AI formulates a response based on the gathered information and sends back to the user on Telegram", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/2462", "workflow_id": "2462", "extracted_at": "2025-10-12T14:44:04.265445", "extractor_version": "1.0.0"}, "extraction_time": 8.190311}	2025-10-12 07:49:04.541519
2002	3001	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3001", "workflow_id": "3001", "extracted_at": "2025-10-12T15:03:05.580103", "extractor_version": "1.0.0"}, "extraction_time": 5.975831}	2025-10-12 14:46:17.939758
2035	40014	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/40014", "workflow_id": "40014", "extracted_at": "2025-10-12T15:25:13.119295", "extractor_version": "1.0.0"}, "extraction_time": 14.901325}	2025-10-12 15:25:43.405159
1984	494	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/harvest.png", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/microsoft-teams.svg", "https://gravatar.com/avatar/7ee0febc0cbec2f1f6b24ddec3c4322e27c82c91dc729cfecf6ce12bfddd058d?r=pg&d=retro&size=200", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/eb8eb92141f57c72c5f5a9fb5e8c85dca42047f764de54ab5466999cbb691079?r=pg&d=retro&size=200", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/6d3d2053279bc63e9be7bf4cd3fb74e13e7cc1309d32eab0b72140332cff577e?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/494-create-a-client-in-harvest", "workflow_id": "494", "extracted_at": "2025-10-12T12:40:47.298523", "extractor_version": "1.0.0"}, "extraction_time": 6.345539}	2025-10-12 11:38:15.07893
1982	495	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/segment.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/webhook.svg", "https://n8n.io/nodes/respond-to-webhook.svg", "https://gravatar.com/avatar/5240094f838126182ceefb50ca4a3cf75cc7dc0808efd4b9920d792e41bfc45e?r=pg&d=retro&size=200", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/a551e67c6fe7affd5f882a527dee154bb6c3ac90cf878326accb3fb3ec77c8a6?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/495-track-an-event-in-segment", "workflow_id": "495", "extracted_at": "2025-10-12T12:40:17.844609", "extractor_version": "1.0.0"}, "extraction_time": 10.592202}	2025-10-12 11:37:50.554358
1985	493	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/disqus.png", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/http-request.svg", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200", "https://gravatar.com/avatar/8760ed64a38ed65da42983737659c7e295e4a7f14b59ed5ce1b0b1077435f573?r=pg&d=retro&size=200", "https://n8n.io/nodes/linkedin.svg", "https://gravatar.com/avatar/018562cd36511e98b1f19a8a3f63f4232ed69998ebfa9127e62bc2b185d728b9?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/493-get-details-of-a-forum-in-disqus", "workflow_id": "493", "extracted_at": "2025-10-12T12:40:48.335554", "extractor_version": "1.0.0"}, "extraction_time": 6.209453}	2025-10-12 11:38:15.092281
2010	3011	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3011", "workflow_id": "3011", "extracted_at": "2025-10-12T15:28:40.237005", "extractor_version": "1.0.0"}, "extraction_time": 8.684114}	2025-10-12 15:07:48.100489
2011	3012	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/http-request.svg", "https://n8n.io/nodes/telegram.svg", "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200", "https://n8n.io/nodes/merge.svg", "https://n8n.io/nodes/gmail.svg", "https://n8n.io/nodes/google-drive.svg", "https://n8n.io/nodes/google-drive-trigger.svg", "https://gravatar.com/avatar/a73ca84b07b557e95322815bc04859245e9243c7cfd5bf9a14568fd0ce3e72c5?r=pg&d=retro&size=200", "https://n8n.io/nodes/code.svg", "https://gravatar.com/avatar/79aa147f090807fe0f618fb47a1de932669e385bb0c84bf3a7f891ae7d174256?r=pg&d=retro&size=200", "https://n8n.io/nodes/binary-input-loader.svg", "https://gravatar.com/avatar/4cda9c7c1c24fdb61896cac588296d1dad03655a439ab71ef34f4c62c0ba8524?r=pg&d=retro&size=200", "https://n8n.io/nodes/openai-chat-model.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://gravatar.com/avatar/4ab99e51473df76838beeaac908747f7928c625f869794815cabe34016967d51?r=pg&d=retro&size=200", "https://gravatar.com/avatar/74234187cf4a650d53f6a86e7b03d1bcb8cfef4cbd0552eabd8d966cd808cc54?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "🌐 Confluence Page AI Chatbot WorkflowThis n8n workflow template enables users to interact with an AI-powered chatbot designed to retrieve, process, and analyze content from Confluence pages. By leveraging Confluence's REST API and an AI agent, the workflow facilitates seamless communication and contextual insights based on Confluence page data.🌟 How the Workflow Works🔗 Input Chat MessageThe workflow begins when a user sends a chat message containing a query or request for information about a specific Confluence page.📄 Data RetrievalThe workflow uses the Confluence REST API to fetch page details by ID, including its body in the desired format (e.g., storage, view).The retrieved HTML content is converted into Markdown for easier processing.🤖 AI Agent InteractionAn AI-powered agent processes the Markdown content and provides dynamic responses to user queries. The agent is context-aware, ensuring accurate and relevant answers based on the Confluence page's content.💬 Dynamic ResponsesUsers can interact with the chatbot to:Summarize the page's content.Extract specific details or sections.Clarify complex information.Analyze key points or insights.🚀 Use Cases📚 Knowledge Management: Quickly access and analyze information stored in Confluence without manually searching through pages.📊 Team Collaboration: Facilitate discussions by summarizing or explaining page content during team chats.🔍 Research and Documentation: Extract critical insights from large documentation repositories for efficient decision-making.♿ Accessibility: Provide an alternative way to interact with Confluence content for users who prefer conversational interfaces.🛠️ Resources for Getting StartedConfluence API Setup:Generate an API token for authentication via Atlassian's account management portal.Refer to Confluence's REST API documentation for endpoint details and usage instructions.n8n Installation:Install n8n locally or on a server using the official installation guide.AI Agent Configuration:Set up OpenAI or other supported language models for natural language processing.", "step_by_step": [], "code_snippets": [], "tutorial_text": "🌐 Confluence Page AI Chatbot WorkflowThis n8n workflow template enables users to interact with an AI-powered chatbot designed to retrieve, process, and analyze content from Confluence pages. By leveraging Confluence's REST API and an AI agent, the workflow facilitates seamless communication and contextual insights based on Confluence page data.🌟 How the Workflow Works🔗 Input Chat MessageThe workflow begins when a user sends a chat message containing a query or request for information about a specific Confluence page.📄 Data RetrievalThe workflow uses the Confluence REST API to fetch page details by ID, including its body in the desired format (e.g., storage, view).The retrieved HTML content is converted into Markdown for easier processing.🤖 AI Agent InteractionAn AI-powered agent processes the Markdown content and provides dynamic responses to user queries. The agent is context-aware, ensuring accurate and relevant answers based on the Confluence page's content.💬 Dynamic ResponsesUsers can interact with the chatbot to:Summarize the page's content.Extract specific details or sections.Clarify complex information.Analyze key points or insights.🚀 Use Cases📚 Knowledge Management: Quickly access and analyze information stored in Confluence without manually searching through pages.📊 Team Collaboration: Facilitate discussions by summarizing or explaining page content during team chats.🔍 Research and Documentation: Extract critical insights from large documentation repositories for efficient decision-making.♿ Accessibility: Provide an alternative way to interact with Confluence content for users who prefer conversational interfaces.🛠️ Resources for Getting StartedConfluence API Setup:Generate an API token for authentication via Atlassian's account management portal.Refer to Confluence's REST API documentation for endpoint details and usage instructions.n8n Installation:Install n8n locally or on a server using the official installation guide.AI Agent Configuration:Set up OpenAI or other supported language models for natural language processing.", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3012", "workflow_id": "3012", "extracted_at": "2025-10-12T15:28:39.920929", "extractor_version": "1.0.0"}, "extraction_time": 6.60772}	2025-10-12 15:07:48.10049
1988	490	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/pipedrive-trigger.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/fe589e45711c79f138c00077e28d9bc41a22d79f684d203cd3fdd41e218ef6ba?r=pg&d=retro&size=200", "https://n8n.io/nodes/odoo.svg", "https://gravatar.com/avatar/a73ca84b07b557e95322815bc04859245e9243c7cfd5bf9a14568fd0ce3e72c5?r=pg&d=retro&size=200", "https://n8n.io/nodes/pipedrive.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/490-receive-updates-for-all-changes-in-pipedrive", "workflow_id": "490", "extracted_at": "2025-10-12T12:41:04.430410", "extractor_version": "1.0.0"}, "extraction_time": 6.606753}	2025-10-12 11:38:34.801159
2012	3009	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/http-request.svg", "https://n8n.io/nodes/n8n-form-trigger.svg", "https://gravatar.com/avatar/e9b426a3cee5ccc3db516a8cc91af8a65fc5cac248b8844071f476dbcfa5d553?r=pg&d=retro&size=200", "https://n8n.io/nodes/merge.svg", "https://n8n.io/nodes/webhook.svg", "https://n8n.io/nodes/respond-to-webhook.svg", "https://gravatar.com/avatar/5240094f838126182ceefb50ca4a3cf75cc7dc0808efd4b9920d792e41bfc45e?r=pg&d=retro&size=200", "https://gravatar.com/avatar/a551e67c6fe7affd5f882a527dee154bb6c3ac90cf878326accb3fb3ec77c8a6?r=pg&d=retro&size=200", "https://n8n.io/nodes/openai-chat-model.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://gravatar.com/avatar/4ab99e51473df76838beeaac908747f7928c625f869794815cabe34016967d51?r=pg&d=retro&size=200", "https://gravatar.com/avatar/74234187cf4a650d53f6a86e7b03d1bcb8cfef4cbd0552eabd8d966cd808cc54?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "🧠 NEW Claude 3.7 Extended Thinking AI Agent 🤖 – Unlock Ultimate IntelligenceSupercharge Claude 3.7 with full customization & deeper reasoning!Who is this for? 🎯✅AI Enthusiasts & Researchers:Push Claude’s intelligence to new heights.✅Professionals & Analysts:Get in-depth, high-quality insights.✅Developers & Power Users:Unlock settings not available on the official Claude site.What makes this different? 🚀EvenClaude Prolimits your control—this toolbreaks those barriers! Adjustthinking tokenstosupercharge extended reasoning, fine-tune every setting, and getsmarter, more strategic responsesthat outperform the default experience.How it works 🌟1️⃣Customize Claude 3.7’s settings(beyond what’s possible on the official site).2️⃣Increase thinking tokensto drastically improve deep reasoning.3️⃣Chat with Claude at peak performancefor more insightful answers.Quick Setup ⚙️ (1-3 min)🔹 Connect theClaude API.🔹 Adjust settings for ultimate AI performance.🔹 Start gettingdeeper, smarter responses instantly!Required API 🔗Claude 3.7 API (Paid)Why use this tool? 💡Unlock full customization& go beyond Claude’s default limits.Enhance extended thinkingfor more powerful reasoning.Optimize response depth, quality & accuracy.👉Take Claude 3.7 to the next level—start customizing now!", "step_by_step": [], "code_snippets": [], "tutorial_text": "🧠 NEW Claude 3.7 Extended Thinking AI Agent 🤖 – Unlock Ultimate IntelligenceSupercharge Claude 3.7 with full customization & deeper reasoning!Who is this for? 🎯✅AI Enthusiasts & Researchers:Push Claude’s intelligence to new heights.✅Professionals & Analysts:Get in-depth, high-quality insights.✅Developers & Power Users:Unlock settings not available on the official Claude site.What makes this different? 🚀EvenClaude Prolimits your control—this toolbreaks those barriers! Adjustthinking tokenstosupercharge extended reasoning, fine-tune every setting, and getsmarter, more strategic responsesthat outperform the default experience.How it works 🌟1️⃣Customize Claude 3.7’s settings(beyond what’s possible on the official site).2️⃣Increase thinking tokensto drastically improve deep reasoning.3️⃣Chat with Claude at peak performancefor more insightful answers.Quick Setup ⚙️ (1-3 min)🔹 Connect theClaude API.🔹 Adjust settings for ultimate AI performance.🔹 Start gettingdeeper, smarter responses instantly!Required API 🔗Claude 3.7 API (Paid)Why use this tool? 💡Unlock full customization& go beyond Claude’s default limits.Enhance extended thinkingfor more powerful reasoning.Optimize response depth, quality & accuracy.👉Take Claude 3.7 to the next level—start customizing now!", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3009", "workflow_id": "3009", "extracted_at": "2025-10-12T15:28:40.651319", "extractor_version": "1.0.0"}, "extraction_time": 9.272591}	2025-10-12 15:07:48.10049
2013	3008	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/google-sheets.svg", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/847eff98bf683847ee92dd56b7d8169f88e9e8f3d839590713d6eab45c59a72f?r=pg&d=retro&size=200", "https://gravatar.com/avatar/7ee0febc0cbec2f1f6b24ddec3c4322e27c82c91dc729cfecf6ce12bfddd058d?r=pg&d=retro&size=200", "https://n8n.io/nodes/google-drive.svg", "https://gravatar.com/avatar/4cda9c7c1c24fdb61896cac588296d1dad03655a439ab71ef34f4c62c0ba8524?r=pg&d=retro&size=200", "https://n8n.io/nodes/notion.svg", "https://n8n.io/nodes/google-drive-trigger.svg", "https://gravatar.com/avatar/a3f78329cbd3f3239726910fb8b0f8e5e7bb340868f57b959989e7f8d8ea1608?r=pg&d=retro&size=200", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200", "https://gravatar.com/avatar/988a46579257f9e8c522aeb7b906f1ee96e47c4298faa548e41b04957f455ae3?r=pg&d=retro&size=200", "https://gravatar.com/avatar/d41b8a0aa81139243509c58870f5b4be292824a507ab57d10ed066d8628ed8da?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "Who is this for?This workflow is ideal for businesses, accountants, and finance teams who receive bank slip images via LINE and want to automate the extraction of transaction details. It eliminates manual data entry and speeds up financial tracking.What problem does this workflow solve?Many businesses receive bank transfer slips via LINE from customers, but manually recording transaction details into spreadsheets is time-consuming and error-prone. This workflow automates the entire process, extracting structured data from the bank slips and storing it in Google Sheets for seamless record-keeping.What this workflow does:Receives bank slip images from LINE BOTExtracts transaction details (sender, receiver, amount, transaction ID) using SpaceOCRAutomatically logs extracted data into Google SheetsWorks with Standard Bank Slips & PromptPay transactionsEliminates manual data entry and reduces errorsSetup Instructions:1. PrerequisitesALINE BOTwith Messaging API enabledASpaceOCR API Key(Get fromhttps://spaceocr.com/)AGoogle Sheets accountto store extracted dataAnn8n instancerunning (Cloud or Self-hosted)2. Setup Google SheetsCreate a Google Sheet with the following structure:A (Date)\\tB (Time)\\tC (Sender)\\tD (Receiver)\\tE (Bank Name)\\tF (Amount)\\tG (Transaction ID)Ensure your Google Sheets API is enabled and connected to n8n.For an example of the required format, check this Google Sheets template:Google Sheets Template3. Configure n8n Workflow1. Webhook Node (Receives bank slip from LINE BOT)Set method:POSTSet Path:/line-webhook2. HTTP Request (Download Image from LINE Message)Retrieves image URL from the LINE message payload3. SpaceOCR Node (Extract Text from Bank Slip)Input:image URLfrom LINEAPI Key:Your SpaceOCR API Key4. Google Sheets Node (Save Transaction Data)Select your Google SheetMap extracted data (sender, receiver, amount, etc.) to the respective columns4. Deploy & TestActivate the workflow in n8nSet Webhook URL in LINE Developer ConsoleSend a test bank slip image to the LINE BOTCheck Google Sheets for extracted transaction data", "step_by_step": [], "code_snippets": [], "tutorial_text": "Who is this for?This workflow is ideal for businesses, accountants, and finance teams who receive bank slip images via LINE and want to automate the extraction of transaction details. It eliminates manual data entry and speeds up financial tracking.What problem does this workflow solve?Many businesses receive bank transfer slips via LINE from customers, but manually recording transaction details into spreadsheets is time-consuming and error-prone. This workflow automates the entire process, extracting structured data from the bank slips and storing it in Google Sheets for seamless record-keeping.What this workflow does:Receives bank slip images from LINE BOTExtracts transaction details (sender, receiver, amount, transaction ID) using SpaceOCRAutomatically logs extracted data into Google SheetsWorks with Standard Bank Slips & PromptPay transactionsEliminates manual data entry and reduces errorsSetup Instructions:1. PrerequisitesALINE BOTwith Messaging API enabledASpaceOCR API Key(Get fromhttps://spaceocr.com/)AGoogle Sheets accountto store extracted dataAnn8n instancerunning (Cloud or Self-hosted)2. Setup Google SheetsCreate a Google Sheet with the following structure:A (Date)\\tB (Time)\\tC (Sender)\\tD (Receiver)\\tE (Bank Name)\\tF (Amount)\\tG (Transaction ID)Ensure your Google Sheets API is enabled and connected to n8n.For an example of the required format, check this Google Sheets template:Google Sheets Template3. Configure n8n Workflow1. Webhook Node (Receives bank slip from LINE BOT)Set method:POSTSet Path:/line-webhook2. HTTP Request (Download Image from LINE Message)Retrieves image URL from the LINE message payload3. SpaceOCR Node (Extract Text from Bank Slip)Input:image URLfrom LINEAPI Key:Your SpaceOCR API Key4. Google Sheets Node (Save Transaction Data)Select your Google SheetMap extracted data (sender, receiver, amount, etc.) to the respective columns4. Deploy & TestActivate the workflow in n8nSet Webhook URL in LINE Developer ConsoleSend a test bank slip image to the LINE BOTCheck Google Sheets for extracted transaction data", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3008", "workflow_id": "3008", "extracted_at": "2025-10-12T15:28:39.821163", "extractor_version": "1.0.0"}, "extraction_time": 10.096732}	2025-10-12 15:07:48.10049
1992	482	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/coda.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/482-insert-data-into-a-new-row-for-a-table-in-coda", "workflow_id": "482", "extracted_at": "2025-10-12T12:41:58.036300", "extractor_version": "1.0.0"}, "extraction_time": 6.104434}	2025-10-12 11:39:23.095337
2014	3015	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3015", "workflow_id": "3015", "extracted_at": "2025-10-12T15:29:07.436236", "extractor_version": "1.0.0"}, "extraction_time": 8.182157}	2025-10-12 15:07:48.10049
2015	3013	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3013", "workflow_id": "3013", "extracted_at": "2025-10-12T15:29:07.432709", "extractor_version": "1.0.0"}, "extraction_time": 8.092264}	2025-10-12 15:07:48.10049
1993	484	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/clearbit.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/google-sheets.svg", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/e57785a112fbcca1ac70d537a9ed5c5a68be59f808ed8b36475bde0e2c8f384b?r=pg&d=retro&size=200", "https://gravatar.com/avatar/2b74c7f530e250439f5d752f2623ead4921fbb8aef56343c922b2873ef8a619f?r=pg&d=retro&size=200", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/b0a32f127a6ad690cd4ee808cb4d1b59d3b5e53410181d54f91d10c0027ebb43?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/484-look-up-a-person-using-their-email-in-clearbit", "workflow_id": "484", "extracted_at": "2025-10-12T12:41:59.335496", "extractor_version": "1.0.0"}, "extraction_time": 5.928819}	2025-10-12 11:39:23.11822
1981	497	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/drift.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/fe589e45711c79f138c00077e28d9bc41a22d79f684d203cd3fdd41e218ef6ba?r=pg&d=retro&size=200", "https://n8n.io/nodes/odoo.svg", "https://gravatar.com/avatar/a73ca84b07b557e95322815bc04859245e9243c7cfd5bf9a14568fd0ce3e72c5?r=pg&d=retro&size=200", "https://n8n.io/nodes/pipedrive.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/497-create-a-contact-in-drift", "workflow_id": "497", "extracted_at": "2025-10-12T12:40:17.336501", "extractor_version": "1.0.0"}, "extraction_time": 11.182925}	2025-10-12 11:37:48.377012
1996	481	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/todoist.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/openai-chat-model.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://gravatar.com/avatar/74234187cf4a650d53f6a86e7b03d1bcb8cfef4cbd0552eabd8d966cd808cc54?r=pg&d=retro&size=200", "https://n8n.io/nodes/telegram.svg", "https://gravatar.com/avatar/1d8dbb30401a76425734d4319abbaa38548b7572064ca080740bbfe60324772a?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/481-create-a-new-task-in-todoist", "workflow_id": "481", "extracted_at": "2025-10-12T12:42:14.330856", "extractor_version": "1.0.0"}, "extraction_time": 6.298278}	2025-10-12 11:39:42.640978
1978	499	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/vero.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/http-request.svg", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200", "https://gravatar.com/avatar/8760ed64a38ed65da42983737659c7e295e4a7f14b59ed5ce1b0b1077435f573?r=pg&d=retro&size=200", "https://n8n.io/nodes/linkedin.svg", "https://gravatar.com/avatar/018562cd36511e98b1f19a8a3f63f4232ed69998ebfa9127e62bc2b185d728b9?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/499-create-a-user-profile-in-vero", "workflow_id": "499", "extracted_at": "2025-10-12T12:39:47.353521", "extractor_version": "1.0.0"}, "extraction_time": 6.682727}	2025-10-12 11:37:30.209583
1995	479	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/microsoft-sql.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/webhook.svg", "https://n8n.io/nodes/respond-to-webhook.svg", "https://gravatar.com/avatar/5240094f838126182ceefb50ca4a3cf75cc7dc0808efd4b9920d792e41bfc45e?r=pg&d=retro&size=200", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/a551e67c6fe7affd5f882a527dee154bb6c3ac90cf878326accb3fb3ec77c8a6?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/479-execute-an-sql-query-in-microsoft-sql", "workflow_id": "479", "extracted_at": "2025-10-12T12:42:13.324456", "extractor_version": "1.0.0"}, "extraction_time": 6.303714}	2025-10-12 11:39:42.630901
1983	491	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/trello-trigger.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/microsoft-teams.svg", "https://gravatar.com/avatar/7ee0febc0cbec2f1f6b24ddec3c4322e27c82c91dc729cfecf6ce12bfddd058d?r=pg&d=retro&size=200", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/eb8eb92141f57c72c5f5a9fb5e8c85dca42047f764de54ab5466999cbb691079?r=pg&d=retro&size=200", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/6d3d2053279bc63e9be7bf4cd3fb74e13e7cc1309d32eab0b72140332cff577e?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/491-receive-updates-for-changes-in-the-specified-list-in-trello", "workflow_id": "491", "extracted_at": "2025-10-12T12:40:48.020706", "extractor_version": "1.0.0"}, "extraction_time": 6.344212}	2025-10-12 11:38:14.666139
1987	489	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/pipedrive.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/fe589e45711c79f138c00077e28d9bc41a22d79f684d203cd3fdd41e218ef6ba?r=pg&d=retro&size=200", "https://n8n.io/nodes/odoo.svg", "https://gravatar.com/avatar/a73ca84b07b557e95322815bc04859245e9243c7cfd5bf9a14568fd0ce3e72c5?r=pg&d=retro&size=200", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/489-create-a-deal-in-pipedrive", "workflow_id": "489", "extracted_at": "2025-10-12T12:41:10.326982", "extractor_version": "1.0.0"}, "extraction_time": 6.432785}	2025-10-12 11:38:33.792317
2036	40011	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/40011", "workflow_id": "40011", "extracted_at": "2025-10-12T15:25:16.416284", "extractor_version": "1.0.0"}, "extraction_time": 12.605592}	2025-10-12 15:25:43.405159
2037	40015	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/40015", "workflow_id": "40015", "extracted_at": "2025-10-12T15:25:10.250602", "extractor_version": "1.0.0"}, "extraction_time": 17.782475}	2025-10-12 15:25:43.405159
2038	40012	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/40012", "workflow_id": "40012", "extracted_at": "2025-10-12T15:25:13.117036", "extractor_version": "1.0.0"}, "extraction_time": 15.019351}	2025-10-12 15:25:43.40516
2017	3016	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/google-sheets.svg", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/e1fc0901703aede75c35d38ff26caf8e44b424893e1330efb483d68f5f67e059?r=pg&d=retro&size=200", "https://n8n.io/nodes/telegram.svg", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/4ab99e51473df76838beeaac908747f7928c625f869794815cabe34016967d51?r=pg&d=retro&size=200", "https://gravatar.com/avatar/50caca5ec3d609653f1b77216e53528b6e8412467a86c526dd0821c86253dbc1?r=pg&d=retro&size=200", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://n8n.io/nodes/openai-chat-model.svg", "https://gravatar.com/avatar/d6c9cb4d0092909e227e9de518409cdf679228a7df550714ce808d77976221af?r=pg&d=retro&size=200", "https://n8n.io/nodes/webhook.svg", "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "Attachments Gmail to Drive and Google SheetsDescriptionAutomatically process invoice emails by saving attachments to Google Drive and extracting key invoice data to Google Sheets using AI. This workflow monitors your Gmail for unread emails with attachments, saves PDFs to a specified Google Drive folder, and uses OpenAI's GPT-4o to extract invoice details (date, description, amount) into a structured spreadsheet.Use casesInvoice Management: Automatically organize and track invoices received via emailFinancial Record Keeping: Maintain a structured database of all invoice informationDocument Organization: Keep digital copies of invoices organized in Google DriveAutomated Data Entry: Eliminate manual data entry for invoice processingResourcesGmail accountGoogle Drive accountGoogle Sheets accountOpenAI API keySetup instructionsPrerequisitesActive Gmail, Google Drive, and Google Sheets accountsOpenAI API key (GPT-4o model access)n8n instance with credentials managerStepsGmail and Google Drive Setup:Connect your Gmail account in n8n credentialsConnect your Google Drive account with appropriate permissionsCreate a destination folder in Google Drive for invoice storageGoogle Sheets Setup:Connect your Google Sheets accountCreate a spreadsheet with columns: Invoice date, Invoice Description, Total price, and FicheroCopy your spreadsheet ID for configurationOpenAI Setup:Add your OpenAI API key to n8n credentialsConfigure Email Filter:Update the email filter node to match your specific sender requirementsBenefitsTime Saving: Eliminates manual downloading, filing, and data entryAccuracy: AI-powered data extraction reduces human errorOrganization: Consistent file naming and storage structureSearchability: Creates a searchable database of all invoice informationAutomation: Runs every minute to process new emails as they arriveRelated templatesEmail Parser to CRMDocument Processing WorkflowFinancial Data Automation", "step_by_step": [], "code_snippets": [], "tutorial_text": "Attachments Gmail to Drive and Google SheetsDescriptionAutomatically process invoice emails by saving attachments to Google Drive and extracting key invoice data to Google Sheets using AI. This workflow monitors your Gmail for unread emails with attachments, saves PDFs to a specified Google Drive folder, and uses OpenAI's GPT-4o to extract invoice details (date, description, amount) into a structured spreadsheet.Use casesInvoice Management: Automatically organize and track invoices received via emailFinancial Record Keeping: Maintain a structured database of all invoice informationDocument Organization: Keep digital copies of invoices organized in Google DriveAutomated Data Entry: Eliminate manual data entry for invoice processingResourcesGmail accountGoogle Drive accountGoogle Sheets accountOpenAI API keySetup instructionsPrerequisitesActive Gmail, Google Drive, and Google Sheets accountsOpenAI API key (GPT-4o model access)n8n instance with credentials managerStepsGmail and Google Drive Setup:Connect your Gmail account in n8n credentialsConnect your Google Drive account with appropriate permissionsCreate a destination folder in Google Drive for invoice storageGoogle Sheets Setup:Connect your Google Sheets accountCreate a spreadsheet with columns: Invoice date, Invoice Description, Total price, and FicheroCopy your spreadsheet ID for configurationOpenAI Setup:Add your OpenAI API key to n8n credentialsConfigure Email Filter:Update the email filter node to match your specific sender requirementsBenefitsTime Saving: Eliminates manual downloading, filing, and data entryAccuracy: AI-powered data extraction reduces human errorOrganization: Consistent file naming and storage structureSearchability: Creates a searchable database of all invoice informationAutomation: Runs every minute to process new emails as they arriveRelated templatesEmail Parser to CRMDocument Processing WorkflowFinancial Data Automation", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3016", "workflow_id": "3016", "extracted_at": "2025-10-12T15:29:12.022969", "extractor_version": "1.0.0"}, "extraction_time": 7.893165}	2025-10-12 15:07:48.100491
2018	3014	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/github.svg", "https://n8n.io/nodes/webhook.svg", "https://gravatar.com/avatar/4ad55fbdcc7808056aa180c02d52e3e373d4b894df7fa986e2dfd6c7eb127bfc?r=pg&d=retro&size=200", "https://n8n.io/nodes/code.svg", "https://n8n.io/nodes/google-sheets.svg", "https://n8n.io/nodes/http-request.svg", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/5240094f838126182ceefb50ca4a3cf75cc7dc0808efd4b9920d792e41bfc45e?r=pg&d=retro&size=200", "https://gravatar.com/avatar/8760ed64a38ed65da42983737659c7e295e4a7f14b59ed5ce1b0b1077435f573?r=pg&d=retro&size=200", "https://gravatar.com/avatar/4ab99e51473df76838beeaac908747f7928c625f869794815cabe34016967d51?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "🔥n8n Members Sale – n8n Community Members Get ideoGener8r for Just $10!(Reg. $15)Use Coupon Code:FeelinTheFlowgramming(Valid for n8n community members)💪 How it worksSeamlessly track, manage, and version-control yourn8n workflowswith an intuitive Git-style system. Whether you're making updates or creating new workflows, this tool ensures structured commits, detailed change tracking, and seamless GitHub integration—all within aMatrix-inspired UI.🎯Who is this for?Perfect for:n8n Developers & Automation Engineers– Maintain workflow history and prevent accidental overwrites.Teams Collaborating on Automation– Track and commit changes with structured version control.DevOps & IT Professionals– Streamline deployment across multiple n8n environments.🚀Key FeaturesVersion Control & Workflow ManagementCommit changes when editing existing workflowsCreate & commit new workflows from scratchDetect modifications withdeep node comparisonAccess repo withdirect linksfrom changes windowWorkflow JSON Browser Caching **to avoid large loads on n8n\\"Core FeaturesWorkflow ManagementWorkflow Selection: Easy selection of n8n workflows and GitHub workflows from dropdown menusSmart Caching: Client-side caching of workflows for faster loading (1-week cache duration)Cache Control: Manual cache clearing via hard refresh (Cmd+Shift+R)Matrix-Style UI: Terminal-inspired interface with glowing effects and animationsGitHub IntegrationPush to GitHub: Direct pushing of n8n workflows to GitHub repositoriesCommit Control: Automated commit message generation with workflow detailsBranch Management: Automatic branch creation and managementPull from GitHub: Future feature for pulling workflows from GitHub (Coming Soon)Workflow ComparisonSide-by-Side Comparison: Compare n8n workflows with their GitHub counterpartsChange Detection: Automatic detection and highlighting of workflow changesDiff Visualization: Clear visualization of additions, deletions, and modificationsJSON Validation: Ensures workflow JSON integrity before operationsUser ExperienceSystem Notifications: Matrix-themed toast notifications for important alerts30-second duration with manual close optionContext-aware messages (e.g., cache refresh hints)Glowing effects matching system console aestheticsLoading Animations: Matrix-style loading indicators during operationsError Handling: Clear error messages and recovery suggestionsResponsive Design: Adapts to different screen sizesSecurity & PerformanceLocal Storage: Efficient client-side storage for workflow dataHeader Authentication: Secure API communication with authentication tokensPerformance Optimization: Smart caching to reduce server loadData Validation: Input validation and sanitizationTechnical FeaturesCode OrganizationModular Structure: Well-organized HTML, CSS, and JavaScriptComponent Separation: Clear separation of concernsCSS Variables: Consistent styling with CSS custom propertiesEvent Handling: Robust event listeners and handlersAPI Integrationn8n Integration: Direct communication with n8n workflow APIGitHub API: Seamless integration with GitHub repositoriesRESTful Endpoints: Clean API design for workflow operationsError Handling: Comprehensive error handling and user feedbackDevelopment FeaturesDebug Mode: Console logging for developmentCode Comments: Well-documented code sectionsCSS Animations: Smooth transitions and effectsBrowser Compatibility: Works across modern browsersFuture EnhancementsPull workflows from GitHub repositoriesEnhanced diff visualizationAdditional GitHub integration featuresExtended caching optionsMore customization options for notificationsAdvanced workflow comparison toolsGitHub IntegrationPush workflows directly to GitHubCommit new workflows directly to GitHubAuto-generate structured commit messagesPull workflows from GitHub into n8nChange DetectionIdentifies node additions, deletions, and property modificationsCompares connections, settings, and configurationsReal-time visualizationof detected changesSleek UI for Effortless ControlMatrix-style interfacefor a futuristic feelClear prompts to prevent accidental overwritesInteractive workflow commit & sync options🔧Setup & UsageGenerate your n8n API keySet up GitHub repository & access tokensCreate Generic Basic Auth credentialsCreate Generic Header Auth credentialsSet the workflow variablesDeploy & start tracking your workflow versions📚Use Cases🔹Workflow Development– Ensure clean versioning and commit history.🔹Team Collaboration– Review and track modifications before deployment.🔹Audit & Compliance– Maintain an organized change log.🙌Built for the n8n CommunityCreated with ❤️ to bringreliable version controlto the n8n community.", "step_by_step": [], "code_snippets": [], "tutorial_text": "🔥n8n Members Sale – n8n Community Members Get ideoGener8r for Just $10!(Reg. $15)Use Coupon Code:FeelinTheFlowgramming(Valid for n8n community members)💪 How it worksSeamlessly track, manage, and version-control yourn8n workflowswith an intuitive Git-style system. Whether you're making updates or creating new workflows, this tool ensures structured commits, detailed change tracking, and seamless GitHub integration—all within aMatrix-inspired UI.🎯Who is this for?Perfect for:n8n Developers & Automation Engineers– Maintain workflow history and prevent accidental overwrites.Teams Collaborating on Automation– Track and commit changes with structured version control.DevOps & IT Professionals– Streamline deployment across multiple n8n environments.🚀Key FeaturesVersion Control & Workflow ManagementCommit changes when editing existing workflowsCreate & commit new workflows from scratchDetect modifications withdeep node comparisonAccess repo withdirect linksfrom changes windowWorkflow JSON Browser Caching **to avoid large loads on n8n\\"Core FeaturesWorkflow ManagementWorkflow Selection: Easy selection of n8n workflows and GitHub workflows from dropdown menusSmart Caching: Client-side caching of workflows for faster loading (1-week cache duration)Cache Control: Manual cache clearing via hard refresh (Cmd+Shift+R)Matrix-Style UI: Terminal-inspired interface with glowing effects and animationsGitHub IntegrationPush to GitHub: Direct pushing of n8n workflows to GitHub repositoriesCommit Control: Automated commit message generation with workflow detailsBranch Management: Automatic branch creation and managementPull from GitHub: Future feature for pulling workflows from GitHub (Coming Soon)Workflow ComparisonSide-by-Side Comparison: Compare n8n workflows with their GitHub counterpartsChange Detection: Automatic detection and highlighting of workflow changesDiff Visualization: Clear visualization of additions, deletions, and modificationsJSON Validation: Ensures workflow JSON integrity before operationsUser ExperienceSystem Notifications: Matrix-themed toast notifications for important alerts30-second duration with manual close optionContext-aware messages (e.g., cache refresh hints)Glowing effects matching system console aestheticsLoading Animations: Matrix-style loading indicators during operationsError Handling: Clear error messages and recovery suggestionsResponsive Design: Adapts to different screen sizesSecurity & PerformanceLocal Storage: Efficient client-side storage for workflow dataHeader Authentication: Secure API communication with authentication tokensPerformance Optimization: Smart caching to reduce server loadData Validation: Input validation and sanitizationTechnical FeaturesCode OrganizationModular Structure: Well-organized HTML, CSS, and JavaScriptComponent Separation: Clear separation of concernsCSS Variables: Consistent styling with CSS custom propertiesEvent Handling: Robust event listeners and handlersAPI Integrationn8n Integration: Direct communication with n8n workflow APIGitHub API: Seamless integration with GitHub repositoriesRESTful Endpoints: Clean API design for workflow operationsError Handling: Comprehensive error handling and user feedbackDevelopment FeaturesDebug Mode: Console logging for developmentCode Comments: Well-documented code sectionsCSS Animations: Smooth transitions and effectsBrowser Compatibility: Works across modern browsersFuture EnhancementsPull workflows from GitHub repositoriesEnhanced diff visualizationAdditional GitHub integration featuresExtended caching optionsMore customization options for notificationsAdvanced workflow comparison toolsGitHub IntegrationPush workflows directly to GitHubCommit new workflows directly to GitHubAuto-generate structured commit messagesPull workflows from GitHub into n8nChange DetectionIdentifies node additions, deletions, and property modificationsCompares connections, settings, and configurationsReal-time visualizationof detected changesSleek UI for Effortless ControlMatrix-style interfacefor a futuristic feelClear prompts to prevent accidental overwritesInteractive workflow commit & sync options🔧Setup & UsageGenerate your n8n API keySet up GitHub repository & access tokensCreate Generic Basic Auth credentialsCreate Generic Header Auth credentialsSet the workflow variablesDeploy & start tracking your workflow versions📚Use Cases🔹Workflow Development– Ensure clean versioning and commit history.🔹Team Collaboration– Review and track modifications before deployment.🔹Audit & Compliance– Maintain an organized change log.🙌Built for the n8n CommunityCreated with ❤️ to bringreliable version controlto the n8n community.", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3014", "workflow_id": "3014", "extracted_at": "2025-10-12T15:29:11.147678", "extractor_version": "1.0.0"}, "extraction_time": 8.183743}	2025-10-12 15:07:48.100491
1980	496	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/zendesk.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/gmail.svg", "https://gravatar.com/avatar/2fba0be00731d911f64fdf32d28cf0ae59830ee1d42ad0e415d3ea53c0d5a802?r=pg&d=retro&size=200", "https://gravatar.com/avatar/19e625b50be6c5e0f734a6e837828341ade4fa64ca3d52321ed95ead0bf4c270?r=pg&d=retro&size=200", "https://n8n.io/nodes/gmail-trigger.svg", "https://gravatar.com/avatar/4379157f99b51bf25676c43d031eaf1d4edcbcb3c3f1bd69be098b8948336bd2?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/496-create-a-ticket-in-zendesk", "workflow_id": "496", "extracted_at": "2025-10-12T12:40:17.256579", "extractor_version": "1.0.0"}, "extraction_time": 11.182704}	2025-10-12 11:37:47.364326
1986	488	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/activecampaign-trigger.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/fe589e45711c79f138c00077e28d9bc41a22d79f684d203cd3fdd41e218ef6ba?r=pg&d=retro&size=200", "https://n8n.io/nodes/odoo.svg", "https://gravatar.com/avatar/a73ca84b07b557e95322815bc04859245e9243c7cfd5bf9a14568fd0ce3e72c5?r=pg&d=retro&size=200", "https://n8n.io/nodes/pipedrive.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/488-receive-updates-when-a-new-account-is-added-by-an-admin-in-activecampaign", "workflow_id": "488", "extracted_at": "2025-10-12T12:41:06.628612", "extractor_version": "1.0.0"}, "extraction_time": 5.911685}	2025-10-12 11:38:33.383345
1994	483	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/chargebee.png", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/fe589e45711c79f138c00077e28d9bc41a22d79f684d203cd3fdd41e218ef6ba?r=pg&d=retro&size=200", "https://n8n.io/nodes/odoo.svg", "https://gravatar.com/avatar/a73ca84b07b557e95322815bc04859245e9243c7cfd5bf9a14568fd0ce3e72c5?r=pg&d=retro&size=200", "https://n8n.io/nodes/pipedrive.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/483-create-a-new-customer-in-chargebee", "workflow_id": "483", "extracted_at": "2025-10-12T12:41:57.746284", "extractor_version": "1.0.0"}, "extraction_time": 5.721414}	2025-10-12 11:39:23.243266
1989	487	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/clickup-trigger.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/microsoft-teams.svg", "https://gravatar.com/avatar/7ee0febc0cbec2f1f6b24ddec3c4322e27c82c91dc729cfecf6ce12bfddd058d?r=pg&d=retro&size=200", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/eb8eb92141f57c72c5f5a9fb5e8c85dca42047f764de54ab5466999cbb691079?r=pg&d=retro&size=200", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/6d3d2053279bc63e9be7bf4cd3fb74e13e7cc1309d32eab0b72140332cff577e?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/487-receive-updates-for-events-in-clickup", "workflow_id": "487", "extracted_at": "2025-10-12T12:41:30.041868", "extractor_version": "1.0.0"}, "extraction_time": 9.081973}	2025-10-12 11:38:55.083089
1990	486	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/chargebee-trigger.png", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/fe589e45711c79f138c00077e28d9bc41a22d79f684d203cd3fdd41e218ef6ba?r=pg&d=retro&size=200", "https://n8n.io/nodes/odoo.svg", "https://gravatar.com/avatar/a73ca84b07b557e95322815bc04859245e9243c7cfd5bf9a14568fd0ce3e72c5?r=pg&d=retro&size=200", "https://n8n.io/nodes/pipedrive.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/486-receive-updates-for-events-in-chargebee", "workflow_id": "486", "extracted_at": "2025-10-12T12:41:29.128647", "extractor_version": "1.0.0"}, "extraction_time": 10.011265}	2025-10-12 11:38:55.539441
1991	485	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/clickup.svg", "https://gravatar.com/avatar/0cef0266ab81fd7159b2d3d681aeb30fe1953b287de10f3e6d60e58d866ad0b0?r=pg&d=retro&size=200", "https://n8n.io/nodes/disqus.png", "https://n8n.io/nodes/drift.svg", "https://n8n.io/nodes/vero.svg", "https://n8n.io/nodes/microsoft-teams.svg", "https://gravatar.com/avatar/7ee0febc0cbec2f1f6b24ddec3c4322e27c82c91dc729cfecf6ce12bfddd058d?r=pg&d=retro&size=200", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/eb8eb92141f57c72c5f5a9fb5e8c85dca42047f764de54ab5466999cbb691079?r=pg&d=retro&size=200", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/6d3d2053279bc63e9be7bf4cd3fb74e13e7cc1309d32eab0b72140332cff577e?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/485-create-a-task-in-clickup", "workflow_id": "485", "extracted_at": "2025-10-12T12:41:40.424890", "extractor_version": "1.0.0"}, "extraction_time": 5.745735}	2025-10-12 11:38:55.552263
2004	3006	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3006", "workflow_id": "3006", "extracted_at": "2025-10-12T15:28:05.337985", "extractor_version": "1.0.0"}, "extraction_time": 6.402086}	2025-10-12 15:07:48.100486
2001	3000	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3000", "workflow_id": "3000", "extracted_at": "2025-10-12T15:03:05.688172", "extractor_version": "1.0.0"}, "extraction_time": 5.955308}	2025-10-12 14:46:17.939756
2003	3002	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/webhook.svg", "https://gravatar.com/avatar/08ed50db1d4c1a045dcf08a66ed03b89a552e492860fafce317e84cab17b0613?r=pg&d=retro&size=200", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_2dedd5832a.png", "https://n8n.io/nodes/respond-to-webhook.svg", "https://gravatar.com/avatar/5240094f838126182ceefb50ca4a3cf75cc7dc0808efd4b9920d792e41bfc45e?r=pg&d=retro&size=200", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/a551e67c6fe7affd5f882a527dee154bb6c3ac90cf878326accb3fb3ec77c8a6?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "Dynamically Run SuiteQL Queries in NetSuite via HTTP Webhook in n8nImportant:This template uses a NetSuite community node, so it only works onself-hosted n8n. Cloud-based n8n instances currently do not support community nodes.SummaryThis workflow template allows you todynamically run SuiteQL queries in NetSuiteby sending an HTTP request to an n8n Webhook node. Once triggered, the workflow uses token-based authentication to execute your SuiteQL query and returns the results as JSON. This makes it easy to integrate real-time NetSuite data into dashboards, reporting tools, or other applications.Who Is This For?Developers & Integrators: Easily embed NetSuite data retrieval into custom apps or internal tools.Enterprises & Consultants: Integrate dynamic reporting or data enrichment from NetSuite without manual exports.System Administrators: Automate routine queries and reduce manual intervention.Use Cases & Benefits1. Dynamic Data AccessSend any SuiteQL query on demand instead of hardcoding queries or manually running reports.2. Seamless IntegrationQuickly pull NetSuite data into front-end systems (like Excel dashboards, custom web apps, or internal tools) by calling the webhook endpoint.3. Simplified ReportingAutomate data extraction and formatting, reducing the need for manual exports and improving efficiency.How It WorksTrigger:An HTTP request to the webhook node initiates the workflow.Input Processing:The workflow reads the SuiteQL query from the incoming request parameter (suiteql).Query Execution:The NetSuite node uses your token-based authentication credentials to run the SuiteQL query.Response:Results are returned as JSON in the HTTP response, ready for further processing or immediate consumption.Prerequisites & SetupNetSuite Community NodeThis workflow requires the NetSuite community node. Make sure yourself-hostedn8n instance supports community nodes.NetSuite Token-Based AuthenticationEnable TBA in NetSuite. Obtain the required consumer key, consumer secret, token ID, and token secret.n8n WebhookCopy the auto-generated webhook URL (e.g.http://&lt;your-n8n-domain&gt;/webhook/unique-id) from the Webhook node.UsageSend an HTTP GET or POST request to the webhook with your SuiteQL query. For example:curl \\"http://&lt;your-n8n-domain&gt;/webhook/unique-id?suiteql=SELECT%20*%20FROM%20account%20LIMIT%2010\\"The workflow will execute the query and return JSON data.CustomizationChange the Query:Simply adjust thesuiteqlparameter in your HTTP request to run different SuiteQL statements.Data Transformation:Insert nodes (e.g., Function, Set, or Format) to modify or reformat the data before returning it.Extend Integration:Chain additional nodes to push the retrieved data to other services (Google Sheets, Slack, custom dashboards, etc.).Additional NotesRemember that this template isonly compatible with self-hosted n8nbecause it uses a community node. -netsuite community nodeIf you have questions, suggestions, or need support, contact us atsupport@dataants.org.", "step_by_step": [], "code_snippets": [{"id": "snippet-1", "code": "curl \\"http://&lt;your-n8n-domain&gt;/webhook/unique-id?suiteql=SELECT%20*%20FROM%20account%20LIMIT%2010\\"\\n", "language": "unknown", "description": ""}], "tutorial_text": "Dynamically Run SuiteQL Queries in NetSuite via HTTP Webhook in n8nImportant:This template uses a NetSuite community node, so it only works onself-hosted n8n. Cloud-based n8n instances currently do not support community nodes.SummaryThis workflow template allows you todynamically run SuiteQL queries in NetSuiteby sending an HTTP request to an n8n Webhook node. Once triggered, the workflow uses token-based authentication to execute your SuiteQL query and returns the results as JSON. This makes it easy to integrate real-time NetSuite data into dashboards, reporting tools, or other applications.Who Is This For?Developers & Integrators: Easily embed NetSuite data retrieval into custom apps or internal tools.Enterprises & Consultants: Integrate dynamic reporting or data enrichment from NetSuite without manual exports.System Administrators: Automate routine queries and reduce manual intervention.Use Cases & Benefits1. Dynamic Data AccessSend any SuiteQL query on demand instead of hardcoding queries or manually running reports.2. Seamless IntegrationQuickly pull NetSuite data into front-end systems (like Excel dashboards, custom web apps, or internal tools) by calling the webhook endpoint.3. Simplified ReportingAutomate data extraction and formatting, reducing the need for manual exports and improving efficiency.How It WorksTrigger:An HTTP request to the webhook node initiates the workflow.Input Processing:The workflow reads the SuiteQL query from the incoming request parameter (suiteql).Query Execution:The NetSuite node uses your token-based authentication credentials to run the SuiteQL query.Response:Results are returned as JSON in the HTTP response, ready for further processing or immediate consumption.Prerequisites & SetupNetSuite Community NodeThis workflow requires the NetSuite community node. Make sure yourself-hostedn8n instance supports community nodes.NetSuite Token-Based AuthenticationEnable TBA in NetSuite. Obtain the required consumer key, consumer secret, token ID, and token secret.n8n WebhookCopy the auto-generated webhook URL (e.g.http://&lt;your-n8n-domain&gt;/webhook/unique-id) from the Webhook node.UsageSend an HTTP GET or POST request to the webhook with your SuiteQL query. For example:curl \\"http://&lt;your-n8n-domain&gt;/webhook/unique-id?suiteql=SELECT%20*%20FROM%20account%20LIMIT%2010\\"The workflow will execute the query and return JSON data.CustomizationChange the Query:Simply adjust thesuiteqlparameter in your HTTP request to run different SuiteQL statements.Data Transformation:Insert nodes (e.g., Function, Set, or Format) to modify or reformat the data before returning it.Extend Integration:Chain additional nodes to push the retrieved data to other services (Google Sheets, Slack, custom dashboards, etc.).Additional NotesRemember that this template isonly compatible with self-hosted n8nbecause it uses a community node. -netsuite community nodeIf you have questions, suggestions, or need support, contact us atsupport@dataants.org.", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3002", "workflow_id": "3002", "extracted_at": "2025-10-12T15:03:07.980978", "extractor_version": "1.0.0"}, "extraction_time": 5.697614}	2025-10-12 14:46:17.939759
1997	2463	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/google-sheets.svg", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/0437c659b1ec6916896ebb30cc237391f0e1de89df5465c103e12d2cb12ce42d?r=pg&d=retro&size=200", "https://gravatar.com/avatar/e57785a112fbcca1ac70d537a9ed5c5a68be59f808ed8b36475bde0e2c8f384b?r=pg&d=retro&size=200", "https://gravatar.com/avatar/2b74c7f530e250439f5d752f2623ead4921fbb8aef56343c922b2873ef8a619f?r=pg&d=retro&size=200", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/b0a32f127a6ad690cd4ee808cb4d1b59d3b5e53410181d54f91d10c0027ebb43?r=pg&d=retro&size=200", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://n8n.io/nodes/openai-chat-model.svg", "https://gravatar.com/avatar/d6c9cb4d0092909e227e9de518409cdf679228a7df550714ce808d77976221af?r=pg&d=retro&size=200", "https://n8n.io/nodes/webhook.svg", "https://n8n.io/nodes/telegram.svg", "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "This workflow demonstrates how to enrich data from a list of companies in a spreadsheet. While this workflow is production-ready if all steps are followed, adding error handling would enhance its robustness.Important notesCheck legal regulations: This workflow involves scraping, so make sure to check the legal regulations around scraping in your country before getting started. Better safe than sorry!Mind those tokens: OpenAI tokens can add up fast, so keep an eye on usage unless you want a surprising bill that could knock your socks off! 💸Main WorkflowNode 1 -WebhookThis node triggers the workflow via a webhook call. You can replace it with any other trigger of your choice, such as form submission, a new row added in Google Sheets, or a manual trigger.Node 2 -Get Rows from Google SheetThis node retrieves the list of companies from your spreadsheet.here is theGoogle Sheet Template you can use.The columns in this Google Sheet are:Company: The name of the companyWebsite: The website URL of the companyThese two fields are required at this step.Business Area: The business area deduced by OpenAI from the scraped dataOffer: The offer deduced by OpenAI from the scraped dataValue Proposition: The value proposition deduced by OpenAI from the scraped dataBusiness Model: The business model deduced by OpenAI from the scraped dataICP: The Ideal Customer Profile deduced by OpenAI from the scraped dataAdditional Information: Information related to the scraped data, including:Information Sufficiency:Description: Indicates if the information was sufficient to provide a full analysis.Options: \\"Sufficient\\" or \\"Insufficient\\"Insufficient Details:Description: If labeled \\"Insufficient,\\" specifies what information was missing or needed to complete the analysis.Mismatched Content:Description: Indicates whether the page content aligns with that of a typical company page.Suggested Actions:Description: Provides recommendations if the page content is insufficient or mismatched, such as verifying the URL or searching for alternative sources.Node 3 -Loop Over ItemsThis node ensures that, in subsequent steps, the website in \\"extra workflow input\\" corresponds to the row being processed. You can delete this node, but you'll need to ensure that the \\"query\\" sent to the scraping workflow corresponds to the website of the specific company being scraped (rather than just the first row).Node 4 -AI AgentThis AI agent is configured with a prompt to extract data from the content it receives. The node has three sub-nodes:OpenAI Chat Model: The model used is currentlygpt4-o-mini.Call n8n Workflow: This sub-node calls the workflow to use ScrapingBee and retrieves the scraped data.Structured Output Parser: This parser structures the output for clarity and ease of use, and then adds rows to the Google Sheet.Node 5 -Update Company Row in Google SheetThis node updates the specific company's row in Google Sheets with the enriched data.Scraper Agent WorkflowNode 1 -Tool Called from AgentThis is the trigger for when the AI Agent calls the Scraper. A query is sent with:Company nameWebsite (the URL of the website)Node 2 -Set Company URLThis node renames a field, which may seem trivial but is useful for performing transformations on data received from the AI Agent.Node 3 -ScrapingBee: Scrape Company's WebsiteThis node scrapes data from the URL provided using ScrapingBee. You can use any scraper of your choice, but ScrapingBee is recommended, as it allows you to configure scraper behavior directly. Once configured, copy the provided \\"curl\\" command and import it into n8n.Node 4 -HTML to MarkdownThis node converts the scraped HTML data to Markdown, which is then sent to OpenAI. The Markdown format generally uses fewer tokens than HTML.Improving the WorkflowIt's always a pleasure to share workflows, but creators sometimes want to keep some magic to themselves ✨. Here are some ways you can enhance this workflow:Handle potential errorsConfigure the scraper tool to scrape other pages on the website. Although this will cost more tokens, it can be useful (e.g., scraping \\"Pricing\\" or \\"About Us\\" pages in addition to the homepage).Instead of Google Sheets, connect directly to your CRM to enrich company data.Trigger the workflow from form submissions on your website and send the scraped data about the lead to a Slack or Teams channel.", "step_by_step": [], "code_snippets": [], "tutorial_text": "This workflow demonstrates how to enrich data from a list of companies in a spreadsheet. While this workflow is production-ready if all steps are followed, adding error handling would enhance its robustness.Important notesCheck legal regulations: This workflow involves scraping, so make sure to check the legal regulations around scraping in your country before getting started. Better safe than sorry!Mind those tokens: OpenAI tokens can add up fast, so keep an eye on usage unless you want a surprising bill that could knock your socks off! 💸Main WorkflowNode 1 -WebhookThis node triggers the workflow via a webhook call. You can replace it with any other trigger of your choice, such as form submission, a new row added in Google Sheets, or a manual trigger.Node 2 -Get Rows from Google SheetThis node retrieves the list of companies from your spreadsheet.here is theGoogle Sheet Template you can use.The columns in this Google Sheet are:Company: The name of the companyWebsite: The website URL of the companyThese two fields are required at this step.Business Area: The business area deduced by OpenAI from the scraped dataOffer: The offer deduced by OpenAI from the scraped dataValue Proposition: The value proposition deduced by OpenAI from the scraped dataBusiness Model: The business model deduced by OpenAI from the scraped dataICP: The Ideal Customer Profile deduced by OpenAI from the scraped dataAdditional Information: Information related to the scraped data, including:Information Sufficiency:Description: Indicates if the information was sufficient to provide a full analysis.Options: \\"Sufficient\\" or \\"Insufficient\\"Insufficient Details:Description: If labeled \\"Insufficient,\\" specifies what information was missing or needed to complete the analysis.Mismatched Content:Description: Indicates whether the page content aligns with that of a typical company page.Suggested Actions:Description: Provides recommendations if the page content is insufficient or mismatched, such as verifying the URL or searching for alternative sources.Node 3 -Loop Over ItemsThis node ensures that, in subsequent steps, the website in \\"extra workflow input\\" corresponds to the row being processed. You can delete this node, but you'll need to ensure that the \\"query\\" sent to the scraping workflow corresponds to the website of the specific company being scraped (rather than just the first row).Node 4 -AI AgentThis AI agent is configured with a prompt to extract data from the content it receives. The node has three sub-nodes:OpenAI Chat Model: The model used is currentlygpt4-o-mini.Call n8n Workflow: This sub-node calls the workflow to use ScrapingBee and retrieves the scraped data.Structured Output Parser: This parser structures the output for clarity and ease of use, and then adds rows to the Google Sheet.Node 5 -Update Company Row in Google SheetThis node updates the specific company's row in Google Sheets with the enriched data.Scraper Agent WorkflowNode 1 -Tool Called from AgentThis is the trigger for when the AI Agent calls the Scraper. A query is sent with:Company nameWebsite (the URL of the website)Node 2 -Set Company URLThis node renames a field, which may seem trivial but is useful for performing transformations on data received from the AI Agent.Node 3 -ScrapingBee: Scrape Company's WebsiteThis node scrapes data from the URL provided using ScrapingBee. You can use any scraper of your choice, but ScrapingBee is recommended, as it allows you to configure scraper behavior directly. Once configured, copy the provided \\"curl\\" command and import it into n8n.Node 4 -HTML to MarkdownThis node converts the scraped HTML data to Markdown, which is then sent to OpenAI. The Markdown format generally uses fewer tokens than HTML.Improving the WorkflowIt's always a pleasure to share workflows, but creators sometimes want to keep some magic to themselves ✨. Here are some ways you can enhance this workflow:Handle potential errorsConfigure the scraper tool to scrape other pages on the website. Although this will cost more tokens, it can be useful (e.g., scraping \\"Pricing\\" or \\"About Us\\" pages in addition to the homepage).Instead of Google Sheets, connect directly to your CRM to enrich company data.Trigger the workflow from form submissions on your website and send the scraped data about the lead to a Slack or Teams channel.", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/2463", "workflow_id": "2463", "extracted_at": "2025-10-12T14:44:04.253153", "extractor_version": "1.0.0"}, "extraction_time": 7.196161}	2025-10-12 14:22:36.387153
1998	2465	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/4ab99e51473df76838beeaac908747f7928c625f869794815cabe34016967d51?r=pg&d=retro&size=200", "https://n8n.io/nodes/google-sheets.svg", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/4cda9c7c1c24fdb61896cac588296d1dad03655a439ab71ef34f4c62c0ba8524?r=pg&d=retro&size=200", "https://n8n.io/nodes/webhook.svg", "https://n8n.io/nodes/respond-to-webhook.svg", "https://gravatar.com/avatar/3cbbb9fa4e67c10b37fb59f284938c393e1cc1544f6307d0f2ca7ee3dedcdf43?r=pg&d=retro&size=200", "https://n8n.io/nodes/openai-chat-model.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://gravatar.com/avatar/74234187cf4a650d53f6a86e7b03d1bcb8cfef4cbd0552eabd8d966cd808cc54?r=pg&d=retro&size=200", "https://gravatar.com/avatar/a551e67c6fe7affd5f882a527dee154bb6c3ac90cf878326accb3fb3ec77c8a6?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "This n8n template builds a simple WhatsApp chabot acting as a Sales Agent. The Agent is backed by a product catalog vector store to better answer user's questions.This template is intended to help introduce n8n users interested in building with WhatsApp.How it worksThis template is in 2 parts: creating the product catalog vector store and building the WhatsApp AI chatbot.A product brochure is imported via HTTP request node and its text contents extracted.The text contents are then uploaded to the in-memory vector store to build a knowledgebase for the chatbot.A WhatsApp trigger is used to capture messages from customers where non-text messages are filtered out.The customer's message is sent to the AI Agent which queries the product catalogue using the vector store tool.The Agent's response is sent back to the user via the WhatsApp node.How to useOnce you've setup and configured your WhatsApp account and credentialsFirst, populate the vector store by clicking the \\"Test Workflow\\" button.Next, activate the workflow to enable the WhatsApp chatbot.Message your designated WhatsApp number and you should receive a message from the AI sales agent.Tweak datasource and behaviour as required.RequirementsWhatsApp Business AccountOpenAI for LLMCustomising this workflowUpgrade the vector store toQdrantfor persistance and production use-cases.Handle different WhatsApp message types for a more rich and engaging experience for customers.", "step_by_step": [], "code_snippets": [], "tutorial_text": "This n8n template builds a simple WhatsApp chabot acting as a Sales Agent. The Agent is backed by a product catalog vector store to better answer user's questions.This template is intended to help introduce n8n users interested in building with WhatsApp.How it worksThis template is in 2 parts: creating the product catalog vector store and building the WhatsApp AI chatbot.A product brochure is imported via HTTP request node and its text contents extracted.The text contents are then uploaded to the in-memory vector store to build a knowledgebase for the chatbot.A WhatsApp trigger is used to capture messages from customers where non-text messages are filtered out.The customer's message is sent to the AI Agent which queries the product catalogue using the vector store tool.The Agent's response is sent back to the user via the WhatsApp node.How to useOnce you've setup and configured your WhatsApp account and credentialsFirst, populate the vector store by clicking the \\"Test Workflow\\" button.Next, activate the workflow to enable the WhatsApp chatbot.Message your designated WhatsApp number and you should receive a message from the AI sales agent.Tweak datasource and behaviour as required.RequirementsWhatsApp Business AccountOpenAI for LLMCustomising this workflowUpgrade the vector store toQdrantfor persistance and production use-cases.Handle different WhatsApp message types for a more rich and engaging experience for customers.", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/2465", "workflow_id": "2465", "extracted_at": "2025-10-12T14:44:04.552682", "extractor_version": "1.0.0"}, "extraction_time": 7.820127}	2025-10-12 14:22:36.387155
1999	2464	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/airtable.svg", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/4ab99e51473df76838beeaac908747f7928c625f869794815cabe34016967d51?r=pg&d=retro&size=200", "https://n8n.io/nodes/google-sheets.svg", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/7ee0febc0cbec2f1f6b24ddec3c4322e27c82c91dc729cfecf6ce12bfddd058d?r=pg&d=retro&size=200", "https://n8n.io/nodes/google-drive.svg", "https://gravatar.com/avatar/4cda9c7c1c24fdb61896cac588296d1dad03655a439ab71ef34f4c62c0ba8524?r=pg&d=retro&size=200", "https://n8n.io/nodes/notion.svg", "https://n8n.io/nodes/google-drive-trigger.svg", "https://gravatar.com/avatar/a3f78329cbd3f3239726910fb8b0f8e5e7bb340868f57b959989e7f8d8ea1608?r=pg&d=retro&size=200", "https://gravatar.com/avatar/a73ca84b07b557e95322815bc04859245e9243c7cfd5bf9a14568fd0ce3e72c5?r=pg&d=retro&size=200", "https://n8n.io/nodes/binary-input-loader.svg", "https://n8n.io/nodes/openai-chat-model.svg", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "Are you a popular tech startup accelerator (named after a particular higher order function) overwhelmed with 1000s of pitch decks on a daily basis? Wish you could filter through them quickly using AI but the decks are unparseable through conventional means? Then you're in luck!This n8n template uses Multimodal LLMs to parse and extract valuable data from even the most overly designed pitch decks in quick fashion. Not only that, it'll also create the foundations of a RAG chatbot at the end so you or your colleagues can drill down into the details if needed. With this template, you'll scale your capacity to find interesting companies you'd otherwise miss!Requires n8n v1.62.1+How It WorksAirtable is used as the pitch deck database and PDF decks are downloaded from it.An AI Vision model is used to transcribe each page of the pitch deck into markdown.An Information Extractor is used to generate a report from the transcribed markdown and update required information back into pitch deck database.The transcribed markdown is also uploaded to a vector store to build an AI chatbot which can be used to ask questions on the pitch deck.Check out the sample Airtable here:https://airtable.com/appCkqc2jc3MoVqDO/shrS21vGqlnqzzNUcHow To UseThis template depends on the availability of the Airtable - make a duplicate of the airtable (link) and its columns before running the workflow.When a new pitchdeck is received, enter the company name into theNamecolumn and upload the pdf into theFilecolumn. Leave all other columns blank.If you have the Airtable trigger active, the execution should start immediately once the file is uploaded. Otherwise, click the manual test trigger to start the workflow.When manually triggered, all \\"new\\" pitch decks will be handled by the workflow as separate executions.RequirementsOpenAI for LLMAirtable For Database and InterfaceQdrant for Vector StoreCustomising This WorkflowExtend this starter template by adding more AI agents to validate claims made in the pitch deck eg. Linkedin Profiles, Page visits, Reviews etc.", "step_by_step": [], "code_snippets": [], "tutorial_text": "Are you a popular tech startup accelerator (named after a particular higher order function) overwhelmed with 1000s of pitch decks on a daily basis? Wish you could filter through them quickly using AI but the decks are unparseable through conventional means? Then you're in luck!This n8n template uses Multimodal LLMs to parse and extract valuable data from even the most overly designed pitch decks in quick fashion. Not only that, it'll also create the foundations of a RAG chatbot at the end so you or your colleagues can drill down into the details if needed. With this template, you'll scale your capacity to find interesting companies you'd otherwise miss!Requires n8n v1.62.1+How It WorksAirtable is used as the pitch deck database and PDF decks are downloaded from it.An AI Vision model is used to transcribe each page of the pitch deck into markdown.An Information Extractor is used to generate a report from the transcribed markdown and update required information back into pitch deck database.The transcribed markdown is also uploaded to a vector store to build an AI chatbot which can be used to ask questions on the pitch deck.Check out the sample Airtable here:https://airtable.com/appCkqc2jc3MoVqDO/shrS21vGqlnqzzNUcHow To UseThis template depends on the availability of the Airtable - make a duplicate of the airtable (link) and its columns before running the workflow.When a new pitchdeck is received, enter the company name into theNamecolumn and upload the pdf into theFilecolumn. Leave all other columns blank.If you have the Airtable trigger active, the execution should start immediately once the file is uploaded. Otherwise, click the manual test trigger to start the workflow.When manually triggered, all \\"new\\" pitch decks will be handled by the workflow as separate executions.RequirementsOpenAI for LLMAirtable For Database and InterfaceQdrant for Vector StoreCustomising This WorkflowExtend this starter template by adding more AI agents to validate claims made in the pitch deck eg. Linkedin Profiles, Page visits, Reviews etc.", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/2464", "workflow_id": "2464", "extracted_at": "2025-10-12T14:44:04.779182", "extractor_version": "1.0.0"}, "extraction_time": 8.272254}	2025-10-12 14:22:36.387156
2000	2466	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/4ab99e51473df76838beeaac908747f7928c625f869794815cabe34016967d51?r=pg&d=retro&size=200", "https://n8n.io/nodes/google-sheets.svg", "https://n8n.io/nodes/merge.svg", "https://n8n.io/nodes/telegram.svg", "https://gravatar.com/avatar/a551e67c6fe7affd5f882a527dee154bb6c3ac90cf878326accb3fb3ec77c8a6?r=pg&d=retro&size=200", "https://gravatar.com/avatar/4411649cc7663c2b65bc85988745080d5a677931114ea9e85f02b66a74d2e323?r=pg&d=retro&size=200", "https://n8n.io/nodes/openai-chat-model.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://gravatar.com/avatar/74234187cf4a650d53f6a86e7b03d1bcb8cfef4cbd0552eabd8d966cd808cc54?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "This n8n template demonstrates the beginnings of building your own n8n-powered WhatsApp chatbot! Under the hood, utilise n8n's powerful AI features to handle different message types and use an AI agent to respond to the user. A powerful tool for any use-case!How it worksIncoming WhatsApp Trigger provides a way to get messages into the workflow.The message received is extracted and sent through 1 of 4 branches for processing.Each processing branch uses AI to analyse, summarize or transcribe the message so that the AI agent can understand it. The supported types aretext,image,audio (voice notes)andvideo.The AI Agent is used to generate a response generally and uses a wikipedia tool for more complex queries.Finally, the response message is sent back to the WhatsApp user using the WhatsApp node.How to useOnce you have setup and configured your WhatsApp account, you'll need to activate your workflow to start processing messages.Good to know:Large media files may negatively impact workflow performance.RequirementsWhatsApp Buisness accountGoogle Gemini for LLM. Gemini is used specifically because it can accept audio and video files whereas at time of writing, many other providers like OpenAI's GPT, do not.Customising this workflowFor performance reasons, consider detecting large audio and video before sending to the LLM. Pre-processing such files may allow your agent to perform better.Go beyond and create rich and engagement customer experiences by responding using images, audio and video instead of just text!", "step_by_step": [], "code_snippets": [], "tutorial_text": "This n8n template demonstrates the beginnings of building your own n8n-powered WhatsApp chatbot! Under the hood, utilise n8n's powerful AI features to handle different message types and use an AI agent to respond to the user. A powerful tool for any use-case!How it worksIncoming WhatsApp Trigger provides a way to get messages into the workflow.The message received is extracted and sent through 1 of 4 branches for processing.Each processing branch uses AI to analyse, summarize or transcribe the message so that the AI agent can understand it. The supported types aretext,image,audio (voice notes)andvideo.The AI Agent is used to generate a response generally and uses a wikipedia tool for more complex queries.Finally, the response message is sent back to the WhatsApp user using the WhatsApp node.How to useOnce you have setup and configured your WhatsApp account, you'll need to activate your workflow to start processing messages.Good to know:Large media files may negatively impact workflow performance.RequirementsWhatsApp Buisness accountGoogle Gemini for LLM. Gemini is used specifically because it can accept audio and video files whereas at time of writing, many other providers like OpenAI's GPT, do not.Customising this workflowFor performance reasons, consider detecting large audio and video before sending to the LLM. Pre-processing such files may allow your agent to perform better.Go beyond and create rich and engagement customer experiences by responding using images, audio and video instead of just text!", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/2466", "workflow_id": "2466", "extracted_at": "2025-10-12T14:44:07.350017", "extractor_version": "1.0.0"}, "extraction_time": 7.611928}	2025-10-12 14:22:36.387156
2005	3003	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/http-request.svg", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200", "https://n8n.io/nodes/telegram.svg", "https://n8n.io/nodes/gmail.svg", "https://n8n.io/nodes/openai-chat-model.svg", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://gravatar.com/avatar/74234187cf4a650d53f6a86e7b03d1bcb8cfef4cbd0552eabd8d966cd808cc54?r=pg&d=retro&size=200", "https://gravatar.com/avatar/1d8dbb30401a76425734d4319abbaa38548b7572064ca080740bbfe60324772a?r=pg&d=retro&size=200", "https://n8n.io/nodes/google-sheets.svg", "https://gravatar.com/avatar/988a46579257f9e8c522aeb7b906f1ee96e47c4298faa548e41b04957f455ae3?r=pg&d=retro&size=200", "https://gravatar.com/avatar/d41b8a0aa81139243509c58870f5b4be292824a507ab57d10ed066d8628ed8da?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "This workflow creates an automated system for monitoring and receiving notifications about new videos from your favorite YouTube channels through RSS feeds, with customizable email and Telegram notifications.🌟 Key Features📡 RSS Feed ManagementAccepts custom YouTube channel IDs or uses default channelsAutomatically creates RSS feeds for each YouTube channelMonitors channels for new video uploadsLabels and filters recent videos within a 3-day window (change this as required)📨 Multi-Channel Notification SystemSends Telegram notifications with video thumbnails and linksDelivers customized email notifications in two formats:Individual emails for each new videoSingle digest email containing all new videos⚙️ Content ProcessingFetches detailed video information using YouTube APICreates responsive HTML email templates with video previewsIncludes video thumbnails, titles, descriptions, and direct linksMaintains professional formatting across different email clients🛠️ Setup Requirements🔑 API ConfigurationYouTube Data API credentialsGmail account for sending notificationsTelegram bot token and chat IDOpenAI API key for content processing📋 Channel ManagementAdd YouTube channel IDs through form inputConfigure default channel listSet notification preferencesAdjust monitoring scheduleThis workflow is perfect for content creators, marketers, or anyone wanting to stay updated with their favorite YouTube channels through automated, professionally formatted notifications delivered via email and Telegram.", "step_by_step": [], "code_snippets": [], "tutorial_text": "This workflow creates an automated system for monitoring and receiving notifications about new videos from your favorite YouTube channels through RSS feeds, with customizable email and Telegram notifications.🌟 Key Features📡 RSS Feed ManagementAccepts custom YouTube channel IDs or uses default channelsAutomatically creates RSS feeds for each YouTube channelMonitors channels for new video uploadsLabels and filters recent videos within a 3-day window (change this as required)📨 Multi-Channel Notification SystemSends Telegram notifications with video thumbnails and linksDelivers customized email notifications in two formats:Individual emails for each new videoSingle digest email containing all new videos⚙️ Content ProcessingFetches detailed video information using YouTube APICreates responsive HTML email templates with video previewsIncludes video thumbnails, titles, descriptions, and direct linksMaintains professional formatting across different email clients🛠️ Setup Requirements🔑 API ConfigurationYouTube Data API credentialsGmail account for sending notificationsTelegram bot token and chat IDOpenAI API key for content processing📋 Channel ManagementAdd YouTube channel IDs through form inputConfigure default channel listSet notification preferencesAdjust monitoring scheduleThis workflow is perfect for content creators, marketers, or anyone wanting to stay updated with their favorite YouTube channels through automated, professionally formatted notifications delivered via email and Telegram.", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3003", "workflow_id": "3003", "extracted_at": "2025-10-12T15:28:05.914077", "extractor_version": "1.0.0"}, "extraction_time": 6.916909}	2025-10-12 15:07:48.100488
2006	3007	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/http-request.svg", "https://n8n.io/nodes/youtube.png", "https://gravatar.com/avatar/1547577657bcdb579dd2c1946c4382029800b8e23e112916e4fe11cc66a6f9fa?r=pg&d=retro&size=200", "https://n8n.io/nodes/google-drive.svg", "https://n8n.io/nodes/stripe-trigger.svg", "https://n8n.io/nodes/google-sheets.svg", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/988a46579257f9e8c522aeb7b906f1ee96e47c4298faa548e41b04957f455ae3?r=pg&d=retro&size=200", "https://gravatar.com/avatar/d41b8a0aa81139243509c58870f5b4be292824a507ab57d10ed066d8628ed8da?r=pg&d=retro&size=200", "https://gravatar.com/avatar/e1fc0901703aede75c35d38ff26caf8e44b424893e1330efb483d68f5f67e059?r=pg&d=retro&size=200", "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200", "https://gravatar.com/avatar/7ee0febc0cbec2f1f6b24ddec3c4322e27c82c91dc729cfecf6ce12bfddd058d?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "Automatically Create and Post YouTube Shorts from Podcasts and Other Videos Using AI (Simplified).Transform podcasts and other videos into captivating, fully optimized YouTube Shorts with this all-in-one automation solution—designed for content creators who repurpose engaging clips. By leveraging advanced YouTube analytics, this template identifies the most compelling moments from your source material and automatically crafts them into scroll-stopping shorts. With intelligent editing, auto-generated titles and descriptions, and customizable scheduling, your clips become instantly post-ready, helping you expand your reach while saving hours on manual editing.Key FeaturesAnalytics-Driven Highlight Extraction:Automatically analyzes engagement metrics to select the best moments from podcasts or other creators' videos, ensuring each clip resonates with your audience.AI-Powered Editing:Applies professional-grade editing—adding captions, effects, transitions, and more—to create visually stunning, high-impact shorts.Auto-Generated Metadata:Seamlessly creates dynamic titles and descriptions, fully optimizing your clips for immediate upload.Customizable Scheduling:Enables you to set upload intervals that align with your strategy, ensuring a steady stream of content on your channel.Seamless YouTube Integration:Directly connects with YouTube’s API, streamlining the process so your channel remains active and engaging with minimal effort.Designed specifically for content creators repurposing YouTube videos—and requiring only a Sipkes Studio account (it's Free) for full functionality—this simplified automation template streamlines the conversion of long-form content into bite-sized, shareable clips. Elevate your content strategy, maximize audience engagement, and reclaim valuable time with a solution built to drive your channel's growth.", "step_by_step": [], "code_snippets": [], "tutorial_text": "Automatically Create and Post YouTube Shorts from Podcasts and Other Videos Using AI (Simplified).Transform podcasts and other videos into captivating, fully optimized YouTube Shorts with this all-in-one automation solution—designed for content creators who repurpose engaging clips. By leveraging advanced YouTube analytics, this template identifies the most compelling moments from your source material and automatically crafts them into scroll-stopping shorts. With intelligent editing, auto-generated titles and descriptions, and customizable scheduling, your clips become instantly post-ready, helping you expand your reach while saving hours on manual editing.Key FeaturesAnalytics-Driven Highlight Extraction:Automatically analyzes engagement metrics to select the best moments from podcasts or other creators' videos, ensuring each clip resonates with your audience.AI-Powered Editing:Applies professional-grade editing—adding captions, effects, transitions, and more—to create visually stunning, high-impact shorts.Auto-Generated Metadata:Seamlessly creates dynamic titles and descriptions, fully optimizing your clips for immediate upload.Customizable Scheduling:Enables you to set upload intervals that align with your strategy, ensuring a steady stream of content on your channel.Seamless YouTube Integration:Directly connects with YouTube’s API, streamlining the process so your channel remains active and engaging with minimal effort.Designed specifically for content creators repurposing YouTube videos—and requiring only a Sipkes Studio account (it's Free) for full functionality—this simplified automation template streamlines the conversion of long-form content into bite-sized, shareable clips. Elevate your content strategy, maximize audience engagement, and reclaim valuable time with a solution built to drive your channel's growth.", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3007", "workflow_id": "3007", "extracted_at": "2025-10-12T15:28:06.715684", "extractor_version": "1.0.0"}, "extraction_time": 6.915017}	2025-10-12 15:07:48.100488
2007	3005	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/google-sheets.svg", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200", "https://n8n.io/nodes/merge.svg", "https://n8n.io/nodes/telegram.svg", "https://n8n.io/nodes/gmail.svg", "https://gravatar.com/avatar/7ee0febc0cbec2f1f6b24ddec3c4322e27c82c91dc729cfecf6ce12bfddd058d?r=pg&d=retro&size=200", "https://n8n.io/nodes/google-drive.svg", "https://gravatar.com/avatar/4cda9c7c1c24fdb61896cac588296d1dad03655a439ab71ef34f4c62c0ba8524?r=pg&d=retro&size=200", "https://n8n.io/nodes/notion.svg", "https://n8n.io/nodes/google-drive-trigger.svg", "https://gravatar.com/avatar/a3f78329cbd3f3239726910fb8b0f8e5e7bb340868f57b959989e7f8d8ea1608?r=pg&d=retro&size=200", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://n8n.io/nodes/openai-chat-model.svg", "https://gravatar.com/avatar/d6c9cb4d0092909e227e9de518409cdf679228a7df550714ce808d77976221af?r=pg&d=retro&size=200", "https://n8n.io/nodes/webhook.svg", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "DescriptionThis workflow automates document processing using LlamaParse to extract and analyze text from various file formats. It intelligently processes documents, extracts structured data, and delivers actionable insights through multiple channels.How It WorksDocument Ingestion & Processing 📄Monitors Gmail for incoming attachments or accepts documents via webhookValidates file formats against supported LlamaParse extensionsUploads documents to LlamaParse for advanced text extractionStores original documents in Google Drive for referenceIntelligent Document Analysis 🧠Automatically classifies document types (invoices, reports, etc.)Extracts structured data using customized AI promptsGenerates comprehensive document summaries with key insightsConverts unstructured text into organized JSON dataInvoice Processing Automation 💼Extracts critical invoice details (dates, amounts, line items)Organizes financial data into structured formatsCalculates tax breakdowns, subtotals, and payment informationMaintains detailed records for accounting purposesMulti-Channel Delivery 📱Saves extracted data to Google Sheets for tracking and analysisSends concise summaries via Telegram for immediate reviewCreates searchable document archives in Google DriveUpdates spreadsheets with structured financial informationSetup StepsConfigure API Credentials 🔑Set up LlamaParse API connectionConfigure Gmail OAuth for email monitoringSet up Google Drive and Sheets integrationsAdd Telegram bot credentials for notificationsCustomize AI Processing ⚙️Adjust document classification parametersModify extraction templates for specific document typesFine-tune summary generation promptsCustomize invoice data extraction schemaTest and Deploy 🚀Test with sample documents of various formatsVerify data extraction accuracyConfirm notification deliveryMonitor processing pipeline performance", "step_by_step": [], "code_snippets": [], "tutorial_text": "DescriptionThis workflow automates document processing using LlamaParse to extract and analyze text from various file formats. It intelligently processes documents, extracts structured data, and delivers actionable insights through multiple channels.How It WorksDocument Ingestion & Processing 📄Monitors Gmail for incoming attachments or accepts documents via webhookValidates file formats against supported LlamaParse extensionsUploads documents to LlamaParse for advanced text extractionStores original documents in Google Drive for referenceIntelligent Document Analysis 🧠Automatically classifies document types (invoices, reports, etc.)Extracts structured data using customized AI promptsGenerates comprehensive document summaries with key insightsConverts unstructured text into organized JSON dataInvoice Processing Automation 💼Extracts critical invoice details (dates, amounts, line items)Organizes financial data into structured formatsCalculates tax breakdowns, subtotals, and payment informationMaintains detailed records for accounting purposesMulti-Channel Delivery 📱Saves extracted data to Google Sheets for tracking and analysisSends concise summaries via Telegram for immediate reviewCreates searchable document archives in Google DriveUpdates spreadsheets with structured financial informationSetup StepsConfigure API Credentials 🔑Set up LlamaParse API connectionConfigure Gmail OAuth for email monitoringSet up Google Drive and Sheets integrationsAdd Telegram bot credentials for notificationsCustomize AI Processing ⚙️Adjust document classification parametersModify extraction templates for specific document typesFine-tune summary generation promptsCustomize invoice data extraction schemaTest and Deploy 🚀Test with sample documents of various formatsVerify data extraction accuracyConfirm notification deliveryMonitor processing pipeline performance", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3005", "workflow_id": "3005", "extracted_at": "2025-10-12T15:28:06.128825", "extractor_version": "1.0.0"}, "extraction_time": 8.218607}	2025-10-12 15:07:48.100489
2008	3004	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/http-request.svg", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/e9b426a3cee5ccc3db516a8cc91af8a65fc5cac248b8844071f476dbcfa5d553?r=pg&d=retro&size=200", "https://n8n.io/nodes/n8n-form-trigger.svg", "https://n8n.io/nodes/google-sheets.svg", "https://gravatar.com/avatar/988a46579257f9e8c522aeb7b906f1ee96e47c4298faa548e41b04957f455ae3?r=pg&d=retro&size=200", "https://gravatar.com/avatar/d41b8a0aa81139243509c58870f5b4be292824a507ab57d10ed066d8628ed8da?r=pg&d=retro&size=200", "https://gravatar.com/avatar/e1fc0901703aede75c35d38ff26caf8e44b424893e1330efb483d68f5f67e059?r=pg&d=retro&size=200", "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200", "https://gravatar.com/avatar/7ee0febc0cbec2f1f6b24ddec3c4322e27c82c91dc729cfecf6ce12bfddd058d?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "🚀 TikTok Video Automation Tool ✨ (Frequent Updates)Create viral TikTok videos effortlessly — no editing skills required!Who is this for? 🎯✅Content Creators:Pump out engaging short videos in minutes.✅Marketing Agencies:Deliver high-quality client content — fast.✅Business Owners:Promote your brand with attention-grabbing TikToks.What problem does this solve? 🛠️Short-form video content is king, but creating it takestime, skill, and effort. This toolautomates the entire process, from scriptwriting to video production, ensuringSEO-optimized, high-quality contentwithout any manual editing.How it works 🌟1️⃣Enter your video ideaand choose where to receive the final video (TikTok upload or link via WhatsApp, Gmail, etc.).2️⃣AI crafts a high-engagement scriptwith SEO optimization.3️⃣Voiceover is generatedwith ultra-realistic AI narration.4️⃣Relevant visuals are selectedto perfectly match the script.5️⃣Your TikTok video is assembledand either directly uploaded to TikTok or delivered via a shareable link.Quick & Easy Setup ⚙️ (5-10 min)🔹 Connect required APIs (most have free plans).🔹 Follow the step-by-step setup (video tutorial included).🔹 Start generating professional TikTok videos instantly!Required APIs 🔗Content & Voiceover:OpenAI (Paid), ElevenLabs (Free)Media Processing:Cloudinary (Free), Replicate (Paid)Video Assembly:0codekit (Free), Creatomate (Free)Optional Integrations 🔗Messaging & Sharing:WhatsApp, Telegram, Gmail, OutlookDirect Upload:TikTokCustomization 🎨Adjust script styles & voiceover preferences.Modify visuals to align with your brand.Optimize video length and format.🚀Start automating your TikTok content today and grow your audience on autopilot!", "step_by_step": [], "code_snippets": [], "tutorial_text": "🚀 TikTok Video Automation Tool ✨ (Frequent Updates)Create viral TikTok videos effortlessly — no editing skills required!Who is this for? 🎯✅Content Creators:Pump out engaging short videos in minutes.✅Marketing Agencies:Deliver high-quality client content — fast.✅Business Owners:Promote your brand with attention-grabbing TikToks.What problem does this solve? 🛠️Short-form video content is king, but creating it takestime, skill, and effort. This toolautomates the entire process, from scriptwriting to video production, ensuringSEO-optimized, high-quality contentwithout any manual editing.How it works 🌟1️⃣Enter your video ideaand choose where to receive the final video (TikTok upload or link via WhatsApp, Gmail, etc.).2️⃣AI crafts a high-engagement scriptwith SEO optimization.3️⃣Voiceover is generatedwith ultra-realistic AI narration.4️⃣Relevant visuals are selectedto perfectly match the script.5️⃣Your TikTok video is assembledand either directly uploaded to TikTok or delivered via a shareable link.Quick & Easy Setup ⚙️ (5-10 min)🔹 Connect required APIs (most have free plans).🔹 Follow the step-by-step setup (video tutorial included).🔹 Start generating professional TikTok videos instantly!Required APIs 🔗Content & Voiceover:OpenAI (Paid), ElevenLabs (Free)Media Processing:Cloudinary (Free), Replicate (Paid)Video Assembly:0codekit (Free), Creatomate (Free)Optional Integrations 🔗Messaging & Sharing:WhatsApp, Telegram, Gmail, OutlookDirect Upload:TikTokCustomization 🎨Adjust script styles & voiceover preferences.Modify visuals to align with your brand.Optimize video length and format.🚀Start automating your TikTok content today and grow your audience on autopilot!", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3004", "workflow_id": "3004", "extracted_at": "2025-10-12T15:28:06.334986", "extractor_version": "1.0.0"}, "extraction_time": 8.488648}	2025-10-12 15:07:48.100489
2009	3010	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/http-request.svg", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200", "https://n8n.io/nodes/telegram.svg", "https://n8n.io/nodes/gmail.svg", "https://n8n.io/nodes/google-sheets.svg", "https://gravatar.com/avatar/988a46579257f9e8c522aeb7b906f1ee96e47c4298faa548e41b04957f455ae3?r=pg&d=retro&size=200", "https://gravatar.com/avatar/d41b8a0aa81139243509c58870f5b4be292824a507ab57d10ed066d8628ed8da?r=pg&d=retro&size=200", "https://gravatar.com/avatar/e1fc0901703aede75c35d38ff26caf8e44b424893e1330efb483d68f5f67e059?r=pg&d=retro&size=200", "https://gravatar.com/avatar/7ee0febc0cbec2f1f6b24ddec3c4322e27c82c91dc729cfecf6ce12bfddd058d?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "📄✨ Easy WordPress Content Creation from PDF Docs + Human in the Loop GmailThis n8n workflow automates the process of transforming PDF documents into engaging, SEO-friendly WordPress blog posts. It incorporates AI-powered text analysis, automatic image generation, and a human review step to ensure quality before publishing.🚀 How It Works🗂️ PDF Upload & Text ExtractionUsers upload a PDF document through a form trigger.The workflow extracts text from the uploaded file, ensuring compatibility with supported formats.🤖 AI-Powered Blog Post GenerationThe extracted text is analyzed by an AI model (GPT-based) to create a structured blog post.The AI generates:A captivating SEO-friendly title.Well-formatted HTML content, including an introduction, chapters with subheadings, and a conclusion.🎨 Image Creation & IntegrationAn image is generated usingPollinations.aibased on the blog post title.The vibrant image is uploaded to WordPress and set as the featured image for the post.📝 WordPress Draft CreationA draft blog post is created on WordPress with the AI-generated title, content, and featured image.✅ Human-in-the-Loop ApprovalThe draft content is sent via Gmail to a reviewer for manual approval.If approved, the post is published on WordPress. If not, an error message is sent for troubleshooting.📢 Multi-Channel NotificationsOnce published, notifications are sent via Gmail and Telegram to relevant stakeholders.🔧 Setup Steps🔑 Configure API CredentialsSet up API connections for:OpenAI (for AI content generation).WordPress (for post creation and media uploads).Gmail (for sending approval emails).Telegram (for notifications).imgbb (for saving blog image).⚙️ Customize Workflow ParametersAdjust the AI prompt to match your desired blog structure and tone.Modify the image generation parameters to align with your branding needs.🧪 Test & DeployTest the workflow with sample PDFs to ensure:Accurate text extraction.Proper formatting of generated content.Seamless approval and publishing processes.This workflow streamlines content creation while maintaining quality control through human oversight, making it an ideal solution for efficient blog management! 🎉", "step_by_step": [], "code_snippets": [], "tutorial_text": "📄✨ Easy WordPress Content Creation from PDF Docs + Human in the Loop GmailThis n8n workflow automates the process of transforming PDF documents into engaging, SEO-friendly WordPress blog posts. It incorporates AI-powered text analysis, automatic image generation, and a human review step to ensure quality before publishing.🚀 How It Works🗂️ PDF Upload & Text ExtractionUsers upload a PDF document through a form trigger.The workflow extracts text from the uploaded file, ensuring compatibility with supported formats.🤖 AI-Powered Blog Post GenerationThe extracted text is analyzed by an AI model (GPT-based) to create a structured blog post.The AI generates:A captivating SEO-friendly title.Well-formatted HTML content, including an introduction, chapters with subheadings, and a conclusion.🎨 Image Creation & IntegrationAn image is generated usingPollinations.aibased on the blog post title.The vibrant image is uploaded to WordPress and set as the featured image for the post.📝 WordPress Draft CreationA draft blog post is created on WordPress with the AI-generated title, content, and featured image.✅ Human-in-the-Loop ApprovalThe draft content is sent via Gmail to a reviewer for manual approval.If approved, the post is published on WordPress. If not, an error message is sent for troubleshooting.📢 Multi-Channel NotificationsOnce published, notifications are sent via Gmail and Telegram to relevant stakeholders.🔧 Setup Steps🔑 Configure API CredentialsSet up API connections for:OpenAI (for AI content generation).WordPress (for post creation and media uploads).Gmail (for sending approval emails).Telegram (for notifications).imgbb (for saving blog image).⚙️ Customize Workflow ParametersAdjust the AI prompt to match your desired blog structure and tone.Modify the image generation parameters to align with your branding needs.🧪 Test & DeployTest the workflow with sample PDFs to ensure:Accurate text extraction.Proper formatting of generated content.Seamless approval and publishing processes.This workflow streamlines content creation while maintaining quality control through human oversight, making it an ideal solution for efficient blog management! 🎉", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3010", "workflow_id": "3010", "extracted_at": "2025-10-12T15:28:39.835410", "extractor_version": "1.0.0"}, "extraction_time": 10.027814}	2025-10-12 15:07:48.100489
2016	3017	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3017", "workflow_id": "3017", "extracted_at": "2025-10-12T15:29:07.434541", "extractor_version": "1.0.0"}, "extraction_time": 8.079121}	2025-10-12 15:07:48.100491
2019	3019	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3019", "workflow_id": "3019", "extracted_at": "2025-10-12T15:29:37.834005", "extractor_version": "1.0.0"}, "extraction_time": 7.401818}	2025-10-12 15:07:48.100491
2020	3022	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3022", "workflow_id": "3022", "extracted_at": "2025-10-12T15:29:42.033029", "extractor_version": "1.0.0"}, "extraction_time": 6.487999}	2025-10-12 15:07:48.100492
2021	3021	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/github.svg", "https://n8n.io/nodes/telegram.svg", "https://gravatar.com/avatar/a95ec041d8d07b0f2b1ca5aaeddb2cf14b3a853f429a8a0e12035ef9252f868d?r=pg&d=retro&size=200", "https://n8n.io/nodes/microsoft-teams.svg", "https://gravatar.com/avatar/7ee0febc0cbec2f1f6b24ddec3c4322e27c82c91dc729cfecf6ce12bfddd058d?r=pg&d=retro&size=200", "https://n8n.io/nodes/http-request.svg", "https://gravatar.com/avatar/eb8eb92141f57c72c5f5a9fb5e8c85dca42047f764de54ab5466999cbb691079?r=pg&d=retro&size=200", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/6d3d2053279bc63e9be7bf4cd3fb74e13e7cc1309d32eab0b72140332cff577e?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "Who is this for?This workflow is ideal for:Developerswho want to stay updated on issues without constantly checking GitHub.Managerstracking issue progress in a Telegram group.DevOps teamsthat need automated notification alerts for new or updated issues.What problem does this workflow solve?Keeping track of GitHub issues manually can be tedious. Teams often miss critical updates because notifications are buried in emails or dashboards. This workflow automates the process by fetching new or open GitHub issues and instantly sending notifications to a specified Telegram chat.What this workflow doesThis workflow connects GitHub and Telegram to provide real-time issue notifications:Fetch GitHub Issues– Retrieves new or open issues from a selected GitHub repository.Format the Issue Details– Extracts key information like issue title, number, status, and URL.Send to Telegram– Posts the formatted issue details to a Telegram group or private chat.Setup GuidePrerequisitesBefore setting up the workflow, ensure you have:GitHub Personal Access Token: Required to fetch issue details. Generate it under Developer Settings withrepoorpublic_repopermissions.Telegram Bot Token: Create a bot viaBotFatheron Telegram and obtain the token.Telegram Chat ID: Find the chat ID where the bot should send messages usingthis method.Step-by-Step SetupSet Up GitHub NodeAuthenticate using your GitHub token.Choose the repository you want to track.Configure filters (e.g., fetch only open issues).Format Issue DetailsExtract key details like title, issue number, assignee, and status.Customize the message structure for better readability.Send Message to TelegramAdd the Telegram node and enter your bot token.Use the Chat ID to define the recipient.Format the message to include issue details and links.Schedule the Workflow(Optional)Use theCron nodeto run this workflow periodically (e.g., every hour).How to Customize This WorkflowFilter Issues by Labels: Modify the GitHub node to fetch only issues with specific labels.Include Additional Fields: Add issue comments, priority, or assignee details in the message.Send Alerts Based on Priority: Use conditional logic to send high-priority issues to a different chat.Trigger on Issue Events: Instead of fetching periodically, use GitHub webhooks (if permitted in the repo) to trigger the workflow on issue creation or updates.Why Use This Workflow?Automates GitHub issue trackingwithout manually checking repositories.Instant notifications in Telegramensure quick response times.Fully customizableto fit different team workflows.", "step_by_step": [], "code_snippets": [], "tutorial_text": "Who is this for?This workflow is ideal for:Developerswho want to stay updated on issues without constantly checking GitHub.Managerstracking issue progress in a Telegram group.DevOps teamsthat need automated notification alerts for new or updated issues.What problem does this workflow solve?Keeping track of GitHub issues manually can be tedious. Teams often miss critical updates because notifications are buried in emails or dashboards. This workflow automates the process by fetching new or open GitHub issues and instantly sending notifications to a specified Telegram chat.What this workflow doesThis workflow connects GitHub and Telegram to provide real-time issue notifications:Fetch GitHub Issues– Retrieves new or open issues from a selected GitHub repository.Format the Issue Details– Extracts key information like issue title, number, status, and URL.Send to Telegram– Posts the formatted issue details to a Telegram group or private chat.Setup GuidePrerequisitesBefore setting up the workflow, ensure you have:GitHub Personal Access Token: Required to fetch issue details. Generate it under Developer Settings withrepoorpublic_repopermissions.Telegram Bot Token: Create a bot viaBotFatheron Telegram and obtain the token.Telegram Chat ID: Find the chat ID where the bot should send messages usingthis method.Step-by-Step SetupSet Up GitHub NodeAuthenticate using your GitHub token.Choose the repository you want to track.Configure filters (e.g., fetch only open issues).Format Issue DetailsExtract key details like title, issue number, assignee, and status.Customize the message structure for better readability.Send Message to TelegramAdd the Telegram node and enter your bot token.Use the Chat ID to define the recipient.Format the message to include issue details and links.Schedule the Workflow(Optional)Use theCron nodeto run this workflow periodically (e.g., every hour).How to Customize This WorkflowFilter Issues by Labels: Modify the GitHub node to fetch only issues with specific labels.Include Additional Fields: Add issue comments, priority, or assignee details in the message.Send Alerts Based on Priority: Use conditional logic to send high-priority issues to a different chat.Trigger on Issue Events: Instead of fetching periodically, use GitHub webhooks (if permitted in the repo) to trigger the workflow on issue creation or updates.Why Use This Workflow?Automates GitHub issue trackingwithout manually checking repositories.Instant notifications in Telegramensure quick response times.Fully customizableto fit different team workflows.", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3021", "workflow_id": "3021", "extracted_at": "2025-10-12T15:29:42.028282", "extractor_version": "1.0.0"}, "extraction_time": 10.457637}	2025-10-12 15:07:48.100492
2022	3020	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/openai-chat-model.svg", "https://gravatar.com/avatar/be87ae832a10297a42d8d92ade9b7b680e2e0cdd81c519603277b10956e46c86?r=pg&d=retro&size=200", "https://n8n.io/nodes/google-sheets.svg", "https://n8n.io/nodes/http-request.svg", "https://n8n.io/nodes/merge.svg", "https://n8n.io/nodes/github.svg", "https://gravatar.com/avatar/5240094f838126182ceefb50ca4a3cf75cc7dc0808efd4b9920d792e41bfc45e?r=pg&d=retro&size=200", "https://gravatar.com/avatar/8760ed64a38ed65da42983737659c7e295e4a7f14b59ed5ce1b0b1077435f573?r=pg&d=retro&size=200", "https://gravatar.com/avatar/4ab99e51473df76838beeaac908747f7928c625f869794815cabe34016967d51?r=pg&d=retro&size=200", "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200", "https://gravatar.com/avatar/74234187cf4a650d53f6a86e7b03d1bcb8cfef4cbd0552eabd8d966cd808cc54?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "This n8n workflow template is designed for developers, system administrators, and IT professionals who manage Linux VPS environments. It leverages an AI chatbot powered by the OpenAI model to interpret and execute SSH commands on a Linux VPS directly from chat messages. The workflow triggers when a specific chat message is received, which is then processed by the AI SysAdmin ReAct Agent to execute predefined SSH commands securely.How It WorksChat Trigger: The workflow starts when a chat message is received via a supported platform (like Slack, Telegram, etc.).AI Processing: The message is passed to the AI SysAdmin ReAct Agent, which uses an embedded OpenAI model to interpret the command and map it to a corresponding SSH action.Command Execution: The interpreted command is securely executed on the target Linux VPS using SSH, with login credentials managed through a secure method embedded within the workflow.Setup InstructionsImport the Workflow: Download and import the workflow into your n8n instance.Configure Chat Integration: Set up the chat trigger node by connecting it to your preferred chat platform and configuring the trigger conditions.Set SSH Credentials: Securely input your SSH credentials in the designated SSH login credentials node.Deploy and Test: Deploy the workflow and perform tests to ensure that commands are executed correctly and securely on your VPS.Embrace the future of VPS management with our AI-driven SysAdmin for Linux VPS template. This innovative solution transforms how system administrators interact with and manage their servers, offering a streamlined, secure, and efficient method to handle routine tasks through simple chat commands. With the power of AI at your fingertips, enhance your operational efficiency, reduce response times, and manage your Linux environments more effectively. Get started today to experience a smarter way to manage your systems directly through your chat tool.", "step_by_step": [], "code_snippets": [], "tutorial_text": "This n8n workflow template is designed for developers, system administrators, and IT professionals who manage Linux VPS environments. It leverages an AI chatbot powered by the OpenAI model to interpret and execute SSH commands on a Linux VPS directly from chat messages. The workflow triggers when a specific chat message is received, which is then processed by the AI SysAdmin ReAct Agent to execute predefined SSH commands securely.How It WorksChat Trigger: The workflow starts when a chat message is received via a supported platform (like Slack, Telegram, etc.).AI Processing: The message is passed to the AI SysAdmin ReAct Agent, which uses an embedded OpenAI model to interpret the command and map it to a corresponding SSH action.Command Execution: The interpreted command is securely executed on the target Linux VPS using SSH, with login credentials managed through a secure method embedded within the workflow.Setup InstructionsImport the Workflow: Download and import the workflow into your n8n instance.Configure Chat Integration: Set up the chat trigger node by connecting it to your preferred chat platform and configuring the trigger conditions.Set SSH Credentials: Securely input your SSH credentials in the designated SSH login credentials node.Deploy and Test: Deploy the workflow and perform tests to ensure that commands are executed correctly and securely on your VPS.Embrace the future of VPS management with our AI-driven SysAdmin for Linux VPS template. This innovative solution transforms how system administrators interact with and manage their servers, offering a streamlined, secure, and efficient method to handle routine tasks through simple chat commands. With the power of AI at your fingertips, enhance your operational efficiency, reduce response times, and manage your Linux environments more effectively. Get started today to experience a smarter way to manage your systems directly through your chat tool.", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3020", "workflow_id": "3020", "extracted_at": "2025-10-12T15:29:41.939839", "extractor_version": "1.0.0"}, "extraction_time": 10.576776}	2025-10-12 15:07:48.100492
2023	3018	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": ["https://n8n.io/nodes/google-sheets.svg", "https://n8n.io/nodes/http-request.svg", "https://n8n.io/nodes/wordpress.svg", "https://gravatar.com/avatar/f48b83d9203b4c4ddddc61aee4245dc65b9b9543ad744013bedf6dae9ea76d70?r=pg&d=retro&size=200", "https://n8n.io/nodes/merge.svg", "https://gravatar.com/avatar/988a46579257f9e8c522aeb7b906f1ee96e47c4298faa548e41b04957f455ae3?r=pg&d=retro&size=200", "https://gravatar.com/avatar/d41b8a0aa81139243509c58870f5b4be292824a507ab57d10ed066d8628ed8da?r=pg&d=retro&size=200", "https://gravatar.com/avatar/e1fc0901703aede75c35d38ff26caf8e44b424893e1330efb483d68f5f67e059?r=pg&d=retro&size=200", "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200", "https://gravatar.com/avatar/7ee0febc0cbec2f1f6b24ddec3c4322e27c82c91dc729cfecf6ce12bfddd058d?r=pg&d=retro&size=200", "https://n8n.io/images/stars-footer.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg", "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"], "video_urls": [], "introduction": "Workflow Description: Automated Content Publishing for WordPressThisn8n workflowautomates the entire process ofcontent generation, image selection, and scheduled publishingto a self-hostedWordPress website. It is designed forbloggers, marketers, and businesseswho want to streamline their content creation and posting workflow.🌟 Features✅AI-Powered Content GenerationUsesChatGPTto generate engaging, market-ready blog articlesDynamically incorporates high-search volume keywords✅Automated Image SelectionSearches for relevantstock imagesfromPexelsEmbeds images directly into posts(Optional)SupportsFeatured Image from URL (FIFU) pluginfor WordPress✅Scheduled & Randomized PostingAutomaticallyschedules postsat predefined intervalsSupportsrandomized delay(0-6 hours) for natural publishing✅WordPress API IntegrationUsesWordPress REST APIto directlypublish postsConfiguresfeatured images, categories, and metadataSupportsSEO-friendly meta fields✅Flexible & CustomizableWorks withany WordPress website(self-hosted)Can bemodified for other CMS platforms🔧 How It Works1️⃣Trigger & SchedulingAutomatically runs at preset times or on-demandSupportscron-like scheduling2️⃣AI Content GenerationUses a well-crafted prompt to generatehigh-quality blog postsExtractsrelevant keywordsfor both SEO andimage selection3️⃣Image Fetching from PexelsSearches andretrieves high-quality imagesEmbedsimage creditsand ensuresproper formatting4️⃣WordPress API IntegrationSendspost title, content, image, and metadataviaHTTP RequestCan includecustom fields, categories, and tags5️⃣Randomized Delay Before PublishingEnsuresnatural posting behaviorAvoids bulk publishing issues📌 RequirementsSelf-hosted WordPress websitewithREST API enabledFIFU Plugin(optional) forexternal featured imagesn8n Self-Hosted or Cloud Instance🚀 Who Is This For?✅Bloggerswho want toautomate content publishing✅Marketing teamslooking to scale content production✅Business ownerswho want toboost online presence✅SEO professionalswho needconsistent, optimized content💡 Ready to Automate?👉Click here to get this workflow!(Replace with Purchase URL)", "step_by_step": [], "code_snippets": [], "tutorial_text": "Workflow Description: Automated Content Publishing for WordPressThisn8n workflowautomates the entire process ofcontent generation, image selection, and scheduled publishingto a self-hostedWordPress website. It is designed forbloggers, marketers, and businesseswho want to streamline their content creation and posting workflow.🌟 Features✅AI-Powered Content GenerationUsesChatGPTto generate engaging, market-ready blog articlesDynamically incorporates high-search volume keywords✅Automated Image SelectionSearches for relevantstock imagesfromPexelsEmbeds images directly into posts(Optional)SupportsFeatured Image from URL (FIFU) pluginfor WordPress✅Scheduled & Randomized PostingAutomaticallyschedules postsat predefined intervalsSupportsrandomized delay(0-6 hours) for natural publishing✅WordPress API IntegrationUsesWordPress REST APIto directlypublish postsConfiguresfeatured images, categories, and metadataSupportsSEO-friendly meta fields✅Flexible & CustomizableWorks withany WordPress website(self-hosted)Can bemodified for other CMS platforms🔧 How It Works1️⃣Trigger & SchedulingAutomatically runs at preset times or on-demandSupportscron-like scheduling2️⃣AI Content GenerationUses a well-crafted prompt to generatehigh-quality blog postsExtractsrelevant keywordsfor both SEO andimage selection3️⃣Image Fetching from PexelsSearches andretrieves high-quality imagesEmbedsimage creditsand ensuresproper formatting4️⃣WordPress API IntegrationSendspost title, content, image, and metadataviaHTTP RequestCan includecustom fields, categories, and tags5️⃣Randomized Delay Before PublishingEnsuresnatural posting behaviorAvoids bulk publishing issues📌 RequirementsSelf-hosted WordPress websitewithREST API enabledFIFU Plugin(optional) forexternal featured imagesn8n Self-Hosted or Cloud Instance🚀 Who Is This For?✅Bloggerswho want toautomate content publishing✅Marketing teamslooking to scale content production✅Business ownerswho want toboost online presence✅SEO professionalswho needconsistent, optimized content💡 Ready to Automate?👉Click here to get this workflow!(Replace with Purchase URL)", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/3018", "workflow_id": "3018", "extracted_at": "2025-10-12T15:29:40.341305", "extractor_version": "1.0.0"}, "extraction_time": 7.883432}	2025-10-12 15:07:48.100492
2043	1000	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/1000", "workflow_id": "1000", "extracted_at": "2025-10-12T15:57:16.062527", "extractor_version": "1.0.0"}, "extraction_time": 5.532635}	2025-10-12 15:27:07.2093
2044	abc123	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/abc123", "workflow_id": "abc123", "extracted_at": "2025-10-12T15:51:51.285895", "extractor_version": "1.0.0"}, "extraction_time": 5.682635}	2025-10-12 15:43:51.224392
2045	999999	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/999999", "workflow_id": "999999", "extracted_at": "2025-10-12T15:51:51.458707", "extractor_version": "1.0.0"}, "extraction_time": 5.595198}	2025-10-12 15:43:51.224394
2046	9999999	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/9999999", "workflow_id": "9999999", "extracted_at": "2025-10-12T15:52:03.312781", "extractor_version": "1.0.0"}, "extraction_time": 5.642955}	2025-10-12 15:43:51.224395
2047	500000	\N	\N	\N	\N	f	0	f	0	{"data": {"overview": "", "conclusion": "", "image_urls": [], "video_urls": [], "introduction": "", "step_by_step": [], "code_snippets": [], "tutorial_text": "", "best_practices": [], "common_pitfalls": [], "troubleshooting": {"common_issues": [], "error_messages": []}, "related_workflows": [], "tutorial_sections": []}, "errors": [], "success": true, "metadata": {"url": "https://n8n.io/workflows/500000", "workflow_id": "500000", "extracted_at": "2025-10-12T15:52:03.158247", "extractor_version": "1.0.0"}, "extraction_time": 5.615097}	2025-10-12 15:43:51.224395
\.


--
-- Data for Name: workflow_metadata; Type: TABLE DATA; Schema: public; Owner: scraper_user
--

COPY public.workflow_metadata (id, workflow_id, title, description, use_case, author_name, author_url, views, shares, categories, tags, workflow_created_at, workflow_updated_at, extracted_at, raw_metadata) FROM stdin;
2005	484	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:39:23.118907	{"data": {"title": "Look up a person using their email in Clearbit", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:41:57.033890", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:41:57.033890", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "484", "extraction_time": 11.184341669082642}
1992	496	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:37:47.36536	{"data": {"title": "Create a ticket in Zendesk", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:40:13.837889", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:40:13.837889", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "496", "extraction_time": 14.763743877410889}
1995	491	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:38:14.667502	{"data": {"title": "Receive updates for changes in the specified list in Trello", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:40:45.635636", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:40:45.635636", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "491", "extraction_time": 17.295364379882812}
1994	495	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:37:50.555282	{"data": {"title": "Track an event in Segment", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:40:15.948588", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:40:15.948588", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "495", "extraction_time": 16.26335334777832}
1998	488	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:38:33.384795	{"data": {"title": "Receive updates when a new account is added by an admin in ActiveCampaign", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:41:04.938116", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:41:04.938116", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "488", "extraction_time": 10.671088218688965}
1999	489	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:38:33.792744	{"data": {"title": "Create a deal in Pipedrive", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:41:08.482675", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:41:08.482675", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "489", "extraction_time": 14.1610107421875}
1996	494	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:38:15.079477	{"data": {"title": "Create a client in Harvest", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:40:43.536218", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:40:43.536218", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "494", "extraction_time": 15.217963218688965}
2056	abc123	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:43:51.228497	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:51:50.399487", "general_tags": ["Strictly necessary", "Targeting", "Performance", "Functionality"], "updated_date": "2025-10-12T15:51:50.399487", "prerequisites": ["mplates/search\\",searchFiltersApiUrl:\\"https://api.n8n.io/api/templates/search/filters\\",templatesWor", "kflowsApiUrl:\\"https://api.n8n.io/api/templates/workflows\\",categoriesApiUrl:\\"https://ap", "i.n8n.io/api/templates/categories\\",creatorsApiUrl:\\"https://api.n8n.io/api/creators\\",workflowsApi", "management", "csrf_token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "abc123", "extraction_time": 6.594032049179077}
2003	485	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:38:55.552778	{"data": {"title": "Create a task in ClickUp", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:41:34.470538", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:41:34.470538", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "485", "extraction_time": 21.6808340549469}
2002	486	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:38:55.540249	{"data": {"title": "Receive updates for events in Chargebee", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:41:26.933621", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:41:26.933621", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "486", "extraction_time": 10.406314134597778}
2001	487	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:38:55.08403	{"data": {"title": "Receive updates for events in ClickUp", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:41:28.175136", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:41:28.175136", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "487", "extraction_time": 11.105944395065308}
2057	999999	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:43:51.228499	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:51:50.378702", "general_tags": ["Strictly necessary", "Targeting", "Performance", "Functionality"], "updated_date": "2025-10-12T15:51:50.378702", "prerequisites": ["mplates/search\\",searchFiltersApiUrl:\\"https://api.n8n.io/api/templates/search/filters\\",templatesWor", "kflowsApiUrl:\\"https://api.n8n.io/api/templates/workflows\\",categoriesApiUrl:\\"https://ap", "i.n8n.io/api/templates/categories\\",creatorsApiUrl:\\"https://api.n8n.io/api/creators\\",workflowsApi", "management", "csrf_token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "999999", "extraction_time": 6.568277359008789}
2007	479	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:39:42.632172	{"data": {"title": "Execute an SQL query in Microsoft SQL", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:42:11.933005", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:42:11.933005", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "479", "extraction_time": 6.73274827003479}
2008	481	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:39:42.641561	{"data": {"title": "Create a new task in Todoist", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:42:12.580405", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:42:12.580405", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "481", "extraction_time": 7.432240962982178}
2006	483	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:39:23.243988	{"data": {"title": "Create a new customer in Chargebee", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:41:54.737680", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:41:54.737680", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "483", "extraction_time": 9.86656904220581}
2058	9999999	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:43:51.228499	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:52:02.183755", "general_tags": ["Strictly necessary", "Targeting", "Performance", "Functionality"], "updated_date": "2025-10-12T15:52:02.183755", "prerequisites": ["mplates/search\\",searchFiltersApiUrl:\\"https://api.n8n.io/api/templates/search/filters\\",templatesWor", "kflowsApiUrl:\\"https://api.n8n.io/api/templates/workflows\\",categoriesApiUrl:\\"https://ap", "i.n8n.io/api/templates/categories\\",creatorsApiUrl:\\"https://api.n8n.io/api/creators\\",workflowsApi", "management", "csrf_token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "9999999", "extraction_time": 5.09463906288147}
1991	498	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:37:30.892758	{"data": {"title": "Send a private message on Zulip", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:39:43.433106", "general_tags": ["Use for free", "Community", "Use cases"], "updated_date": "2025-10-12T12:39:43.433106", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Uncategorized", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": []}, "error": null, "success": true, "workflow_id": "498", "extraction_time": 12.386471509933472}
1993	497	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:37:48.377865	{"data": {"title": "Create a contact in Drift", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:40:15.127291", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:40:15.127291", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "497", "extraction_time": 15.503637075424194}
1989	2462	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 07:48:13.941191	{"data": {"title": "Angie, Personal AI Assistant with Telegram Voice and Text", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "How it works: This project creates a personal AI assistant named Angie that operates through Telegram.", "node_tags": ["github147,222", "hiring"], "description": "How it works: This project creates a personal AI assistant named Angie that operates through Telegram. Angie can summarize daily emails, look up calendar...", "created_date": "2025-10-12T14:43:55.254411", "general_tags": ["Functionality", "Performance", "Targeting", "Strictly necessary"], "updated_date": "2025-10-12T14:43:55.254411", "prerequisites": ["mplates/search\\",searchFiltersApiUrl:\\"https://api.n8n.io/api/templates/search/filters\\",templatesWor", "reTop guidesTelegram botsOpen-source chatbotOpen-source LLMOpen-source", "some technical knowledge + imagination", "i-assistant-with-telegram-voice-and-text/\\",[],{\\"id\\":5,\\"attributes\\":192},{\\"c", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "How it works: This project creates a personal AI assistant named Angie that operates through Telegram. Angie can summarize daily emails, look up calendar...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "2462", "extraction_time": 27.01726746559143}
1990	499	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:37:30.214252	{"data": {"title": "Create a user profile in Vero", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:39:44.850932", "general_tags": ["Use for free", "Community", "Use cases"], "updated_date": "2025-10-12T12:39:44.850932", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Uncategorized", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": []}, "error": null, "success": true, "workflow_id": "499", "extraction_time": 12.611307621002197}
1997	493	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:38:15.092716	{"data": {"title": "Get details of a forum in Disqus", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:40:44.832720", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:40:44.832720", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Uncategorized", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": []}, "error": null, "success": true, "workflow_id": "493", "extraction_time": 17.00592279434204}
2000	490	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:38:34.801642	{"data": {"title": "Receive updates for all changes in Pipedrive", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:41:02.053658", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:41:02.053658", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "490", "extraction_time": 7.969431400299072}
2004	482	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 11:39:23.097075	{"data": {"title": "Insert data into a new row for a table in Coda", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "workflow-screenshot.", "node_tags": ["hiring", "github147,222"], "description": "workflow-screenshot", "created_date": "2025-10-12T12:41:55.698253", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T12:41:55.698253", "prerequisites": [".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "some technical knowledge + imagination", "to be approved before they can be set in the browser", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "workflow-screenshot", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "482", "extraction_time": 9.981882333755493}
2059	500000	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:43:51.2285	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:52:02.174295", "general_tags": ["Strictly necessary", "Targeting", "Performance", "Functionality"], "updated_date": "2025-10-12T15:52:02.174295", "prerequisites": ["mplates/search\\",searchFiltersApiUrl:\\"https://api.n8n.io/api/templates/search/filters\\",templatesWor", "kflowsApiUrl:\\"https://api.n8n.io/api/templates/workflows\\",categoriesApiUrl:\\"https://ap", "i.n8n.io/api/templates/categories\\",creatorsApiUrl:\\"https://api.n8n.io/api/creators\\",workflowsApi", "management", "csrf_token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "500000", "extraction_time": 5.081316232681274}
2055	1000	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:27:07.212469	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:57:15.266181", "general_tags": ["Strictly necessary", "Targeting", "Functionality", "Performance"], "updated_date": "2025-10-12T15:57:15.266181", "prerequisites": ["mplates/search\\",searchFiltersApiUrl:\\"https://api.n8n.io/api/templates/search/filters\\",templatesWor", "{\\n\\t\\tcontent: attr(label);\\n\\t\\tfont-weight: bold;\\n\\t\\twidth: 120px;\\n\\t\\tmin-width: 120px;\\n\\t}", "to be approved before they can be set in the browser", ".io\\",productApiUrl:\\"https://api.n8n.io\\",siteUrl:\\"https://n8n.io\\",nodeLogoDir:\\"/no", "okieName:\\"strapi_jwt\\",devtools:false},socialShare:{baseUrl:\\"https:"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "1000", "extraction_time": 4.524630308151245}
2009	2463	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 14:22:36.392252	{"data": {"title": "Enrich Company Data from Google Sheet with OpenAI Agent and ScrapingBee", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "This workflow demonstrates how to enrich data from a list of companies in a spreadsheet.", "node_tags": ["github147,222", "hiring"], "description": "This workflow demonstrates how to enrich data from a list of companies in a spreadsheet. While this workflow is production-ready if all steps are followed,...", "created_date": "2025-10-12T14:43:53.565799", "general_tags": ["Functionality", "Performance", "Targeting", "Strictly necessary"], "updated_date": "2025-10-12T14:43:53.565799", "prerequisites": ["mplates/search\\",searchFiltersApiUrl:\\"https://api.n8n.io/api/templates/search/filters\\",templatesWor", "reTop guidesTelegram botsOpen-source chatbotOpen-source LLMOpen-source", "some technical knowledge + imagination", "__Secure-ROLLOUT_TOKEN", "getting started"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "This workflow demonstrates how to enrich data from a list of companies in a spreadsheet. While this workflow is production-ready if all steps are followed,...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "2463", "extraction_time": 26.32874822616577}
2010	2465	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 14:22:36.392255	{"data": {"title": "Building Your First WhatsApp Chatbot", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "This n8n template builds a simple WhatsApp chabot acting as a Sales Agent.", "node_tags": ["github147,222", "hiring"], "description": "This n8n template builds a simple WhatsApp chabot acting as a Sales Agent. The Agent is backed by a product catalog vector store to better answer user's...", "created_date": "2025-10-12T14:43:56.866215", "general_tags": ["Functionality", "Performance", "Targeting", "Strictly necessary"], "updated_date": "2025-10-12T14:43:56.866215", "prerequisites": ["mplates/search\\",searchFiltersApiUrl:\\"https://api.n8n.io/api/templates/search/filters\\",templatesWor", "reTop guidesTelegram botsOpen-source chatbotOpen-source LLMOpen-source", "some technical knowledge + imagination", "__Secure-ROLLOUT_TOKEN", "ve setup and configured your WhatsApp account and credentials"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "This n8n template builds a simple WhatsApp chabot acting as a Sales Agent. The Agent is backed by a product catalog vector store to better answer user's...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "2465", "extraction_time": 26.930442094802856}
2011	2464	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 14:22:36.392255	{"data": {"title": "Scale Deal Flow with a Pitch Deck AI Vision, Chatbot and QDrant Vector Store", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "Are you a popular tech startup accelerator (named after a particular higher order function) overwhelmed with 1000s of pitch decks on a daily basis? Wish you.", "node_tags": ["github147,222", "hiring"], "description": "Are you a popular tech startup accelerator (named after a particular higher order function) overwhelmed with 1000s of pitch decks on a daily basis? Wish you...", "created_date": "2025-10-12T14:43:55.259855", "general_tags": ["Functionality", "Performance", "Targeting", "Strictly necessary"], "updated_date": "2025-10-12T14:43:55.259855", "prerequisites": ["mplates/search\\",searchFiltersApiUrl:\\"https://api.n8n.io/api/templates/search/filters\\",templatesWor", "reTop guidesTelegram botsOpen-source chatbotOpen-source LLMOpen-source", "some technical knowledge + imagination", "n8n v1", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "Are you a popular tech startup accelerator (named after a particular higher order function) overwhelmed with 1000s of pitch decks on a daily basis? Wish you...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "2464", "extraction_time": 26.625581741333008}
2012	2466	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 14:22:36.392255	{"data": {"title": "Respond to WhatsApp Messages with AI Like a Pro!", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "This n8n template demonstrates the beginnings of building your own n8n-powered WhatsApp chatbot! Under the hood, utilise n8n's powerful AI features to.", "node_tags": ["github147,222", "hiring"], "description": "This n8n template demonstrates the beginnings of building your own n8n-powered WhatsApp chatbot! Under the hood, utilise n8n's powerful AI features to...", "created_date": "2025-10-12T14:43:53.852140", "general_tags": ["Functionality", "Performance", "Targeting", "Strictly necessary"], "updated_date": "2025-10-12T14:43:53.852140", "prerequisites": ["mplates/search\\",searchFiltersApiUrl:\\"https://api.n8n.io/api/templates/search/filters\\",templatesWor", "reTop guidesTelegram botsOpen-source chatbotOpen-source LLMOpen-source", "WhatsApp Buisness account", "some technical knowledge + imagination", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "This n8n template demonstrates the beginnings of building your own n8n-powered WhatsApp chatbot! Under the hood, utilise n8n's powerful AI features to...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "2466", "extraction_time": 26.43416476249695}
2015	3002	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 14:46:17.943008	{"data": {"title": "Dynamically Run SuiteQL Queries in NetSuite via HTTP Webhook in n8n", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "Dynamically Run SuiteQL Queries in NetSuite via HTTP Webhook in n8n &gt; Important: This template uses a NetSuite community node, so it only works on.", "node_tags": ["github147,222", "hiring"], "description": "Dynamically Run SuiteQL Queries in NetSuite via HTTP Webhook in n8n &gt; Important: This template uses a NetSuite community node, so it only works on...", "created_date": "2025-10-12T15:03:06.881716", "general_tags": ["Targeting", "Performance", "Functionality", "Strictly necessary"], "updated_date": "2025-10-12T15:03:06.881716", "prerequisites": ["__sec__token", "btain the required consumer key, consumer secret, token ID, and token secret.", "NetSuite Community Node\\n\\nThis workflow requires the NetSuite community node", "support, contact us at [support@dataants", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "Dynamically Run SuiteQL Queries in NetSuite via HTTP Webhook in n8n &gt; Important: This template uses a NetSuite community node, so it only works on...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3002", "extraction_time": 9.472684144973755}
2013	3000	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 14:46:17.943005	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:03:04.618069", "general_tags": ["Targeting", "Performance", "Functionality", "Strictly necessary"], "updated_date": "2025-10-12T15:03:04.618069", "prerequisites": ["__sec__token", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "{\\n\\t\\tcontent: attr(label);\\n\\t\\tfont-weight: bold;\\n\\t\\twidth: 120px;\\n\\t\\tmin-width: 120px;\\n\\t}", "kflowsApiUrl:\\"https://api.n8n.io/api/templates/workflows\\",categoriesApiUrl:\\"https://ap", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3000", "extraction_time": 7.00296950340271}
2014	3001	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 14:46:17.943007	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:03:04.303212", "general_tags": ["Targeting", "Performance", "Functionality", "Strictly necessary"], "updated_date": "2025-10-12T15:03:04.303212", "prerequisites": ["__sec__token", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "{\\n\\t\\tcontent: attr(label);\\n\\t\\tfont-weight: bold;\\n\\t\\twidth: 120px;\\n\\t\\tmin-width: 120px;\\n\\t}", "kflowsApiUrl:\\"https://api.n8n.io/api/templates/workflows\\",categoriesApiUrl:\\"https://ap", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3001", "extraction_time": 6.726034641265869}
2043	40010	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:23:57.367571	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:24:48.533014", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T15:24:48.533014", "prerequisites": ["okieName:\\"strapi_jwt\\",devtools:false},socialShare:{baseUrl:\\"https:", "__Secure-ROLLOUT_TOKEN", "__sec__token", "token_v2", "csrf_token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "40010", "extraction_time": 65.01400470733643}
2018	3007	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108288	{"data": {"title": "YouTube Shorts Automation - The Game-Changer in Scroll-Stopping Short Clips", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "Automatically Create and Post YouTube Shorts from Podcasts and Other Videos Using AI (Simplified).", "node_tags": ["github147,222", "hiring"], "description": "Automatically Create and Post YouTube Shorts from Podcasts and Other Videos Using AI (Simplified). Transform podcasts and other videos into captivating,...", "created_date": "2025-10-12T15:28:04.662274", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:28:04.662274", "prerequisites": ["to be approved before they can be set in the browser", "vg\\",\\"strapi-provider-upload-azure-storage\\",\\"2025-04-10T09:58:", "__Secure-ROLLOUT_TOKEN", "reTop guidesTelegram botsOpen-source chatbotOpen-source LLMOpen-source", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "Automatically Create and Post YouTube Shorts from Podcasts and Other Videos Using AI (Simplified). Transform podcasts and other videos into captivating,...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3007", "extraction_time": 21.45016574859619}
2046	40013	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:25:43.410282	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:24:46.116188", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T15:24:46.116188", "prerequisites": ["okieName:\\"strapi_jwt\\",devtools:false},socialShare:{baseUrl:\\"https:", "__Secure-ROLLOUT_TOKEN", "__sec__token", "token_v2", "csrf_token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "40013", "extraction_time": 63.13387632369995}
2047	40014	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:25:43.410285	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:24:55.727407", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T15:24:55.727407", "prerequisites": ["okieName:\\"strapi_jwt\\",devtools:false},socialShare:{baseUrl:\\"https:", "__Secure-ROLLOUT_TOKEN", "__sec__token", "token_v2", "csrf_token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "40014", "extraction_time": 65.73959827423096}
2048	40011	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:25:43.410285	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:24:55.936112", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T15:24:55.936112", "prerequisites": ["okieName:\\"strapi_jwt\\",devtools:false},socialShare:{baseUrl:\\"https:", "__Secure-ROLLOUT_TOKEN", "__sec__token", "token_v2", "csrf_token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "40011", "extraction_time": 65.90888023376465}
2049	40015	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:25:43.410285	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:24:45.932025", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T15:24:45.932025", "prerequisites": ["okieName:\\"strapi_jwt\\",devtools:false},socialShare:{baseUrl:\\"https:", "__Secure-ROLLOUT_TOKEN", "__sec__token", "token_v2", "csrf_token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "40015", "extraction_time": 63.77889800071716}
2050	40012	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:25:43.410285	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:24:47.814951", "general_tags": ["Targeting", "Performance", "Strictly necessary", "Functionality"], "updated_date": "2025-10-12T15:24:47.814951", "prerequisites": ["okieName:\\"strapi_jwt\\",devtools:false},socialShare:{baseUrl:\\"https:", "__Secure-ROLLOUT_TOKEN", "__sec__token", "token_v2", "csrf_token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "40012", "extraction_time": 64.81872320175171}
2016	3006	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108285	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:27:56.526855", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:27:56.526855", "prerequisites": ["to be approved before they can be set in the browser", "__Secure-ROLLOUT_TOKEN", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "management", "__sec__token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3006", "extraction_time": 18.94026255607605}
2017	3003	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108287	{"data": {"title": "Monitor Favorite YouTube Channels Through RSS feeds and Receive Notifications", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "This workflow creates an automated system for monitoring and receiving notifications about new videos from your favorite YouTube channels through RSS feeds,.", "node_tags": ["github147,222", "hiring"], "description": "This workflow creates an automated system for monitoring and receiving notifications about new videos from your favorite YouTube channels through RSS feeds,...", "created_date": "2025-10-12T15:27:57.530329", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:27:57.530329", "prerequisites": ["OpenAI API key for content processing", "to be approved before they can be set in the browser", "vg\\",\\"strapi-provider-upload-azure-storage\\",\\"2025-04-10T09:58:", "l + TelegramJoseph LePageHTTP RequestMergeEdit Fields (Set)+18", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "This workflow creates an automated system for monitoring and receiving notifications about new videos from your favorite YouTube channels through RSS feeds,...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3003", "extraction_time": 20.716069221496582}
2019	3005	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108288	{"data": {"title": "✨🔪 Advanced AI Powered Document Parsing & Text Extraction with Llama Parse", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "Description This workflow automates document processing using LlamaParse to extract and analyze text from various file formats.", "node_tags": ["github147,222", "hiring"], "description": "Description This workflow automates document processing using LlamaParse to extract and analyze text from various file formats. It intelligently processes...", "created_date": "2025-10-12T15:27:57.534648", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:27:57.534648", "prerequisites": ["h2Api\\":228,\\"telegramApi\\":233},{\\"id\\":208,\\"name\\":209,\\"parentNodeTypes\\":210}", "Maintains detailed records for accounting purposes", "to be approved before they can be set in the browser", "vg\\",\\"strapi-provider-upload-azure-storage\\",\\"2025-04-10T09:58:", "Add Telegram bot credentials for notifications"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "Description This workflow automates document processing using LlamaParse to extract and analyze text from various file formats. It intelligently processes...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3005", "extraction_time": 19.660483598709106}
2020	3004	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108288	{"data": {"title": "🚀 TikTok Video Automation Tool ✨ – Highly Optimized with OpenAI & Replicate", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "🚀 TikTok Video Automation Tool ✨ (Frequent Updates) Create viral TikTok videos effortlessly — no editing skills required! Who is this for? 🎯 ✅ Content.", "node_tags": ["github147,222", "hiring"], "description": "🚀 TikTok Video Automation Tool ✨ (Frequent Updates) Create viral TikTok videos effortlessly — no editing skills required! Who is this for? 🎯 ✅ Content...", "created_date": "2025-10-12T15:28:03.017598", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:28:03.017598", "prerequisites": ["to be approved before they can be set in the browser", "vg\\",\\"strapi-provider-upload-azure-storage\\",\\"2025-04-10T09:58:", "⚙️ (5-10 min)\\n🔹 Connect required APIs (most have free plans)", "__Secure-ROLLOUT_TOKEN", "reTop guidesTelegram botsOpen-source chatbotOpen-source LLMOpen-source"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "🚀 TikTok Video Automation Tool ✨ (Frequent Updates) Create viral TikTok videos effortlessly — no editing skills required! Who is this for? 🎯 ✅ Content...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3004", "extraction_time": 20.77211284637451}
2021	3010	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108288	{"data": {"title": "📄✨ Easy WordPress Content Creation from PDF Docs + Human in the Loop Gmail", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "📄✨ Easy WordPress Content Creation from PDF Docs + Human in the Loop Gmail This n8n workflow automates the process of transforming PDF documents into.", "node_tags": ["github147,222", "hiring"], "description": "📄✨ Easy WordPress Content Creation from PDF Docs + Human in the Loop Gmail This n8n workflow automates the process of transforming PDF documents into...", "created_date": "2025-10-12T15:28:32.038463", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:28:32.038463", "prerequisites": ["to be approved before they can be set in the browser", "publishing", "vg\\",\\"strapi-provider-upload-azure-storage\\",\\"2025-04-10T09:58:", "l + TelegramJoseph LePageHTTP RequestMergeEdit Fields (Set)+18", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "📄✨ Easy WordPress Content Creation from PDF Docs + Human in the Loop Gmail This n8n workflow automates the process of transforming PDF documents into...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3010", "extraction_time": 20.490050315856934}
2022	3011	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108289	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:28:29.518629", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:28:29.518629", "prerequisites": ["to be approved before they can be set in the browser", "__Secure-ROLLOUT_TOKEN", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "management", "__sec__token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3011", "extraction_time": 14.606706619262695}
2023	3012	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108289	{"data": {"title": "🌐 Confluence Page AI Chatbot Workflow", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "🌐 Confluence Page AI Chatbot Workflow This n8n workflow template enables users to interact with an AI-powered chatbot designed to retrieve, process, and.", "node_tags": ["github147,222", "hiring"], "description": "🌐 Confluence Page AI Chatbot Workflow This n8n workflow template enables users to interact with an AI-powered chatbot designed to retrieve, process, and...", "created_date": "2025-10-12T15:28:32.034987", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:28:32.034987", "prerequisites": ["Install n8n locally or on a server using the official ins", "to be approved before they can be set in the browser", "vg\\",\\"strapi-provider-upload-azure-storage\\",\\"2025-04-10T09:58:", "l + TelegramJoseph LePageHTTP RequestMergeEdit Fields (Set)+18", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "🌐 Confluence Page AI Chatbot Workflow This n8n workflow template enables users to interact with an AI-powered chatbot designed to retrieve, process, and...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3012", "extraction_time": 20.414562463760376}
2024	3009	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108289	{"data": {"title": "🧠 *NEW* Claude 3.7 Extended Thinking AI Agent 🤖 – Unlock Ultimate Intelligence", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "🧠 NEW Claude 3.", "node_tags": ["github147,222", "hiring"], "description": "🧠 NEW Claude 3.7 Extended Thinking AI Agent 🤖 – Unlock Ultimate Intelligence Supercharge Claude 3.7 with full customization & deeper reasoning! Who is...", "created_date": "2025-10-12T15:28:38.369928", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:28:38.369928", "prerequisites": ["API 🔗\\n\\nClaude 3", "Quick Setup ⚙️ (1-3 min)", "to be approved before they can be set in the browser", "vg\\",\\"strapi-provider-upload-azure-storage\\",\\"2025-04-10T09:58:", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "🧠 NEW Claude 3.7 Extended Thinking AI Agent 🤖 – Unlock Ultimate Intelligence Supercharge Claude 3.7 with full customization & deeper reasoning! Who is...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3009", "extraction_time": 21.225303888320923}
2025	3008	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108289	{"data": {"title": "Extract Thai Bank Slip Data from LINE using SpaceOCR and Save to Google Sheets", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "Who is this for?This workflow is ideal for businesses, accountants, and finance teams who receive bank slip images via LINE and want to automate the.", "node_tags": ["github147,222", "hiring"], "description": "Who is this for?This workflow is ideal for businesses, accountants, and finance teams who receive bank slip images via LINE and want to automate the...", "created_date": "2025-10-12T15:28:29.520097", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:28:29.520097", "prerequisites": ["Ensure your Google Sheets API is enabled and connected to n8n.", "to be approved before they can be set in the browser", "vg\\",\\"strapi-provider-upload-azure-storage\\",\\"2025-04-10T09:58:", "** ```Your SpaceOCR API Key```\\\\n#### 4", "__Secure-ROLLOUT_TOKEN"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "Who is this for?This workflow is ideal for businesses, accountants, and finance teams who receive bank slip images via LINE and want to automate the...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3008", "extraction_time": 20.09019899368286}
2026	3015	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108289	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:29:03.628977", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:29:03.628977", "prerequisites": ["to be approved before they can be set in the browser", "__Secure-ROLLOUT_TOKEN", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "management", "__sec__token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3015", "extraction_time": 11.11450719833374}
2027	3013	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.10829	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:29:02.519052", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:29:02.519052", "prerequisites": ["to be approved before they can be set in the browser", "__Secure-ROLLOUT_TOKEN", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "management", "__sec__token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3013", "extraction_time": 10.487990856170654}
2028	3017	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.10829	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:29:03.131439", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:29:03.131439", "prerequisites": ["to be approved before they can be set in the browser", "__Secure-ROLLOUT_TOKEN", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "management", "__sec__token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3017", "extraction_time": 10.838865280151367}
2029	3016	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.10829	{"data": {"title": "Invoices from Gmail to Drive and Google Sheets", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "Attachments Gmail to Drive and Google Sheets DescriptionAutomatically process invoice emails by saving attachments to Google Drive and extracting key.", "node_tags": ["github147,222", "hiring"], "description": "Attachments Gmail to Drive and Google Sheets DescriptionAutomatically process invoice emails by saving attachments to Google Drive and extracting key...", "created_date": "2025-10-12T15:29:09.557914", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:29:09.557914", "prerequisites": ["2\\",[204,205],\\"n8n-nodes-base", "Google Drive account", "to n8n credentials\\\\n\\\\n4", "to be approved before they can be set in the browser", "vg\\",\\"strapi-provider-upload-azure-storage\\",\\"2025-04-10T09:58:"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "Attachments Gmail to Drive and Google Sheets DescriptionAutomatically process invoice emails by saving attachments to Google Drive and extracting key...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3016", "extraction_time": 17.414541959762573}
2030	3014	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.10829	{"data": {"title": "🔄 Workflow Repos8r: Github Version Control User Interface for n8n Workflows", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "🔥 n8n Members Sale – n8n Community Members Get ideoGener8r for Just $10! (Reg.", "node_tags": ["github147,222", "hiring"], "description": "🔥 n8n Members Sale – n8n Community Members Get ideoGener8r for Just $10! (Reg. $15)Use Coupon Code: FeelinTheFlowgramming(Valid for n8n community members)...", "created_date": "2025-10-12T15:29:07.820020", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:29:07.820020", "prerequisites": ["to be approved before they can be set in the browser", "Header Authentication: Secure API communication with authentication tokens", "vg\\",\\"strapi-provider-upload-azure-storage\\",\\"2025-04-10T09:58:", "__Secure-ROLLOUT_TOKEN", "Create Generic Header Auth credentials"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "🔥 n8n Members Sale – n8n Community Members Get ideoGener8r for Just $10! (Reg. $15)Use Coupon Code: FeelinTheFlowgramming(Valid for n8n community members)...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3014", "extraction_time": 16.407719612121582}
2031	3019	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108291	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:29:30.340386", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:29:30.340386", "prerequisites": ["to be approved before they can be set in the browser", "__Secure-ROLLOUT_TOKEN", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "management", "__sec__token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3019", "extraction_time": 10.481465816497803}
2032	3022	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108291	{"data": {"title": "Unknown Title", "views": 0, "author": "Unknown Author", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "General workflow automation", "node_tags": [], "description": "", "created_date": "2025-10-12T15:29:36.438314", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:29:36.438314", "prerequisites": ["to be approved before they can be set in the browser", "__Secure-ROLLOUT_TOKEN", "{\\n    background-color: #FFFFFF;\\n}\\n#cookiescript_injected", "management", "__sec__token"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3022", "extraction_time": 15.577648639678955}
2033	3021	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108291	{"data": {"title": "Get GitHub Issue Updates and Send Notifications to Telegram", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "Who is this for? This workflow is ideal for: Developers who want to stay updated on issues without constantly checking GitHub.", "node_tags": ["github147,222", "hiring"], "description": "Who is this for? This workflow is ideal for: Developers who want to stay updated on issues without constantly checking GitHub.Managers tracking issue...", "created_date": "2025-10-12T15:29:38.132235", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:29:38.132235", "prerequisites": ["This workflow connects GitHub and Telegram to provide real-time issue notifications:", "rentNodeTypes\\":177},\\"MEwozHKykMH3flb4\\",\\"Telegram account 2\\",[178],\\"n8n-nodes-base.telegram\\",{\\"id\\":", "n the token.", "Add the Telegram node and enter your bot token.", "to be approved before they can be set in the browser"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "Who is this for? This workflow is ideal for: Developers who want to stay updated on issues without constantly checking GitHub.Managers tracking issue...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3021", "extraction_time": 17.404056549072266}
2034	3020	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108291	{"data": {"title": "AI Linux system administrator for managing Linux VPS instance", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "This n8n workflow template is designed for developers, system administrators, and IT professionals who manage Linux VPS environments.", "node_tags": ["github147,222", "hiring"], "description": "This n8n workflow template is designed for developers, system administrators, and IT professionals who manage Linux VPS environments. It leverages an AI...", "created_date": "2025-10-12T15:29:38.332608", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:29:38.332608", "prerequisites": ["Instructions\\n\\nImport the Workflow: Download and import the workflow into your n8n instance", "to be approved before they can be set in the browser", "vg\\",\\"strapi-provider-upload-azure-storage\\",\\"2025-04-10T09:58:", "__Secure-ROLLOUT_TOKEN", "reTop guidesTelegram botsOpen-source chatbotOpen-source LLMOpen-source"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "This n8n workflow template is designed for developers, system administrators, and IT professionals who manage Linux VPS environments. It leverages an AI...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3020", "extraction_time": 17.58302927017212}
2035	3018	\N	\N	\N	\N	\N	\N	\N	[]	[]	\N	\N	2025-10-12 15:07:48.108291	{"data": {"title": "Automated Content Generation & Publishing - Wordpress", "views": 0, "author": "Igor Fediczko@igordisco", "upvotes": 0, "industry": ["Strictly necessary"], "use_case": "Workflow Description: Automated Content Publishing for WordPressThis n8n workflow automates the entire process of content generation, image selection, and.", "node_tags": ["github147,222", "hiring"], "description": "Workflow Description: Automated Content Publishing for WordPressThis n8n workflow automates the entire process of content generation, image selection, and...", "created_date": "2025-10-12T15:29:34.644985", "general_tags": ["Performance", "Strictly necessary", "Functionality", "Targeting"], "updated_date": "2025-10-12T15:29:34.644985", "prerequisites": ["✅ WordPress API Integration", "to be approved before they can be set in the browser", "vg\\",\\"strapi-provider-upload-azure-storage\\",\\"2025-04-10T09:58:", "__Secure-ROLLOUT_TOKEN", "reTop guidesTelegram botsOpen-source chatbotOpen-source LLMOpen-source"], "difficulty_level": "intermediate", "primary_category": "Strictly necessary", "setup_instructions": "Workflow Description: Automated Content Publishing for WordPressThis n8n workflow automates the entire process of content generation, image selection, and...", "estimated_setup_time": "4 minutes 59 sec", "secondary_categories": ["Performance", "Targeting", "Functionality", "Strictly necessary cookies allow core website functionality such as user login and account management. The website cannot be used properly without strictly necessary cookies.", "Performance cookies are used to see how visitors use the website, eg. analytics cookies. Those cookies cannot be used to directly identify a certain visitor.", "Targeting cookies are used to identify visitors between different websites, eg. content partners, banner networks. Those cookies may be used by companies to build a profile of visitor interests or show relevant ads on other websites.", "Functionality cookies are used to remember visitor information on the website, eg. language, timezone, enhanced content."]}, "error": null, "success": true, "workflow_id": "3018", "extraction_time": 15.186316728591919}
\.


--
-- Data for Name: workflow_structure; Type: TABLE DATA; Schema: public; Owner: scraper_user
--

COPY public.workflow_structure (id, workflow_id, node_count, connection_count, node_types, extraction_type, fallback_used, workflow_json, extracted_at) FROM stdin;
1420	499	2	1	[]	full	f	{"id": 499, "name": "Create a user profile in Vero", "workflow": {"id": "127", "name": "Create a user profile in Vero", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "Vero", "type": "n8n-nodes-base.vero", "position": [450, 300], "parameters": {"id": "", "additionalFields": {}}, "credentials": {"veroApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "Vero", "type": "main", "index": 0}]]}}}}	2025-10-12 11:37:30.217615
1421	498	2	1	[]	full	f	{"id": 498, "name": "Send a private message on Zulip", "workflow": {"id": "126", "name": "Send a private message on Zulip", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "Zulip", "type": "n8n-nodes-base.zulip", "position": [450, 300], "parameters": {"to": []}, "credentials": {"zulipApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "Zulip", "type": "main", "index": 0}]]}}}}	2025-10-12 11:37:30.893385
1419	2462	15	12	[]	full	f	{"id": 2462, "name": "Angie, Personal AI Assistant with Telegram Voice and Text", "workflow": {"meta": {"instanceId": "04ddf1130268840c229f501edc57936c3c131339e8b0cdd696fcf3a7c69e696e", "templateId": "2462"}, "nodes": [{"id": "c70236ea-91ab-4e47-b6f6-63a70ede5d3c", "name": "Google Calendar", "type": "n8n-nodes-base.googleCalendarTool", "position": [2000, 704], "parameters": {"options": {"fields": "=items(summary, start(dateTime))", "timeMin": "={{$fromAI(\\"date\\",\\"the date after which to fetch the messages in format YYYY-MM-DDTHH:MM:SS\\")}}"}, "calendar": {"__rl": true, "mode": "list", "value": "derekcheungsa@gmail.com", "cachedResultName": "derekcheungsa@gmail.com"}, "operation": "getAll"}, "typeVersion": 1.1}, {"id": "d2287bea-de47-4180-8ee6-55d4ab1a89da", "name": "Window Buffer Memory", "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow", "position": [1760, 704], "parameters": {"sessionKey": "={{ $('Listen for incoming events').first().json.message.from.id }}", "sessionIdType": "customKey"}, "typeVersion": 1.2}, {"id": "fa955731-86f6-4e4d-8604-dab5f52dee87", "name": "Get Email", "type": "n8n-nodes-base.gmailTool", "position": [1872, 704], "webhookId": "abf7e707-2eb8-4063-a920-b8ed975b0d70", "parameters": {"filters": {"labelIds": ["INBOX", "UNREAD"], "readStatus": "unread", "receivedAfter": "={{$fromAI(\\"date\\",\\"the date after which to fetch the messages in format YYYY-MM-DDTHH:MM:SS\\")}}"}, "operation": "getAll"}, "typeVersion": 2.1}, {"id": "46511f47-1687-4cbe-ae41-ceb205ed1f11", "name": "OpenAI Chat Model", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [1632, 704], "parameters": {"options": {}}, "typeVersion": 1}, {"id": "64fe44db-af19-43eb-9ff1-de0a72a9e645", "name": "Listen for incoming events", "type": "n8n-nodes-base.telegramTrigger", "position": [832, 384], "webhookId": "322dce18-f93e-4f86-b9b1-3305519b7834", "parameters": {"updates": ["message"], "additionalFields": {}}, "typeVersion": 1}, {"id": "e35c04ff-a050-4564-8c1b-5b22b556872f", "name": "Telegram", "type": "n8n-nodes-base.telegram", "onError": "continueErrorOutput", "position": [2272, 384], "webhookId": "e699405e-8e52-4d38-a06b-1fa8edf050bd", "parameters": {"text": "={{ $json.output }}", "chatId": "={{ $('Listen for incoming events').first().json.message.from.id }}", "additionalFields": {"parse_mode": "Markdown", "appendAttribution": false}}, "typeVersion": 1.1}, {"id": "e791d4f8-2c19-4c14-a71e-39a04f22e944", "name": "If", "type": "n8n-nodes-base.if", "position": [1200, 384], "parameters": {"options": {}, "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"id": "a0bf9719-4272-46f6-ab3b-eda6f7b44fd8", "operator": {"type": "string", "operation": "empty", "singleValue": true}, "leftValue": "={{ $json.message.text }}", "rightValue": ""}]}}, "typeVersion": 2.2}, {"id": "5bd1788a-3d08-4eb3-8e03-3ce82f44d2a7", "name": "Speech to Text", "type": "@n8n/n8n-nodes-langchain.openAi", "position": [1616, 384], "parameters": {"options": {}, "resource": "audio", "operation": "transcribe"}, "typeVersion": 1.3}, {"id": "b67a2a93-517b-469e-aaa4-32c422710743", "name": "Voice or Text", "type": "n8n-nodes-base.set", "position": [1040, 384], "parameters": {"fields": {"values": [{"name": "text", "stringValue": "={{ $json?.message?.text || \\"\\" }}"}]}, "options": {}}, "typeVersion": 3.2}, {"id": "8105c39f-9e87-44c4-9215-b3777f0b4164", "name": "Get Voice File", "type": "n8n-nodes-base.telegram", "position": [1376, 384], "webhookId": "24273e7e-6133-415e-8627-a9d6dc0f107c", "parameters": {"fileId": "={{ $('Listen for incoming events').item.json.message.voice.file_id }}", "resource": "file", "additionalFields": {}}, "typeVersion": 1.1}, {"id": "759b975f-d17c-4386-a5b3-12413f0361f4", "name": "Angie, AI Assistant 👩🏻‍🏫", "type": "@n8n/n8n-nodes-langchain.agent", "position": [1776, 384], "parameters": {"text": "={{ $json.text }}", "options": {"systemMessage": "=You are a helpful assistant.\\n\\nToday's date is {{ $now }}.\\n\\nGuidelines:\\n- When fetching emails, filter out any promotional emails. \\n- When summarizing emails, include Sender, Message date, subject, and brief summary of email.\\n- if the user did not specify a date in the request assume they are asking for today\\n- Use baserow tool to answer questions about tasks\\n- When answering questions about calendar events, filter out events that don't apply to the question.  For example, the question is about events for today, only reply with events for today. Don't mention future events if it's more than 1 week away"}, "promptType": "define"}, "typeVersion": 1.6}, {"id": "5537c777-f003-4673-b48a-4993a0c10520", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [1008, 288], "parameters": {"color": 5, "width": 496.25, "height": 278.75, "content": "## Process Telegram Request\\n"}, "typeVersion": 1}, {"id": "40e92679-b47a-4213-bb23-3f8d086459f2", "name": "Tasks", "type": "n8n-nodes-base.baserowTool", "position": [2112, 704], "parameters": {"tableId": 372174, "databaseId": 146496, "additionalOptions": {}}, "typeVersion": 1}, {"id": "570a0647-b571-4ebc-9dfe-40244b5a0b2a", "name": "Contacts", "type": "n8n-nodes-base.baserowTool", "position": [2240, 704], "parameters": {"tableId": 372177, "databaseId": 146496, "descriptionType": "manual", "toolDescription": "Useful for getting contact information.  For example emails or phone numbers.", "additionalOptions": {}}, "typeVersion": 1}, {"id": "3f66a5dd-6cad-4239-94a8-1b30fbf32943", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [0, 128], "parameters": {"color": 5, "width": 720, "height": 960, "content": "## [Video Tutorial](https://youtu.be/pXjowPc6V2s)\\n@[youtube](pXjowPc6V2s)\\n\\n\\n## Overview\\nMeet Angie - your personal AI assistant that handles voice & text via Telegram to manage your digital life.\\n\\n**To get started:**\\n\\n1. **Connect all credentials** (Telegram, OpenAI, Gmail, etc.)\\n2. **Activate the workflow** and message your Telegram bot:\\n   • \\"What emails do I have today?\\"\\n   • \\"Show me my calendar for tomorrow\\"\\n   • \\"Craete new to-do item\\"\\n   • 🎤 Send voice messages for hands-free interaction\\n\\n## Questions or Need Help?\\n\\nFor setup assistance, customization, or workflow support, join my Skool community!\\n\\n## [AI Automation Engineering Community](https://www.skool.com/ai-automation-engineering-3014)\\n\\nHappy learning! -- Derek Cheung"}, "typeVersion": 1}], "pinData": {}, "connections": {"If": {"main": [[{"node": "Get Voice File", "type": "main", "index": 0}], [{"node": "Angie, AI Assistant 👩🏻‍🏫", "type": "main", "index": 0}]]}, "Tasks": {"ai_tool": [[{"node": "Angie, AI Assistant 👩🏻‍🏫", "type": "ai_tool", "index": 0}]]}, "Contacts": {"ai_tool": [[{"node": "Angie, AI Assistant 👩🏻‍🏫", "type": "ai_tool", "index": 0}]]}, "Get Email": {"ai_tool": [[{"node": "Angie, AI Assistant 👩🏻‍🏫", "type": "ai_tool", "index": 0}]]}, "Voice or Text": {"main": [[{"node": "If", "type": "main", "index": 0}]]}, "Get Voice File": {"main": [[{"node": "Speech to Text", "type": "main", "index": 0}]]}, "Speech to Text": {"main": [[{"node": "Angie, AI Assistant 👩🏻‍🏫", "type": "main", "index": 0}]]}, "Google Calendar": {"ai_tool": [[{"node": "Angie, AI Assistant 👩🏻‍🏫", "type": "ai_tool", "index": 0}]]}, "OpenAI Chat Model": {"ai_languageModel": [[{"node": "Angie, AI Assistant 👩🏻‍🏫", "type": "ai_languageModel", "index": 0}]]}, "Window Buffer Memory": {"ai_memory": [[{"node": "Angie, AI Assistant 👩🏻‍🏫", "type": "ai_memory", "index": 0}]]}, "Listen for incoming events": {"main": [[{"node": "Voice or Text", "type": "main", "index": 0}]]}, "Angie, AI Assistant 👩🏻‍🏫": {"main": [[{"node": "Telegram", "type": "main", "index": 0}]]}}}}	2025-10-12 07:48:34.839968
1422	496	2	1	[]	full	f	{"id": 496, "name": "Create a ticket in Zendesk", "workflow": {"id": "123", "name": "Create a ticket in Zendesk", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "Zendesk", "type": "n8n-nodes-base.zendesk", "position": [450, 300], "parameters": {"description": "", "additionalFields": {}}, "credentials": {"zendeskApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "Zendesk", "type": "main", "index": 0}]]}}}}	2025-10-12 11:37:47.368276
1423	497	2	1	[]	full	f	{"id": 497, "name": "Create a contact in Drift", "workflow": {"id": "125", "name": "Create a contact in Drift", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "Drift ", "type": "n8n-nodes-base.drift", "position": [450, 300], "parameters": {"email": "", "additionalFields": {}}, "credentials": {"driftApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "Drift ", "type": "main", "index": 0}]]}}}}	2025-10-12 11:37:48.378517
1424	495	2	1	[]	full	f	{"id": 495, "name": "Track an event in Segment", "workflow": {"id": "122", "name": "Track an event in Segment", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "Segment", "type": "n8n-nodes-base.segment", "position": [450, 300], "parameters": {"event": "", "resource": "track"}, "credentials": {"segmentApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "Segment", "type": "main", "index": 0}]]}}}}	2025-10-12 11:37:50.556259
1425	491	1	0	[]	full	f	{"id": 491, "name": "Receive updates for changes in the specified list in Trello", "workflow": {"id": "117", "name": "Receive updates for changes in the specified list in Trello", "nodes": [{"name": "Trello Trigger", "type": "n8n-nodes-base.trelloTrigger", "position": [700, 250], "parameters": {"id": ""}, "credentials": {"trelloApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {}}}	2025-10-12 11:38:14.669352
1426	494	2	1	[]	full	f	{"id": 494, "name": "Create a client in Harvest", "workflow": {"id": "120", "name": "Create a client in Harvest", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "Harvest", "type": "n8n-nodes-base.harvest", "position": [450, 300], "parameters": {"name": "", "resource": "client", "operation": "create", "additionalFields": {}}, "credentials": {"harvestApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "Harvest", "type": "main", "index": 0}]]}}}}	2025-10-12 11:38:15.080054
1427	493	2	1	[]	full	f	{"id": 493, "name": "Get details of a forum in Disqus", "workflow": {"id": "119", "name": "Get details of a forum in Disqus", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "Disqus", "type": "n8n-nodes-base.disqus", "position": [450, 300], "parameters": {"id": "hackernoon", "additionalFields": {}}, "credentials": {"disqusApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "Disqus", "type": "main", "index": 0}]]}}}}	2025-10-12 11:38:15.093056
1428	488	1	0	[]	full	f	{"id": 488, "name": "Receive updates when a new account is added by an admin in ActiveCampaign", "workflow": {"id": "112", "name": "Receive updates when a new account is added by an admin in ActiveCampaign", "nodes": [{"name": "ActiveCampaign Trigger", "type": "n8n-nodes-base.activeCampaignTrigger", "position": [700, 250], "parameters": {"events": ["account_add"], "sources": ["admin"]}, "credentials": {"activeCampaignApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {}}}	2025-10-12 11:38:33.385353
1429	489	2	1	[]	full	f	{"id": 489, "name": "Create a deal in Pipedrive", "workflow": {"id": "113", "name": "Create an deal in Pipedrive", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "Pipedrive", "type": "n8n-nodes-base.pipedrive", "position": [450, 300], "parameters": {"title": "", "additionalFields": {}}, "credentials": {"pipedriveApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "Pipedrive", "type": "main", "index": 0}]]}}}}	2025-10-12 11:38:33.793053
1430	490	1	0	[]	full	f	{"id": 490, "name": "Receive updates for all changes in Pipedrive", "workflow": {"id": "115", "name": "Receive updates for all changes in Pipedrive", "nodes": [{"name": "Pipedrive Trigger", "type": "n8n-nodes-base.pipedriveTrigger", "position": [750, 250], "parameters": {}, "credentials": {"pipedriveApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {}}}	2025-10-12 11:38:34.802032
1431	487	1	0	[]	full	f	{"id": 487, "name": "Receive updates for events in ClickUp", "workflow": {"id": "110", "name": "Receive updates for events in ClickUp", "nodes": [{"name": "ClickUp Trigger", "type": "n8n-nodes-base.clickUpTrigger", "position": [700, 250], "parameters": {"team": "", "events": ["*"], "filters": {}}, "credentials": {"clickUpApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {}}}	2025-10-12 11:38:55.084763
1432	486	1	0	[]	full	f	{"id": 486, "name": "Receive updates for events in Chargebee", "workflow": {"id": "108", "name": "Receive updates for events in Chargebee", "nodes": [{"name": "Chargebee Trigger", "type": "n8n-nodes-base.chargebeeTrigger", "position": [700, 250], "parameters": {"events": ["*"]}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {}}}	2025-10-12 11:38:55.540753
1433	485	2	1	[]	full	f	{"id": 485, "name": "Create a task in ClickUp", "workflow": {"id": "105", "name": "Create a task in ClickUp", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "ClickUp", "type": "n8n-nodes-base.clickUp", "position": [450, 300], "parameters": {"list": "", "name": "", "team": "", "space": "", "folder": "", "additionalFields": {}}, "credentials": {"clickUpApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "ClickUp", "type": "main", "index": 0}]]}}}}	2025-10-12 11:38:55.55319
1434	482	3	2	[]	full	f	{"id": 482, "name": "Insert data into a new row for a table in Coda", "workflow": {"id": "102", "name": "Insert data into a new row for a table in Coda", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "Coda", "type": "n8n-nodes-base.coda", "position": [650, 300], "parameters": {"docId": "", "options": {}, "tableId": ""}, "credentials": {"codaApi": ""}, "typeVersion": 1}, {"name": "Set", "type": "n8n-nodes-base.set", "position": [450, 300], "parameters": {"values": {"string": [{"name": "Column 1", "value": "This is column 1 data"}, {"name": "Column 2", "value": "This is column 2 data"}, {"name": "Column 3", "value": "This is column 3 data"}]}, "options": {}}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"Set": {"main": [[{"node": "Coda", "type": "main", "index": 0}]]}, "On clicking 'execute'": {"main": [[{"node": "Set", "type": "main", "index": 0}]]}}}}	2025-10-12 11:39:23.098339
1435	484	2	1	[]	full	f	{"id": 484, "name": "Look up a person using their email in Clearbit", "workflow": {"id": "104", "name": "Look up a person using their email in Clearbit", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "Clearbit", "type": "n8n-nodes-base.clearbit", "position": [450, 300], "parameters": {"email": "", "resource": "person", "additionalFields": {}}, "credentials": {"clearbitApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "Clearbit", "type": "main", "index": 0}]]}}}}	2025-10-12 11:39:23.119707
1436	483	2	1	[]	full	f	{"id": 483, "name": "Create a new customer in Chargebee", "workflow": {"id": "103", "name": "Create a new customer in Chargebee", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "Chargebee", "type": "n8n-nodes-base.chargebee", "position": [460, 300], "parameters": {"resource": "customer", "properties": {"last_name": "", "first_name": ""}}, "credentials": {"chargebeeApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "Chargebee", "type": "main", "index": 0}]]}}}}	2025-10-12 11:39:23.244599
1437	479	2	1	[]	full	f	{"id": 479, "name": "Execute an SQL query in Microsoft SQL", "workflow": {"id": "99", "name": "Execute an SQL query in Microsoft SQL", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [250, 300], "parameters": {}, "typeVersion": 1}, {"name": "Microsoft SQL", "type": "n8n-nodes-base.microsoftSql", "position": [450, 300], "parameters": {"query": "", "operation": "executeQuery"}, "credentials": {"microsoftSql": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "Microsoft SQL", "type": "main", "index": 0}]]}}}}	2025-10-12 11:39:42.632896
1438	481	2	1	[]	full	f	{"id": 481, "name": "Create a new task in Todoist", "workflow": {"id": "100", "name": "Create a new task in Todoist", "nodes": [{"name": "On clicking 'execute'", "type": "n8n-nodes-base.manualTrigger", "position": [550, 250], "parameters": {}, "typeVersion": 1}, {"name": "Todoist", "type": "n8n-nodes-base.todoist", "position": [750, 250], "parameters": {"content": "", "options": {}}, "credentials": {"todoistApi": ""}, "typeVersion": 1}], "active": false, "settings": {}, "connections": {"On clicking 'execute'": {"main": [[{"node": "Todoist", "type": "main", "index": 0}]]}}}}	2025-10-12 11:39:42.641967
1439	2463	13	10	[]	full	f	{"id": 2463, "name": "Enrich Company Data from Google Sheet with OpenAI Agent and ScrapingBee", "workflow": {"id": "TfwQRZkTBtykx1rM", "meta": {"instanceId": "", "templateCredsSetupCompleted": true}, "name": "Enrich Company Data from Google Sheet with OpenAI Agent and Scraper Tool", "tags": [], "nodes": [{"id": "90c02c5e-228e-478b-b06d-424dc0c4f9b9", "name": "Structured Output Parser", "type": "@n8n/n8n-nodes-langchain.outputParserStructured", "position": [1500, 240], "parameters": {"schemaType": "manual", "inputSchema": "{\\n  \\"Business Area\\": {\\n    \\"type\\": \\"string\\",\\n    \\"description\\": \\"Summary of the company's core activities or industry focus.\\"\\n  },\\n  \\"Offers or Product\\": {\\n    \\"type\\": \\"string\\",\\n    \\"description\\": \\"Summary of the company's main products or services.\\"\\n  },\\n  \\"Value Proposition\\": {\\n    \\"type\\": \\"string\\",\\n    \\"description\\": \\"Catchphrase or tagline that represents the company’s value proposition.\\"\\n  },\\n  \\"Business Model\\": {\\n    \\"type\\": \\"string\\",\\n    \\"description\\": \\"Description of the company's business model, including revenue generation, key partnerships, or unique aspects.\\"\\n  },\\n  \\"Ideal Customer Profile\\": {\\n    \\"type\\": \\"string\\",\\n    \\"description\\": \\"Description of the ideal customer profile, based on available information.\\"\\n  },\\n  \\"Additional Information\\": {\\n    \\"type\\": \\"object\\",\\n    \\"description\\": \\"Additional insights or actions if there is insufficient information or if the content does not match a company page.\\",\\n    \\"properties\\": {\\n      \\"Information Sufficiency\\": {\\n        \\"type\\": \\"string\\",\\n        \\"description\\": \\"Indicate if the information was sufficient to provide a full analysis.\\",\\n        \\"enum\\": [\\"Sufficient\\", \\"Insufficient\\"]\\n      },\\n      \\"Insufficient Details\\": {\\n        \\"type\\": \\"string\\",\\n        \\"description\\": \\"If 'Insufficient', specify what information was missing or would be needed to complete the analysis.\\",\\n        \\"optional\\": true\\n      },\\n      \\"Mismatched Content\\": {\\n        \\"type\\": \\"boolean\\",\\n        \\"description\\": \\"Indicate whether the page content aligns with that of a typical company page.\\"\\n      },\\n      \\"Suggested Actions\\": {\\n        \\"type\\": \\"string\\",\\n        \\"description\\": \\"Provide recommendations if the page content is insufficient or mismatched, such as verifying the URL or searching for alternative sources.\\",\\n        \\"optional\\": true\\n      }\\n    }\\n  }\\n}\\n"}, "typeVersion": 1.2}, {"id": "81392d70-3b36-4014-8239-97ea1d69e522", "name": "OpenAI Chat Model", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [1240, 240], "parameters": {"model": "gpt-4o-mini", "options": {}}, "credentials": {"openAiApi": {"id": "", "name": ""}}, "typeVersion": 1}, {"id": "62d84f70-43a2-43aa-815e-56842230c9b1", "name": "Get rows from Google Sheet", "type": "n8n-nodes-base.googleSheets", "position": [660, 0], "parameters": {"options": {}, "sheetName": {"__rl": true, "mode": "list", "value": "gid=0", "cachedResultUrl": "h", "cachedResultName": "Sheet1"}, "documentId": {"__rl": true, "mode": "list", "value": "1B4Xv2vhO_uXcPxvMWGFwiorFQnSdXlIgXvaTcLQkzPo", "cachedResultUrl": "", "cachedResultName": "Companies to enrich list"}, "authentication": "serviceAccount"}, "credentials": {"googleApi": {"id": "", "name": ""}}, "typeVersion": 4.5}, {"id": "3b1050a8-5992-4a5b-a6a4-b91472a12dd4", "name": "Call n8n workflow  : Scrape companies homepage content", "type": "@n8n/n8n-nodes-langchain.toolWorkflow", "position": [1380, 260], "parameters": {"name": "scraper", "fields": {"values": [{"name": "website", "stringValue": "={{ $('Get rows from Google Sheet').item.json.Website }}"}]}, "workflowId": {"__rl": true, "mode": "id", "value": "TfwQRZkTBtykx1rM"}, "description": "Call this tool to get scraped data about a website.\\nThe query should only contains the name of the company."}, "typeVersion": 1.2}, {"id": "e451cc56-0cef-4bd8-b13e-210d5ddf3001", "name": "Update Company's Row on Google Sheet", "type": "n8n-nodes-base.googleSheets", "position": [1660, -200], "parameters": {"columns": {"value": {"ICP": "={{ $json.output['Ideal Customer Profile'] }}", "Offer": "={{ $json.output['Offers or Product'] }}", "row_number": "={{ $('Get rows from Google Sheet').item.json.row_number }}", "Business area": "={{ $json.output['Business Area'] }}", "Business Model": "={{ $json.output['Business Model'] }}", "Value proposition": "={{ $json.output['Value Proposition'] }}", "Additionnal information": "={{ $json.output['Additional Information'] }}"}, "schema": [{"id": "Company", "type": "string", "display": true, "required": false, "displayName": "Company", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Domain", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Domain", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Business area", "type": "string", "display": true, "required": false, "displayName": "Business area", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Offer", "type": "string", "display": true, "required": false, "displayName": "Offer", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Value proposition", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Value proposition", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Business Model", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Business Model", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "ICP", "type": "string", "display": true, "removed": false, "required": false, "displayName": "ICP", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Additionnal information", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Additionnal information", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "row_number", "type": "string", "display": true, "removed": false, "readOnly": true, "required": false, "displayName": "row_number", "defaultMatch": false, "canBeUsedToMatch": true}], "mappingMode": "defineBelow", "matchingColumns": ["row_number"]}, "options": {}, "operation": "update", "sheetName": {"__rl": true, "mode": "list", "value": "gid=0", "cachedResultUrl": "", "cachedResultName": "Companies list"}, "documentId": {"__rl": true, "mode": "list", "value": "1B4Xv2vhO_uXcPxvMWGFwiorFQnSdXlIgXvaTcLQkzPo", "cachedResultUrl": "", "cachedResultName": "Companies to enrich list"}, "authentication": "serviceAccount"}, "credentials": {"googleApi": {"id": "", "name": ""}}, "typeVersion": 4.5}, {"id": "f2f31704-3e93-4c3f-bb70-9f41d1c625a9", "name": "ScrapingBee : Scrape company's homepage data ", "type": "n8n-nodes-base.httpRequest", "position": [1020, 400], "parameters": {"url": "https://app.scrapingbee.com/api/v1", "options": {"response": {"response": {}}}, "sendQuery": true, "queryParameters": {"parameters": [{"name": "api_key", "value": ""}, {"name": "url", "value": "={{$json.url}}"}]}}, "typeVersion": 4.2}, {"id": "d0180b22-8938-4590-a58a-0455ac808c68", "name": "Tool called from Agent", "type": "n8n-nodes-base.executeWorkflowTrigger", "position": [440, 400], "parameters": {}, "typeVersion": 1}, {"id": "2f65dece-0236-4d45-b965-7ca705fa4621", "name": "Loop Over Items", "type": "n8n-nodes-base.splitInBatches", "position": [960, 0], "parameters": {"options": {}}, "typeVersion": 3}, {"id": "78ae2393-3744-445a-bf28-6dab1f4a8aec", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [-840, -480], "parameters": {"width": 1084.896634444991, "height": 1812.538665002239, "content": "# Enrich Company Data from Google Sheet with OpenAI Scraper Agent\\n\\nThis workflow demonstrates how to enrich data from a list of companies in a spreadsheet. While this workflow is production-ready if all steps are followed, adding error handling would enhance its robustness.\\n\\n## Impportant notes\\n\\n- **Check legal regulations**: This workflow involves scraping, so make sure to check the legal regulations around scraping in your country before getting started. Better safe than sorry!\\n- **Mind those tokens**: OpenAI tokens can add up fast, so keep an eye on usage unless you want a surprising bill that could knock your socks off! 💸\\n\\n## Main Workflow\\n\\n### Node 1 - `Webhook`\\nThis node triggers the workflow via a webhook call. You can replace it with any other trigger of your choice, such as form submission, a new row added in Google Sheets, or a manual trigger.\\n\\n### Node 2 - `Get Rows from Google Sheet`\\nThis node retrieves the list of companies from your spreadsheet. The columns in this Google Sheet are:\\n\\n- **Company**: The name of the company\\n- **Website**: The website URL of the company  \\n  *These two fields are required at this step.*\\n\\n- **Business Area**: The business area deduced by OpenAI from the scraped data\\n- **Offer**: The offer deduced by OpenAI from the scraped data\\n- **Value Proposition**: The value proposition deduced by OpenAI from the scraped data\\n- **Business Model**: The business model deduced by OpenAI from the scraped data\\n- **ICP**: The Ideal Customer Profile deduced by OpenAI from the scraped data\\n- **Additional Information**: Information related to the scraped data, including:\\n  - **Information Sufficiency**:\\n    - *Description*: Indicates if the information was sufficient to provide a full analysis.\\n    - *Options*: \\"Sufficient\\" or \\"Insufficient\\"\\n  - **Insufficient Details**:\\n    - *Description*: If labeled \\"Insufficient,\\" specifies what information was missing or needed to complete the analysis.\\n  - **Mismatched Content**:\\n    - *Description*: Indicates whether the page content aligns with that of a typical company page.\\n  - **Suggested Actions**:\\n    - *Description*: Provides recommendations if the page content is insufficient or mismatched, such as verifying the URL or searching for alternative sources.\\n\\n### Node 3 - `Loop Over Items`\\nThis node ensures that, in subsequent steps, the website in \\"extra workflow input\\" corresponds to the row being processed. You can delete this node, but you'll need to ensure that the \\"query\\" sent to the scraping workflow corresponds to the website of the specific company being scraped (rather than just the first row).\\n\\n### Node 4 - `AI Agent`\\nThis AI agent is configured with a prompt to extract data from the content it receives. The node has three sub-nodes:\\n  \\n  - **OpenAI Chat Model**: The model used is currently `gpt4-o-mini`.\\n  - **Call n8n Workflow**: This sub-node calls the workflow to use ScrapingBee and retrieves the scraped data.\\n  - **Structured Output Parser**: This parser structures the output for clarity and ease of use, and then adds rows to the Google Sheet.\\n\\n### Node 5 - `Update Company Row in Google Sheet`\\nThis node updates the specific company's row in Google Sheets with the enriched data.\\n\\n## Scraper Agent Workflow\\n\\n### Node 1 - `Tool Called from Agent`\\nThis is the trigger for when the AI Agent calls the Scraper. A query is sent with:\\n- Company name\\n- Website (the URL of the website)\\n\\n### Node 2 - `Set Company URL`\\nThis node renames a field, which may seem trivial but is useful for performing transformations on data received from the AI Agent.\\n\\n### Node 3 - `ScrapingBee: Scrape Company's Website`\\nThis node scrapes data from the URL provided using ScrapingBee. You can use any scraper of your choice, but ScrapingBee is recommended, as it allows you to configure scraper behavior directly. Once configured, copy the provided \\"curl\\" command and import it into n8n.\\n\\n### Node 4 - `HTML to Markdown`\\nThis node converts the scraped HTML data to Markdown, which is then sent to OpenAI. The Markdown format generally uses fewer tokens than HTML.\\n\\n## Improving the Workflow\\nIt's always a pleasure to share workflows, but creators sometimes want to keep some magic to themselves ✨. Here are some ways you can enhance this workflow:\\n\\n- Handle potential errors\\n- Configure the scraper tool to scrape other pages on the website. Although this will cost more tokens, it can be useful (e.g., scraping \\"Pricing\\" or \\"About Us\\" pages in addition to the homepage).\\n- Instead of Google Sheets, connect directly to your CRM to enrich company data.\\n- Trigger the workflow from form submissions on your website and send the scraped data about the lead to a Slack or Teams channel.\\n"}, "typeVersion": 1}, {"id": "8440fbe4-a3b3-4801-95f9-55df90c862fe", "name": "AI Agent", "type": "@n8n/n8n-nodes-langchain.agent", "position": [1600, 20], "parameters": {"text": "=You'll be provided with scraped data from the homepage of a company:\\nCompany Name: {{ $json.Company }}\\nURL: {{ $json.Domain }}\\n\\nYour Objectives:\\nExtract Relevant Information:\\n\\nIdentify and summarize the company's core activities, products or services, and its business model (how it generates revenue, key partners, etc.).\\nCapture the value proposition in the form of a catchphrase or tagline from the homepage content.\\nDeduce an Ideal Customer Profile (ICP) based on the information provided (consider industry, customer needs, company positioning, etc.).\\n\\nLanguage:\\nEven if the content received is in another language, provide all responses in English.\\n\\nHandling Edge Cases:\\nIf you encounter any of the following situations, please follow the instructions below:\\n\\nInsufficient Information:\\nIf the content doesn't provide enough information to address the objectives, indicate this and list any missing information or additional data sources that could help complete the analysis.\\nNon-Corporate Page or Mismatched Content:\\nIf the page doesn't appear to belong to a company or the content is irrelevant, provide an explanation of why it doesn’t align with expectations.\\nOffer potential actions, such as confirming the URL, suggesting alternative methods to verify the company’s homepage, or advising on additional keywords or content to refine the search.\\nAdditional Considerations:\\nIf multiple languages are detected in the content, please prioritize the English content, then proceed with any additional languages if they provide further insight.\\nIf the homepage features sections related to awards, partnerships, or certifications, include them as they can enrich the ICP and value proposition analysis.\\nIf the homepage mentions customer testimonials or case studies, summarize any key points, as these can also inform the ICP and business model.", "options": {}, "promptType": "define", "hasOutputParser": true}, "typeVersion": 1.6}, {"id": "bf1987fb-ce72-47c1-a020-6ec41e8731e3", "name": "Set company url", "type": "n8n-nodes-base.set", "position": [760, 400], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "7ea9933b-5972-4623-9c97-eecf1ce0479d", "name": "url", "type": "string", "value": "={{$json.website}}"}]}}, "typeVersion": 3.4}, {"id": "f0a86878-8db1-4761-a135-9d7a3caac288", "name": "HTML to Markdown", "type": "n8n-nodes-base.markdown", "position": [1360, 400], "parameters": {"html": "={{ $json.data }}", "options": {}, "destinationKey": "response"}, "typeVersion": 1}, {"id": "f53b19c5-dcb9-4239-8be8-122a9e479a55", "name": "Webhook", "type": "n8n-nodes-base.webhook", "position": [300, 0], "webhookId": "", "parameters": {"path": "53166f88-c88a-4429-b6b5-498f458686b0", "options": {}}, "typeVersion": 2}], "active": false, "pinData": {}, "settings": {"executionOrder": "v1"}, "versionId": "b65befae-2660-43f1-a425-26582a3a248f", "connections": {"Webhook": {"main": [[{"node": "Get rows from Google Sheet", "type": "main", "index": 0}]]}, "AI Agent": {"main": [[{"node": "Loop Over Items", "type": "main", "index": 0}]]}, "Loop Over Items": {"main": [[{"node": "Update Company's Row on Google Sheet", "type": "main", "index": 0}], [{"node": "AI Agent", "type": "main", "index": 0}]]}, "Set company url": {"main": [[{"node": "ScrapingBee : Scrape company's homepage data ", "type": "main", "index": 0}]]}, "OpenAI Chat Model": {"ai_languageModel": [[{"node": "AI Agent", "type": "ai_languageModel", "index": 0}]]}, "Tool called from Agent": {"main": [[{"node": "Set company url", "type": "main", "index": 0}]]}, "Structured Output Parser": {"ai_outputParser": [[{"node": "AI Agent", "type": "ai_outputParser", "index": 0}]]}, "Get rows from Google Sheet": {"main": [[{"node": "Loop Over Items", "type": "main", "index": 0}]]}, "ScrapingBee : Scrape company's homepage data ": {"main": [[{"node": "HTML to Markdown", "type": "main", "index": 0}]]}, "Call n8n workflow  : Scrape companies homepage content": {"ai_tool": [[{"node": "AI Agent", "type": "ai_tool", "index": 0}]]}}}}	2025-10-12 14:22:36.39454
1440	2465	28	15	[]	full	f	{"id": 2465, "name": "Building Your First WhatsApp Chatbot", "workflow": {"meta": {"instanceId": "408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9"}, "nodes": [{"id": "77ee6494-4898-47dc-81d9-35daf6f0beea", "name": "WhatsApp Trigger", "type": "n8n-nodes-base.whatsAppTrigger", "position": [1360, -280], "webhookId": "aaa71f03-f7af-4d18-8d9a-0afb86f1b554", "parameters": {"updates": ["messages"]}, "credentials": {"whatsAppTriggerApi": {"id": "H3uYNtpeczKMqtYm", "name": "WhatsApp OAuth account"}}, "typeVersion": 1}, {"id": "57210e27-1f89-465a-98cc-43f890a4bf58", "name": "OpenAI Chat Model", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [1960, -200], "parameters": {"model": "gpt-4o-2024-08-06", "options": {}}, "credentials": {"openAiApi": {"id": "8gccIjcuf3gvaoEr", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "e1053235-0ade-4e36-9ad2-8b29c78fced8", "name": "Window Buffer Memory", "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow", "position": [2080, -200], "parameters": {"sessionKey": "=whatsapp-75-{{ $json.messages[0].from }}", "sessionIdType": "customKey"}, "typeVersion": 1.2}, {"id": "69f1b78b-7c93-4713-863a-27e04809996f", "name": "Vector Store Tool", "type": "@n8n/n8n-nodes-langchain.toolVectorStore", "position": [2200, -200], "parameters": {"name": "query_product_brochure", "description": "Call this tool to query the product brochure. Valid for the year 2024."}, "typeVersion": 1}, {"id": "170e8f7d-7e14-48dd-9f80-5352cc411fc1", "name": "Embeddings OpenAI", "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi", "position": [2200, 80], "parameters": {"model": "text-embedding-3-small", "options": {}}, "credentials": {"openAiApi": {"id": "8gccIjcuf3gvaoEr", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "ee78320b-d407-49e8-b4b8-417582a44709", "name": "OpenAI Chat Model1", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [2440, -60], "parameters": {"model": "gpt-4o-2024-08-06", "options": {}}, "credentials": {"openAiApi": {"id": "8gccIjcuf3gvaoEr", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "9dd89378-5acf-4ca6-8d84-e6e64254ed02", "name": "When clicking ‘Test workflow’", "type": "n8n-nodes-base.manualTrigger", "position": [0, -240], "parameters": {}, "typeVersion": 1}, {"id": "e68fc137-1bcb-43f0-b597-3ae07f380c15", "name": "Embeddings OpenAI1", "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi", "position": [760, -20], "parameters": {"model": "text-embedding-3-small", "options": {}}, "credentials": {"openAiApi": {"id": "8gccIjcuf3gvaoEr", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "2d31e92b-18d4-4f6b-8cdb-bed0056d50d7", "name": "Default Data Loader", "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader", "position": [900, -20], "parameters": {"options": {}, "jsonData": "={{ $('Extract from File').item.json.text }}", "jsonMode": "expressionData"}, "typeVersion": 1}, {"id": "ca0c015e-fba2-4dca-b0fe-bac66681725a", "name": "Recursive Character Text Splitter", "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter", "position": [900, 100], "parameters": {"options": {}, "chunkSize": 2000, "chunkOverlap": {}}, "typeVersion": 1}, {"id": "63abb6b2-b955-4e65-9c63-3211dca65613", "name": "Extract from File", "type": "n8n-nodes-base.extractFromFile", "position": [360, -240], "parameters": {"options": {}, "operation": "pdf"}, "typeVersion": 1}, {"id": "be2add9c-3670-4196-8c38-82742bf4f283", "name": "get Product Brochure", "type": "n8n-nodes-base.httpRequest", "position": [180, -240], "parameters": {"url": "https://usa.yamaha.com/files/download/brochure/1/1474881/Yamaha-Powered-Loudspeakers-brochure-2024-en-web.pdf", "options": {}}, "typeVersion": 4.2}, {"id": "1ae5a311-36d7-4454-ab14-6788d1331780", "name": "Reply To User", "type": "n8n-nodes-base.whatsApp", "position": [2820, -280], "parameters": {"textBody": "={{ $json.output }}", "operation": "send", "phoneNumberId": "477115632141067", "requestOptions": {}, "additionalFields": {"previewUrl": false}, "recipientPhoneNumber": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}"}, "credentials": {"whatsAppApi": {"id": "9SFJPeqrpChOkAmw", "name": "WhatsApp account"}}, "typeVersion": 1}, {"id": "b6efba81-18b0-4378-bb91-51f39ca57f3e", "name": "Reply To User1", "type": "n8n-nodes-base.whatsApp", "position": [1760, 80], "parameters": {"textBody": "=I'm unable to process non-text messages. Please send only text messages. Thanks!", "operation": "send", "phoneNumberId": "477115632141067", "requestOptions": {}, "additionalFields": {"previewUrl": false}, "recipientPhoneNumber": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}"}, "credentials": {"whatsAppApi": {"id": "9SFJPeqrpChOkAmw", "name": "WhatsApp account"}}, "typeVersion": 1}, {"id": "52decd86-ac6c-4d91-a938-86f93ec5f822", "name": "Product Catalogue", "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory", "position": [2200, -60], "parameters": {"memoryKey": "whatsapp-75"}, "typeVersion": 1}, {"id": "6dd5a652-2464-4ab8-8e5f-568529299523", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [-88.75, -473.4375], "parameters": {"color": 7, "width": 640.4375, "height": 434.6875, "content": "## 1. Download Product Brochure PDF\\n[Read more about the HTTP Request Tool](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\\n\\nImport your marketing PDF document to build your vector store. This will be used as the knowledgebase by the Sales AI Agent.\\n\\nFor this demonstration, we'll use the HTTP request node to import the YAMAHA POWERED LOUDSPEAKERS 2024 brochure ([Source](https://usa.yamaha.com/files/download/brochure/1/1474881/Yamaha-Powered-Loudspeakers-brochure-2024-en-web.pdf)) and an Extract from File node to extract the text contents. "}, "typeVersion": 1}, {"id": "116663bc-d8d6-41a5-93dc-b219adbb2235", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [580, -476], "parameters": {"color": 7, "width": 614.6875, "height": 731.1875, "content": "## 2. Create Product Brochure Vector Store\\n[Read more about the In-Memory Vector Store](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/)\\n\\nVector stores are powerful databases which serve the purpose of matching a user's questions to relevant parts of a document. By creating a vector store of our product catalog, we'll allow users to query using natural language.\\n\\nTo keep things simple, we'll use the **In-memory Vector Store** which comes built-in to n8n and doesn't require a separate service. For production deployments, I'd recommend replacing the in-memory vector store with either [Qdrant](https://qdrant.tech) or [Pinecone](https://pinecone.io)."}, "typeVersion": 1}, {"id": "86bd5334-d735-4650-aeff-06230119d705", "name": "Create Product Catalogue", "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory", "position": [760, -200], "parameters": {"mode": "insert", "memoryKey": "whatsapp-75", "clearStore": true}, "typeVersion": 1}, {"id": "b8078b0d-cbd7-423f-bb30-13902988be38", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [1254, -552], "parameters": {"color": 7, "width": 546.6875, "height": 484.1875, "content": "## 3. Use the WhatsApp Trigger\\n[Learn more about the WhatsApp Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.whatsapptrigger/)\\n\\nThe WhatsApp Trigger allows you to receive incoming WhatsApp messages from customers. It requires a bit of setup so remember to follow the documentation carefully! Once ready however, it's quite easy to build powerful workflows which are easily accessible to users.\\n\\nNote that WhatsApp can send many message types such as audio and video so in this demonstration, we'll filter them out and just accept the text messages."}, "typeVersion": 1}, {"id": "5bf7ed07-282b-4198-aa90-3e5ae5180404", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [1640, 280], "parameters": {"width": 338, "height": 92, "content": "### Want to handle all message types?\\nCheck out my other WhatsApp template in my creator page! https://n8n.io/creators/jimleuk/"}, "typeVersion": 1}, {"id": "a3661b59-25d2-446e-8462-32b4d692b69d", "name": "Sticky Note4", "type": "n8n-nodes-base.stickyNote", "position": [1640, -40], "parameters": {"color": 7, "width": 337.6875, "height": 311.1875, "content": "### 3a. Handle Unsupported Message Types\\nFor non-text messages, we'll just reply with a simple message to inform the sender."}, "typeVersion": 1}, {"id": "ea3c9ee1-505a-40e7-82fe-9169bdbb80af", "name": "Sticky Note5", "type": "n8n-nodes-base.stickyNote", "position": [1840, -682.5], "parameters": {"color": 7, "width": 746.6875, "height": 929.1875, "content": "## 4. Sales AI Agent Responds To Customers\\n[Learn more about using AI Agents](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/)\\n\\nn8n's AI agents are powerful nodes which make it incredibly easy to use state-of-the-art AI in your workflows. Not only do they have the ability to remember conversations per individual customer but also tap into resources such as our product catalogue vector store to pull factual information and data for every question.\\n\\nIn this demonstration, we use an AI agent which is directed to help the user navigate the product brochure. A Chat memory subnode is attached to identify and keep track of the customer session. A Vector store tool is added to allow the Agent to tap into the product catalogue knowledgebase we built earlier."}, "typeVersion": 1}, {"id": "5c72df8d-bca1-4634-b1ed-61ffec8bd103", "name": "Sticky Note6", "type": "n8n-nodes-base.stickyNote", "position": [2620, -560], "parameters": {"color": 7, "width": 495.4375, "height": 484.1875, "content": "## 5. Repond to WhatsApp User\\n[Learn more about the WhatsApp Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.whatsapp/)\\n\\nThe WhatsApp node is the go-to if you want to interact with WhatsApp users. With this node, you can send text, images, audio and video messages as well as use your WhatsApp message templates.\\n\\nHere, we'll keep it simple by replying with a text message which is the output of the AI agent."}, "typeVersion": 1}, {"id": "48ec809f-ca0e-4052-b403-9ad7077b3fff", "name": "Sticky Note7", "type": "n8n-nodes-base.stickyNote", "position": [-520, -620], "parameters": {"width": 401.25, "height": 582.6283033962263, "content": "## Try It Out!\\n\\n### This n8n template builds a simple WhatsApp chabot acting as a Sales Agent. The Agent is backed by a product catalog vector store to better answer user's questions.\\n\\n* This template is in 2 parts: creating the product catalog vector store and building the WhatsApp AI chatbot.\\n* A product brochure is imported via HTTP request node and its text contents extracted.\\n* The text contents are then uploaded to the in-memory vector store to build a knowledgebase for the chatbot.\\n* A WhatsApp trigger is used to capture messages from customers where non-text messages are filtered out.\\n* The customer's message is sent to the AI Agent which queries the product catalogue using the vector store tool.\\n* The Agent's response is sent back to the user via the WhatsApp node.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!"}, "typeVersion": 1}, {"id": "87cf9b41-66de-49a7-aeb0-c8809191b5a0", "name": "Handle Message Types", "type": "n8n-nodes-base.switch", "position": [1560, -280], "parameters": {"rules": {"values": [{"outputKey": "Supported", "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"operator": {"type": "string", "operation": "equals"}, "leftValue": "={{ $json.messages[0].type }}", "rightValue": "text"}]}, "renameOutput": true}, {"outputKey": "Not Supported", "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"id": "89971d8c-a386-4e77-8f6c-f491a8e84cb6", "operator": {"type": "string", "operation": "notEquals"}, "leftValue": "={{ $json.messages[0].type }}", "rightValue": "text"}]}, "renameOutput": true}]}, "options": {}}, "typeVersion": 3.2}, {"id": "e52f0a50-0c34-4c4a-b493-4c42ba112277", "name": "Sticky Note8", "type": "n8n-nodes-base.stickyNote", "position": [-80, -20], "parameters": {"color": 5, "width": 345.10906976744184, "height": 114.53583720930231, "content": "### You only have to run this part once!\\nRun this step to populate our product catalogue vector. Run again if you want to update the vector store with a new version."}, "typeVersion": 1}, {"id": "c1a7d6d1-191e-4343-af9f-f2c9eb4ecf49", "name": "Sticky Note9", "type": "n8n-nodes-base.stickyNote", "position": [1260, -40], "parameters": {"color": 5, "width": 364.6293255813954, "height": 107.02804651162779, "content": "### Activate your workflow to use!\\nTo start using the WhatsApp chatbot, you'll need to activate the workflow. If you are self-hosting ensure WhatsApp is able to connect to your server."}, "typeVersion": 1}, {"id": "a36524d0-22a6-48cc-93fe-b4571cec428a", "name": "AI Sales Agent", "type": "@n8n/n8n-nodes-langchain.agent", "position": [1960, -400], "parameters": {"text": "={{ $json.messages[0].text.body }}", "options": {"systemMessage": "You are an assistant working for a company who sells Yamaha Powered Loudspeakers and helping the user navigate the product catalog for the year 2024. Your goal is not to facilitate a sale but if the user enquires, direct them to the appropriate website, url or contact information.\\n\\nDo your best to answer any questions factually. If you don't know the answer or unable to obtain the information from the datastore, then tell the user so."}, "promptType": "define"}, "typeVersion": 1.6}], "pinData": {}, "connections": {"AI Sales Agent": {"main": [[{"node": "Reply To User", "type": "main", "index": 0}]]}, "WhatsApp Trigger": {"main": [[{"node": "Handle Message Types", "type": "main", "index": 0}]]}, "Embeddings OpenAI": {"ai_embedding": [[{"node": "Product Catalogue", "type": "ai_embedding", "index": 0}]]}, "Extract from File": {"main": [[{"node": "Create Product Catalogue", "type": "main", "index": 0}]]}, "OpenAI Chat Model": {"ai_languageModel": [[{"node": "AI Sales Agent", "type": "ai_languageModel", "index": 0}]]}, "Product Catalogue": {"ai_vectorStore": [[{"node": "Vector Store Tool", "type": "ai_vectorStore", "index": 0}]]}, "Vector Store Tool": {"ai_tool": [[{"node": "AI Sales Agent", "type": "ai_tool", "index": 0}]]}, "Embeddings OpenAI1": {"ai_embedding": [[{"node": "Create Product Catalogue", "type": "ai_embedding", "index": 0}]]}, "OpenAI Chat Model1": {"ai_languageModel": [[{"node": "Vector Store Tool", "type": "ai_languageModel", "index": 0}]]}, "Default Data Loader": {"ai_document": [[{"node": "Create Product Catalogue", "type": "ai_document", "index": 0}]]}, "Handle Message Types": {"main": [[{"node": "AI Sales Agent", "type": "main", "index": 0}], [{"node": "Reply To User1", "type": "main", "index": 0}]]}, "Window Buffer Memory": {"ai_memory": [[{"node": "AI Sales Agent", "type": "ai_memory", "index": 0}]]}, "get Product Brochure": {"main": [[{"node": "Extract from File", "type": "main", "index": 0}]]}, "Recursive Character Text Splitter": {"ai_textSplitter": [[{"node": "Default Data Loader", "type": "ai_textSplitter", "index": 0}]]}, "When clicking ‘Test workflow’": {"main": [[{"node": "get Product Brochure", "type": "main", "index": 0}]]}}}}	2025-10-12 14:22:36.394542
1441	2464	50	34	[]	full	f	{"id": 2464, "name": "Scale Deal Flow with a Pitch Deck AI Vision, Chatbot and QDrant Vector Store", "workflow": {"meta": {"instanceId": "408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9"}, "nodes": [{"id": "9ce4eadf-7eef-43bd-bbe9-e25bc5a42df7", "name": "When clicking ‘Test workflow’", "type": "n8n-nodes-base.manualTrigger", "position": [-1076, 594], "parameters": {}, "typeVersion": 1}, {"id": "b8d12c00-4004-44b4-b793-e9608fd36d5d", "name": "Sort Pages", "type": "n8n-nodes-base.sort", "position": [1440, 777], "parameters": {"options": {}, "sortFieldsUi": {"sortField": [{"fieldName": "fileName"}]}}, "typeVersion": 1}, {"id": "27520282-af95-415e-a3d3-3cf9e4373813", "name": "Split PDF into Images", "type": "n8n-nodes-base.httpRequest", "position": [900, 777], "parameters": {"url": "http://stirlingpdf.io/api/v1/convert/pdf/img", "method": "POST", "options": {}, "sendBody": true, "contentType": "multipart-form-data", "bodyParameters": {"parameters": [{"name": "fileInput", "parameterType": "formBinaryData", "inputDataFieldName": "data"}, {"name": "imageFormat", "value": "jpg"}, {"name": "singleOrMultiple", "value": "multiple"}, {"name": "dpi", "value": "300"}]}}, "typeVersion": 4.2}, {"id": "e3862292-3261-4876-b53e-acea88810afb", "name": "Extract Zip File", "type": "n8n-nodes-base.compression", "position": [1080, 777], "parameters": {}, "typeVersion": 1.1}, {"id": "2d949fb6-980f-409a-9b71-bf12927eaa6d", "name": "Images To List", "type": "n8n-nodes-base.code", "position": [1260, 777], "parameters": {"jsCode": "let results = [];\\n\\nfor (item of items) {\\n    for (key of Object.keys(item.binary)) {\\n        results.push({\\n            json: {\\n                fileName: item.binary[key].fileName\\n            },\\n            binary: {\\n                data: item.binary[key],\\n            }\\n        });\\n    }\\n}\\n\\nreturn results;"}, "typeVersion": 2}, {"id": "115c202b-2496-4218-b54d-a6f8974b7698", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [800, 460], "parameters": {"color": 7, "width": 848.0232558139535, "height": 533.5469767441862, "content": "## 3. Split PDF Pages into Seperate Images\\n\\nCurrently, the vision model we'll be using can't accept raw PDFs so we'll have to convert our PDF to a image in order to use it. To achieve this, we'll use the free [Stirling PDF webservice](https://stirlingpdf.io/) for convenience but if we need data privacy (recommended!), we could self-host our own [Stirling PDF instance](https://github.com/Stirling-Tools/Stirling-PDF/) instead. Alternatively, feel free to swap this service out for one of your own as long as it can convert PDFs into images!\\n\\nWe will ask the PDF service to return each page of our statement as separate images, which it does so as a zip file. Next steps is to just unzip the file and convert the output as a list of images."}, "typeVersion": 1}, {"id": "186ba0b4-1857-457e-bc5a-e3f9e770a2bd", "name": "Sticky Note5", "type": "n8n-nodes-base.stickyNote", "position": [850, 737], "parameters": {"width": 199.23348837209306, "height": 374.95069767441856, "content": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n### Privacy Warning!\\nThis example uses a public third party service. If your data is senstive, please swap this out for the self-hosted version!"}, "typeVersion": 1}, {"id": "820bd16b-5311-40ba-9e75-3ca195a9a59b", "name": "Resize Images For AI", "type": "n8n-nodes-base.editImage", "position": [1840, 820], "parameters": {"width": 50, "height": 50, "options": {}, "operation": "resize", "resizeOption": "percent"}, "typeVersion": 1}, {"id": "7f31fbf2-9ec1-42f9-83df-3a8e3f08e1ec", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [1680, 500], "parameters": {"color": 7, "width": 775.3441860465115, "height": 636.0809302325588, "content": "## 4. Convert PDF Pages to Markdown Using Vision Model\\n[Learn more about using the Basic LLM node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\\n\\nPitch decks are fundamentally extravagant sales documents and as such, are incredibly varied in how they are styled, structured and presented. Traditional OCR has often struggled with parsing these kinds of documents as layers and graphical elements and when extracting their contents typically yields poor results; either garbled or missing texts.\\n\\nMultimodal LLMs are a solution as they use AI vision to \\"read\\" the pitch deck and can reason about it's layout and intent. Images can be understood and described with context and charts and graphs can also be interpreted. In this demonstration, we'll ask our LLM to transcribe each page in the pitch deck into markdown ensuring it also describes any images or charts it sees."}, "typeVersion": 1}, {"id": "187e350c-6526-43d6-b314-aa376a123694", "name": "Sticky Note4", "type": "n8n-nodes-base.stickyNote", "position": [2500, 475.5341395348837], "parameters": {"color": 7, "width": 814.0329302325591, "height": 518.7793488372092, "content": "## 5. Extract Key Data Confidently From Statement\\n[Read more about the Information Extractor](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.information-extractor)\\n\\nWith our generated markdown, we can use an information extractor node to extract required information or data point from the pitch deck. This can be useful to generate reports and later compare pitch decks against each other. Here, we'll retain the extracted data by updating the relevant row in our Airtable database."}, "typeVersion": 1}, {"id": "925a5cea-0c53-4756-94e8-c01bdf38dea7", "name": "Combine All Pages", "type": "n8n-nodes-base.aggregate", "position": [2580, 680], "parameters": {"options": {}, "fieldsToAggregate": {"fieldToAggregate": [{"renameField": true, "outputFieldName": "pages", "fieldToAggregate": "text"}]}}, "typeVersion": 1}, {"id": "5f521f14-7e0e-48cc-923f-e920343b4027", "name": "Default Data Loader", "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader", "position": [3100, 1500], "parameters": {"options": {"metadata": {"metadataValues": [{"name": "name", "value": "={{ $('Execute Workflow Trigger').first().json.Name }}"}]}}, "jsonData": "={{ $json.text }}", "jsonMode": "expressionData"}, "typeVersion": 1}, {"id": "dad5928a-872d-43d2-ad17-5ac98ac6fb27", "name": "Recursive Character Text Splitter", "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter", "position": [3100, 1640], "parameters": {"options": {}, "chunkSize": 2048}, "typeVersion": 1}, {"id": "95f26a88-96f8-42af-9b58-f8b76a45a619", "name": "OpenAI Chat Model", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [4040, 1457], "parameters": {"model": "gpt-4o-mini", "options": {}}, "credentials": {"openAiApi": {"id": "8gccIjcuf3gvaoEr", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "761dec49-a251-4727-9976-6e709bd6e030", "name": "OpenAI Chat Model2", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [2760, 840], "parameters": {"model": "gpt-4o-2024-08-06", "options": {}}, "credentials": {"openAiApi": {"id": "8gccIjcuf3gvaoEr", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "a05ee988-ea08-454d-b7dc-606af4ff4996", "name": "Embeddings OpenAI", "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi", "position": [2980, 1500], "parameters": {"model": "text-embedding-3-small", "options": {}}, "credentials": {"openAiApi": {"id": "8gccIjcuf3gvaoEr", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "fde83717-68df-49f8-b3c2-d371fbe8a42b", "name": "Delete Existing Vectors", "type": "n8n-nodes-base.httpRequest", "position": [2620, 1340], "parameters": {"url": "http://qdrant:6333/collections/pitchdecks/points/delete", "method": "POST", "options": {}, "jsonBody": "={{\\n{\\n  \\"filter\\": {\\n    \\"must\\": {\\n      \\"key\\": \\"metadata.name\\",\\n      \\"match\\": {\\n        \\"value\\": $('Execute Workflow Trigger').first().json.Name\\n      }\\n    }\\n  }\\n}\\n}}", "sendBody": true, "specifyBody": "json", "authentication": "predefinedCredentialType", "nodeCredentialType": "qdrantApi"}, "credentials": {"qdrantApi": {"id": "NyinAS3Pgfik66w5", "name": "QdrantApi account"}}, "executeOnce": true, "typeVersion": 4.2}, {"id": "2555d50b-6645-4990-a7dd-f47327b8a83b", "name": "Continue With Pages Only", "type": "n8n-nodes-base.merge", "position": [2800, 1340], "parameters": {"mode": "chooseBranch"}, "typeVersion": 3}, {"id": "f59777bf-6bfe-4d5f-a272-be549d6bd583", "name": "Update Pitchdecks Table", "type": "n8n-nodes-base.airtable", "position": [3100, 680], "parameters": {"base": {"__rl": true, "mode": "id", "value": "appCkqc2jc3MoVqDO"}, "table": {"__rl": true, "mode": "id", "value": "tblI660SRJAOlSx3p"}, "columns": {"value": {"DAUs": "={{ $json.output.current_number_of_DAU.toString() }}", "Name": "={{ $('Execute Workflow Trigger').first().json.Name }}", "Email": "={{ $json.output.email }}", "Phone": "={{ $json.output.phone }}", "Address": "={{ $json.output.address }}", "SignUps": "={{ $json.output.current_number_of_signups.toString() }}", "Twitter": "={{ $json.output.twitter }}", "Founders": "={{ $json.output.founders.join(', ') }}", "LinkedIn": "={{ $json.output.linkedin }}", "Traction": "={{ $json.output.traction }}", "Investors": "={{ $json.output.current_investors.join(', ') }}", "Team Size": "={{ $json.output.team_size.toString() }}", "Verticals": "={{ $json.output.verticals.join(', ') }}", "Location HQ": "={{ $json.output.location }}", "Amount Raised": "={{ $json.output.amount_raised }}", "Founding Year": "={{ $json.output.founding_year }}", "Funding Stage": "={{ $json.output.funding_stage }}", "Business Model": "={{ $json.output.business_model }}", "Is Interesting": "={{ $json.output.is_interesting }}", "Current Revenue": "={{ $json.output.current_revenue }}", "Amount Requested": "={{ $json.output.amount_requested }}", "Executive Summary": "={{ $json.output.executive_summary }}", "Market Validation": "={{ $json.output.market_validation_summary }}", "Value Proposition": "={{ $json.output.value_proposition }}", "Compatible with VC": "={{ $json.output.compatible_with_venture_capital }}", "Geographical Markets": "={{ $json.output.geographical_markets.join(', ') }}", "Requires Fact-Checking": "={{ $json.output.items_requiring_factchecking.join(', ') }}"}, "schema": [{"id": "id", "type": "string", "display": true, "removed": true, "readOnly": true, "required": false, "displayName": "id", "defaultMatch": true}, {"id": "Name", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Name", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "File", "type": "array", "display": true, "removed": true, "readOnly": false, "required": false, "displayName": "File", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Executive Summary", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Executive Summary", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Is Interesting", "type": "boolean", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Is Interesting", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Founding Year", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Founding Year", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Funding Stage", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Funding Stage", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Investors", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Investors", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Amount Raised", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Amount Raised", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Amount Requested", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Amount Requested", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Current Revenue", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Current Revenue", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "SignUps", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "SignUps", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "DAUs", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "DAUs", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Traction", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Traction", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Compatible with VC", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Compatible with VC", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Business Model", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Business Model", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Value Proposition", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Value Proposition", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Market Validation", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Market Validation", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Geographical Markets", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Geographical Markets", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Verticals", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Verticals", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Founders", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Founders", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Location HQ", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Location HQ", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Address", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Address", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Phone", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Phone", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Email", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Email", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "LinkedIn", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "LinkedIn", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Twitter", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Twitter", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Team Size", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Team Size", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Requires Fact-Checking", "type": "string", "display": true, "removed": false, "readOnly": false, "required": false, "displayName": "Requires Fact-Checking", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Created", "type": "string", "display": true, "removed": true, "readOnly": true, "required": false, "displayName": "Created", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Last Modified", "type": "string", "display": true, "removed": true, "readOnly": true, "required": false, "displayName": "Last Modified", "defaultMatch": false, "canBeUsedToMatch": true}], "mappingMode": "defineBelow", "matchingColumns": ["Name"]}, "options": {}, "operation": "upsert"}, "credentials": {"airtableTokenApi": {"id": "Und0frCQ6SNVX3VV", "name": "Airtable Personal Access Token account"}}, "typeVersion": 2.1}, {"id": "6f2728f4-5dfe-41d8-b4f0-47afd82b9899", "name": "Search Pending Rows", "type": "n8n-nodes-base.airtable", "position": [-876, 594], "parameters": {"base": {"__rl": true, "mode": "id", "value": "appCkqc2jc3MoVqDO"}, "limit": 1, "table": {"__rl": true, "mode": "id", "value": "tblI660SRJAOlSx3p"}, "options": {}, "operation": "search", "returnAll": false, "filterByFormula": "=AND(\\n  Name != \\"\\",\\n  File,\\n  OR(\\n    {Executive Summary} = \\"\\",\\n    {Executive Summary} = BLANK()\\n  )\\n)"}, "credentials": {"airtableTokenApi": {"id": "Und0frCQ6SNVX3VV", "name": "Airtable Personal Access Token account"}}, "typeVersion": 2.1}, {"id": "8131dcb0-bf52-4789-a4d4-256c1c48c9d6", "name": "Get Row", "type": "n8n-nodes-base.set", "position": [-696, 774], "parameters": {"mode": "raw", "options": {}, "jsonOutput": "={{ $json.fields || $json }}\\n"}, "typeVersion": 3.4}, {"id": "b6c08ce3-b257-44a0-9f69-48a11c12f38f", "name": "Prequisites Met", "type": "n8n-nodes-base.if", "position": [-536, 774], "parameters": {"options": {}, "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"id": "2ef90345-6c34-4f2a-82e6-c79f6fe49975", "operator": {"type": "string", "operation": "notEmpty", "singleValue": true}, "leftValue": "={{ $json.Name }}", "rightValue": ""}, {"id": "4af233ee-0f4b-4de4-9eb4-cc9ed9f8ebe9", "operator": {"type": "array", "operation": "notEmpty", "singleValue": true}, "leftValue": "={{ $json.File }}", "rightValue": ""}]}}, "typeVersion": 2.2}, {"id": "9e0418ad-06cc-4a54-82e1-ea6b2a3f2ced", "name": "Execute Workflow", "type": "n8n-nodes-base.executeWorkflow", "position": [-336, 594], "parameters": {"mode": "each", "options": {}, "workflowId": {"__rl": true, "mode": "id", "value": "={{ $workflow.id }}"}}, "typeVersion": 1.1}, {"id": "1d019927-9fdb-45a6-84e5-e3dd198483a2", "name": "No Operation, do nothing", "type": "n8n-nodes-base.noOp", "position": [-336, 774], "parameters": {}, "typeVersion": 1}, {"id": "ffc1fe69-01e4-4ea6-ae86-dd67d6520ec1", "name": "Execute Workflow Trigger", "type": "n8n-nodes-base.executeWorkflowTrigger", "position": [20, 780], "parameters": {}, "typeVersion": 1}, {"id": "2c27e01a-47c0-4efc-a7ab-6006c5d7886c", "name": "Extract from File", "type": "n8n-nodes-base.extractFromFile", "position": [380, 780], "parameters": {"options": {}, "operation": "binaryToPropery"}, "typeVersion": 1}, {"id": "b0db2421-3b0b-4975-beba-39a34a05f31c", "name": "Convert to File", "type": "n8n-nodes-base.convertToFile", "position": [560, 780], "parameters": {"options": {"fileName": "data.pdf", "mimeType": "application/pdf"}, "operation": "toBinary", "sourceProperty": "data"}, "typeVersion": 1.1}, {"id": "2cb33775-0602-4c24-b2cf-271992dcc501", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [2500, 1040], "parameters": {"color": 7, "width": 910.9613023255822, "height": 769.9451162790697, "content": "## 6. Build a Vector Store Collection for the Pitch Deck\\n[Read more about Qdrant Vector Store](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreqdrant)\\n\\nWhen it comes to pitch deck, it may not be enough to capture static attributes in table. Wouldn't it be cool if we could also ask questions about the pitch deck itself? Well, thanks for n8n's first class support for vector stores, you can and quite easily too!\\n\\nIn this demonstration, we'll use the Qdrant Vector Store which you can either sign-up for a free instance at https://qdrant.tech or self-host via docker. Next, it's a simple case of just funneling our transcribed pages into the vector store using the Qdrant Vector Store node."}, "typeVersion": 1}, {"id": "5102a1d4-f64e-4614-9599-eb7e9a3ff1d3", "name": "OpenAI Chat Model1", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [3740, 1457], "parameters": {"model": "gpt-4o-mini", "options": {}}, "credentials": {"openAiApi": {"id": "8gccIjcuf3gvaoEr", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "224edb67-1a12-4ab4-a44f-381436d5e055", "name": "Vector Store Tool", "type": "@n8n/n8n-nodes-langchain.toolVectorStore", "position": [4280, 1457], "parameters": {"name": "get_company_pitchdeck", "description": "Call this tool to search for information contained in a startup/company's pitchdeck."}, "typeVersion": 1}, {"id": "51f2bb6c-ec1d-4f53-a852-96e83c243e5b", "name": "OpenAI Chat Model3", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [4420, 1597], "parameters": {"model": "gpt-4o-mini", "options": {}}, "credentials": {"openAiApi": {"id": "8gccIjcuf3gvaoEr", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "f4f26085-8e0f-4bba-913a-10fe0249f55d", "name": "Embeddings OpenAI1", "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi", "position": [4160, 1717], "parameters": {"model": "text-embedding-3-small", "options": {}}, "credentials": {"openAiApi": {"id": "8gccIjcuf3gvaoEr", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "3671d902-21f6-407d-b651-beac854ff78c", "name": "OpenAI Chat Model4", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [2020, 980], "parameters": {"model": "gpt-4o-2024-08-06", "options": {}}, "credentials": {"openAiApi": {"id": "8gccIjcuf3gvaoEr", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "4916585b-e029-42b6-9391-aa6b81c4ff95", "name": "Generate Report", "type": "@n8n/n8n-nodes-langchain.informationExtractor", "position": [2760, 680], "parameters": {"text": "= {{ $json.pages.join('---') }}", "options": {"systemPromptTemplate": "You are playing the role of a Venture Capitalist with the following persona:\\n\\nLocation: San Francisco, California, USA\\n\\n## Background \\n* Education: Bachelor's in Finance from the University of California, Berkeley. MBA from Stanford Graduate School of Business.\\n* Career: Started as an investment banker at Goldman Sachs, then transitioned into venture capital as a junior partner at a mid-sized VC firm in Silicon Valley. Founded his own VC firm, Harper Capital, after several successful investments in early-stage startups. With over 15 years of experience, Jim has built a reputation for identifying promising startups and helping them scale.\\n* Track Record: His early investments in fintech companies like Plaid and Robinhood brought significant returns. Currently managing a $500 million fund focused on early-stage startups.\\n* Industry Focus: Fintech\\n\\nJim is particularly passionate about financial technology startups, especially those disrupting traditional banking, payment systems, and lending. He’s interested in companies that promote financial inclusion, simplify personal finance, or democratize investing. He believes the next major financial revolution will come from blockchain and decentralized finance (DeFi) platforms, but he remains cautious about overhyped cryptocurrencies.\\n\\n## Investment Style:\\n* Stage: Seed to Series A\\n* Check Size: $1 million to $10 million\\n* Preferred Business Models: B2B SaaS and platform-driven fintech solutions\\n* Founder Criteria: He looks for passionate, gritty founders who deeply understand the financial system and can navigate regulatory complexities.\\n\\n## Personality:\\n\\n### Strengths:\\n* Analytical: Jim is highly data-driven and excels at performing thorough due diligence, meticulously analyzing financial projections and market data.\\nHands-on Mentor: He takes an active role in the companies he invests in, offering strategic guidance on business models, scaling, and leadership development.\\n* Networked: Jim has deep connections with major banks, hedge funds, and technology partners, helping his startups form crucial partnerships.\\nPersonality Weakness: Overly Risk-Averse\\n\\nWhile Jim is known for his sharp financial acumen, he often hesitates to invest in more disruptive, experimental technologies. This risk aversion can cause him to miss out on breakthrough opportunities in early, unproven markets. He tends to favor startups with proven business models over \\"moonshot\\" ideas, which has occasionally led to regrets about passing on high-risk, high-reward ventures.\\nJim Harper's experience, focus on fintech, and a disciplined investment approach have made him a trusted name in venture capital, though his cautious nature sometimes keeps him on the sidelines during tech's biggest waves.\\n--\\n\\nAnalyse the pitch deck and provide an executive summary, fact checking review and judgement of if the pitching startup would be of interest to you based on your experience and investment strategy.\\n\\nFor any property not found, leave blank."}, "schemaType": "manual", "inputSchema": "{\\n\\t\\"type\\": \\"object\\",\\n\\t\\"properties\\": {\\n    \\t\\"startup_name\\": { \\"type\\": \\"string\\" },\\n        \\"founders\\": { \\"type\\": \\"array\\", \\"items\\": { \\"type\\": \\"string\\" } },\\n\\t\\t\\"founding_year\\": { \\"type\\": \\"string\\" },\\n        \\"team_size\\": { \\"type\\": \\"number\\" },\\n        \\"location\\": { \\"type\\": \\"string\\" },\\n        \\"address\\": { \\"type\\": \\"string\\" },\\n        \\"phone\\": { \\"type\\": \\"string\\" },\\n        \\"email\\": { \\"type\\": \\"string\\" },\\n        \\"linkedin\\": { \\"type\\": \\"string\\" },\\n        \\"twitter\\": { \\"type\\": \\"string\\" },\\n\\n        \\"funding_stage\\": { \\"type\\": \\"string\\" },\\n        \\"current_investors\\": { \\"type\\": \\"array\\", \\"items\\": { \\"type\\": \\"string\\" } },\\n        \\"amount_raised\\": { \\"type\\": \\"string\\" },\\n        \\"current_revenue\\": { \\"type\\": \\"string\\" },\\n        \\"current_number_of_signups\\": { \\"type\\": \\"number\\" },\\n        \\"current_number_of_DAU\\": { \\"type\\": \\"number\\" },\\n\\n        \\"business_model\\": { \\"type\\": \\"string\\" },\\n        \\"geographical_markets\\": { \\"type\\": \\"array\\", \\"items\\": { \\"type\\": \\"string\\" } },\\n        \\"verticals\\": { \\"type\\": \\"array\\", \\"items\\": { \\"type\\": \\"string\\" } },   \\n        \\"value_proposition\\": { \\"type\\": \\"string\\" },\\n        \\"market_validation_summary\\": { \\"type\\": \\"string\\" },\\n        \\"traction\\": { \\"type\\": \\"string\\", \\"description\\": \\"a summary of the amount of traction claimed\\" },\\n        \\"amount_requested\\": { \\"type\\": \\"string\\", \\"description\\": \\"A range\\" },\\n        \\"compatible_with_venture_capital\\": { \\"type\\": \\"boolean\\" },\\n\\n        \\"executive_summary\\": { \\"type\\": \\"string\\" },\\n        \\"items_requiring_factchecking\\":  { \\"type\\": \\"array\\", \\"items\\": { \\"type\\": \\"string\\" } },\\n        \\"is_interesting\\": { \\"type\\": \\"boolean\\" }\\n \\t}\\n}"}, "typeVersion": 1}, {"id": "b31ab62d-655c-4b5d-aeb6-4c397b70b743", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [3440, 1040], "parameters": {"color": 7, "width": 1265.6381521804071, "height": 846.3684803288264, "content": "## 6. Offer a Pitch Deck Q&A Chatbot to your Team\\n[Learn more about using AI Agents](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent)\\n\\nTake your workflows to the next level with n8n's AI Agents! This step demonstrates how powerful and yet simple it is to spin up an AI-powered chatbot and RAG implementation over the pitch decks. This AI Agent connects to our Pitch deck vector store and because it able to filter by company, it is capable of answering any questions about any relevant pitch decks the user is enquirying about. This makes for a powerful workflow which goes beyond just reporting and is a way to engage all stakeholders!"}, "typeVersion": 1}, {"id": "6de1428a-4b0f-498c-8fb5-d9a9983be592", "name": "Sticky Note6", "type": "n8n-nodes-base.stickyNote", "position": [-60, 564.0002976744187], "parameters": {"color": 7, "width": 830.0502325581398, "height": 431.48621395348823, "content": "## 2. Download the Pitch Deck \\n[Learn more about Execute Workflow Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflowtrigger)\\n\\nIn step 1 we triggered the subworkflow with the name and Airtable asset URL of the pitch deck. We'll use the HTTP request node to download the PDF of the pitch deck. Important to note that this template only handles PDF pitch decks and if you have pitchdecks in other formats such as PPT, you'll have to convert them to PDF."}, "typeVersion": 1}, {"id": "2f1aad79-f765-4678-bf38-d37982e3ffc7", "name": "Download Deck From Airtable", "type": "n8n-nodes-base.httpRequest", "position": [200, 780], "parameters": {"url": "={{ $json.File[0].url }}", "options": {"response": {"response": {"responseFormat": "file"}}}}, "typeVersion": 4.2}, {"id": "966f6673-7cfe-4bf0-9e72-8ad3b1cb389b", "name": "Sticky Note7", "type": "n8n-nodes-base.stickyNote", "position": [-1180, 380], "parameters": {"color": 7, "width": 1077.6820093023243, "height": 612.7294511627911, "content": "## 1. Trigger Workflow From Airtable \\n[Read more about using Airtable](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.airtable)\\n\\nThis workflow uses Airtable as the database to find and track which pitch decks are available and which need to be processed. You can find the example Airtable here: https://airtable.com/appCkqc2jc3MoVqDO/shrS21vGqlnqzzNUc. This workflow is also designed to run through multiple pitch decks using seperate executions. To do this, we'll send each pitch deck through the \\"execute workflow\\" to start a new subworkflow execution."}, "typeVersion": 1}, {"id": "951d48ee-5767-44af-af6e-eb4456803bf5", "name": "Airtable Trigger For Pending Rows", "type": "n8n-nodes-base.airtableTrigger", "position": [-1076, 774], "parameters": {"baseId": {"__rl": true, "mode": "id", "value": "appCkqc2jc3MoVqDO"}, "tableId": {"__rl": true, "mode": "id", "value": "tblI660SRJAOlSx3p"}, "pollTimes": {"item": [{"mode": "everyMinute"}]}, "triggerField": "File", "authentication": "airtableTokenApi", "additionalFields": {"fields": "Name,File,Executive Summary", "formula": "=AND(\\n  Name != \\"\\",\\n  File,\\n  OR(\\n    {Executive Summary} = \\"\\",\\n    {Executive Summary} = BLANK()\\n  )\\n)"}, "downloadFieldNames": "data", "downloadAttachments": true}, "credentials": {"airtableTokenApi": {"id": "Und0frCQ6SNVX3VV", "name": "Airtable Personal Access Token account"}}, "typeVersion": 1}, {"id": "de2d910c-1307-408a-ba30-9dd30ec5b35f", "name": "Transcribe to Markdown", "type": "@n8n/n8n-nodes-langchain.chainLlm", "position": [2020, 820], "parameters": {"text": "transcribe the document to markdown.", "messages": {"messageValues": [{"message": "=You help transcribe documents to markdown, keeping faithful to all text printed and visible to the best of your ability.\\n* Ensure you capture all headings, subheadings, titles as well as small print.\\n* For any tables found with the document, convert them to markdown tables. If table row descriptions overflow into more than 1 row, concatanate and fit them into a single row. If two or more tables are adjacent horizontally, stack the tables vertically instead. There should be a newline after every markdown table.\\n* For any charts, describe the chart type, purpose and result and capture all relevant titles, labels, legends and generaet a table for the datapoints if possible.\\n* For images, describe the image along with any captions.\\n* Label headers and footers with \\"HEADER:\\" and \\"FOOTER:\\" respectively."}, {"type": "HumanMessagePromptTemplate", "messageType": "imageBinary"}]}, "promptType": "define"}, "typeVersion": 1.4}, {"id": "f3b7828e-39db-4e65-a512-4fa363043bf4", "name": "Identify Companies In Question", "type": "@n8n/n8n-nodes-langchain.informationExtractor", "position": [3740, 1257], "parameters": {"text": "={{ $json.chatInput }}", "options": {"systemPromptTemplate": "Help identify the names of one or more company who the user is interested in or is requesting the pitch deck of."}, "schemaType": "manual", "inputSchema": "{\\n\\t\\"type\\": \\"array\\",\\n\\t\\"items\\": {\\n\\t\\t\\"type\\": \\"string\\"\\n    }\\n}"}, "typeVersion": 1}, {"id": "83637db6-da8a-4424-9c8a-23a771e1a9b5", "name": "Qdrant Vector Store", "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant", "position": [4160, 1597], "parameters": {"options": {"searchFilterJson": "={{\\n{\\n  [$json.output.length > 1 ? \\"should\\" : \\"must\\"]: $json.output.map(item => ({\\n     \\"key\\": \\"metadata.name\\",\\n     \\"match\\": { \\"value\\": item }\\n  }))\\n}\\n}}"}, "qdrantCollection": {"__rl": true, "mode": "id", "value": "pitchdecks"}}, "credentials": {"qdrantApi": {"id": "NyinAS3Pgfik66w5", "name": "QdrantApi account"}}, "typeVersion": 1}, {"id": "5b228dd3-1c24-4da9-bbe9-86926e603c8b", "name": "Ask Questions About Pitchdecks", "type": "@n8n/n8n-nodes-langchain.agent", "position": [4060, 1257], "parameters": {"text": "={{ $('When chat message received').item.json.chatInput }}\\n", "options": {"systemMessage": "You help the user answer questions about a startup's pitch deck if it is available in our knowledge base. Assume all user questions are referring to the pitchdecks. Only use the knowledge base to answer questions. If you cannot find the requested information in the knowledge base, then let the user know.\\n\\nBefore answering any questions, ensure the user has specified a startup in which they want to enquire about and that the startup pitchdeck exists in the database. If the pitchdeck is not known to us, let the user know."}, "promptType": "define"}, "typeVersion": 1.6}, {"id": "619f5ae1-476c-47b7-bdbe-b691732088cc", "name": "Window Buffer Memory", "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow", "position": [4160, 1457], "parameters": {"sessionKey": "={{ $('When chat message received').first().json.sessionId }}", "sessionIdType": "customKey"}, "typeVersion": 1.2}, {"id": "0da11ff6-46b9-4cb3-9285-1e3b03c3ce6e", "name": "Sticky Note8", "type": "n8n-nodes-base.stickyNote", "position": [-1880, 280], "parameters": {"width": 671.0736854602326, "height": 705.4789168988943, "content": "## Try It Out!\\n\\n### This n8n template imports Pitch Decks and generates a report into Airtable as well as creates an AI Chatbot to ask questions about each Pitch Deck.\\n\\n* Airtable is used as the pitch deck database and PDF decks are downloaded from it.\\n* An AI Vision model is used to transcribe each page of the pitch deck into markdown.\\n* An Information Extractor is used to generate a report from the transcribed markdown and update required information back into pitch deck database.\\n* The transcribed markdown is also uploaded to a vector store to build an AI chatbot which can be used to ask questions on the pitch deck.\\n\\nCheck out the sample Airtable here: https://airtable.com/appCkqc2jc3MoVqDO/shrS21vGqlnqzzNUc\\n\\n### How To Use\\n* This template depends on the availability of the Airtable - make a duplicate of the airtable (https://airtable.com/appCkqc2jc3MoVqDO/shrS21vGqlnqzzNUc) and its columns before running the workflow.\\n* When a new pitchdeck is received, enter the company name into the **Name** column and upload the pdf into the **File** column. Leave all other columns blank.\\n* If you have the Airtable trigger active, the execution should start immediately once the file is uploaded. Otherwise, click the manual test trigger to start the workflow.\\n* When manually triggered, all \\"new\\" pitch decks will be handled by the workflow as separate executions.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!"}, "typeVersion": 1}, {"id": "960b5909-84a2-4bb2-b86f-8c9d1d80e4ab", "name": "Check Pitch Deck Exists", "type": "n8n-nodes-base.airtableTool", "position": [4560, 1457], "parameters": {"base": {"__rl": true, "mode": "list", "value": "appCkqc2jc3MoVqDO", "cachedResultUrl": "https://airtable.com/appCkqc2jc3MoVqDO", "cachedResultName": "Pitchdecks"}, "table": {"__rl": true, "mode": "list", "value": "tblI660SRJAOlSx3p", "cachedResultUrl": "https://airtable.com/appCkqc2jc3MoVqDO/tblI660SRJAOlSx3p", "cachedResultName": "Table 1"}, "options": {}, "operation": "search", "descriptionType": "manual", "filterByFormula": "=AND(Name=\\"{{ $fromAI(\\"company_name\\", \\"The name of the company\\", \\"string\\", \\"\\") }}\\")", "toolDescription": "Call this tool to check if a startup or company's pitchdeck exists in the knowledge base. This tool does not search for information inside the pitchdeck. An error or empty response indicates that the startup/company's pitchdeck does not exist."}, "credentials": {"airtableTokenApi": {"id": "Und0frCQ6SNVX3VV", "name": "Airtable Personal Access Token account"}}, "typeVersion": 2.1}, {"id": "bb542537-ef88-4a4b-8af5-b679f6e42885", "name": "When chat message received", "type": "@n8n/n8n-nodes-langchain.chatTrigger", "position": [3560, 1257], "webhookId": "9322ad29-d67e-4ced-abb3-46fa569393f1", "parameters": {"public": true, "options": {"title": "Pitch Deck Analysis", "subtitle": "Ask question's about a startup's pitch deck"}, "initialMessages": "This chat allows you to ask questions about a startup's pitch deck. Please start by giving the name of the startup."}, "typeVersion": 1.1}, {"id": "706fe30c-b725-4453-a3b4-4880380ceef0", "name": "Sticky Note9", "type": "n8n-nodes-base.stickyNote", "position": [-720, 600], "parameters": {"color": 5, "height": 91.86072082734213, "content": "### Change Me!\\nRemember to update Airtable nodes to point  to your own."}, "typeVersion": 1}, {"id": "33fcc696-c25d-4141-82e0-b6c537e70a08", "name": "Pitchdecks Vector Store", "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant", "position": [3000, 1340], "parameters": {"mode": "insert", "options": {"collectionConfig": "={{\\n{\\n  \\"vectors\\": {\\n    \\"distance\\": \\"Cosine\\",\\n    \\"size\\": 1536\\n  }\\n}\\n}}"}, "qdrantCollection": {"__rl": true, "mode": "id", "value": "=pitchdecks"}}, "credentials": {"qdrantApi": {"id": "NyinAS3Pgfik66w5", "name": "QdrantApi account"}}, "typeVersion": 1}, {"id": "6b0e7b83-e552-4809-bb38-0cc9921206e8", "name": "Sticky Note10", "type": "n8n-nodes-base.stickyNote", "position": [2300, 1340], "parameters": {"color": 5, "width": 278.26180226980307, "height": 91.64489634298351, "content": "### Change Me!\\nYou'll need to update the Qdrant URL in the \\"Delete Existing Vectors\\" node."}, "typeVersion": 1}], "pinData": {}, "connections": {"Get Row": {"main": [[{"node": "Prequisites Met", "type": "main", "index": 0}]]}, "Sort Pages": {"main": [[{"node": "Resize Images For AI", "type": "main", "index": 0}]]}, "Images To List": {"main": [[{"node": "Sort Pages", "type": "main", "index": 0}]]}, "Convert to File": {"main": [[{"node": "Split PDF into Images", "type": "main", "index": 0}]]}, "Generate Report": {"main": [[{"node": "Update Pitchdecks Table", "type": "main", "index": 0}]]}, "Prequisites Met": {"main": [[{"node": "Execute Workflow", "type": "main", "index": 0}], [{"node": "No Operation, do nothing", "type": "main", "index": 0}]]}, "Extract Zip File": {"main": [[{"node": "Images To List", "type": "main", "index": 0}]]}, "Combine All Pages": {"main": [[{"node": "Generate Report", "type": "main", "index": 0}]]}, "Embeddings OpenAI": {"ai_embedding": [[{"node": "Pitchdecks Vector Store", "type": "ai_embedding", "index": 0}]]}, "Extract from File": {"main": [[{"node": "Convert to File", "type": "main", "index": 0}]]}, "OpenAI Chat Model": {"ai_languageModel": [[{"node": "Ask Questions About Pitchdecks", "type": "ai_languageModel", "index": 0}]]}, "Vector Store Tool": {"ai_tool": [[{"node": "Ask Questions About Pitchdecks", "type": "ai_tool", "index": 0}]]}, "Embeddings OpenAI1": {"ai_embedding": [[{"node": "Qdrant Vector Store", "type": "ai_embedding", "index": 0}]]}, "OpenAI Chat Model1": {"ai_languageModel": [[{"node": "Identify Companies In Question", "type": "ai_languageModel", "index": 0}]]}, "OpenAI Chat Model2": {"ai_languageModel": [[{"node": "Generate Report", "type": "ai_languageModel", "index": 0}]]}, "OpenAI Chat Model3": {"ai_languageModel": [[{"node": "Vector Store Tool", "type": "ai_languageModel", "index": 0}]]}, "OpenAI Chat Model4": {"ai_languageModel": [[{"node": "Transcribe to Markdown", "type": "ai_languageModel", "index": 0}]]}, "Default Data Loader": {"ai_document": [[{"node": "Pitchdecks Vector Store", "type": "ai_document", "index": 0}]]}, "Qdrant Vector Store": {"ai_vectorStore": [[{"node": "Vector Store Tool", "type": "ai_vectorStore", "index": 0}]]}, "Search Pending Rows": {"main": [[{"node": "Get Row", "type": "main", "index": 0}]]}, "Resize Images For AI": {"main": [[{"node": "Transcribe to Markdown", "type": "main", "index": 0}]]}, "Window Buffer Memory": {"ai_memory": [[{"node": "Ask Questions About Pitchdecks", "type": "ai_memory", "index": 0}]]}, "Split PDF into Images": {"main": [[{"node": "Extract Zip File", "type": "main", "index": 0}]]}, "Transcribe to Markdown": {"main": [[{"node": "Combine All Pages", "type": "main", "index": 0}, {"node": "Continue With Pages Only", "type": "main", "index": 0}, {"node": "Delete Existing Vectors", "type": "main", "index": 0}]]}, "Check Pitch Deck Exists": {"ai_tool": [[{"node": "Ask Questions About Pitchdecks", "type": "ai_tool", "index": 0}]]}, "Delete Existing Vectors": {"main": [[{"node": "Continue With Pages Only", "type": "main", "index": 1}]]}, "Continue With Pages Only": {"main": [[{"node": "Pitchdecks Vector Store", "type": "main", "index": 0}]]}, "Execute Workflow Trigger": {"main": [[{"node": "Download Deck From Airtable", "type": "main", "index": 0}]]}, "When chat message received": {"main": [[{"node": "Identify Companies In Question", "type": "main", "index": 0}]]}, "Download Deck From Airtable": {"main": [[{"node": "Extract from File", "type": "main", "index": 0}]]}, "Identify Companies In Question": {"main": [[{"node": "Ask Questions About Pitchdecks", "type": "main", "index": 0}]]}, "Airtable Trigger For Pending Rows": {"main": [[{"node": "Get Row", "type": "main", "index": 0}]]}, "Recursive Character Text Splitter": {"ai_textSplitter": [[{"node": "Default Data Loader", "type": "ai_textSplitter", "index": 0}]]}, "When clicking ‘Test workflow’": {"main": [[{"node": "Search Pending Rows", "type": "main", "index": 0}]]}}}}	2025-10-12 14:22:36.394542
1442	2466	35	23	[]	full	f	{"id": 2466, "name": "Respond to WhatsApp Messages with AI Like a Pro!", "workflow": {"meta": {"instanceId": "408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9"}, "nodes": [{"id": "38ffe41a-ecdf-4bb4-bd55-51998abab0f5", "name": "WhatsApp Trigger", "type": "n8n-nodes-base.whatsAppTrigger", "position": [220, 300], "webhookId": "0b1b3a9b-2f6a-4f5a-8385-6365d96f4802", "parameters": {"updates": ["messages"]}, "credentials": {"whatsAppTriggerApi": {"id": "H3uYNtpeczKMqtYm", "name": "WhatsApp OAuth account"}}, "typeVersion": 1}, {"id": "a35ac268-eff0-46cd-ac4e-c9b047a3f893", "name": "Get Audio URL", "type": "n8n-nodes-base.whatsApp", "position": [1020, -160], "parameters": {"resource": "media", "operation": "mediaUrlGet", "mediaGetId": "={{ $json.audio.id }}", "requestOptions": {}}, "credentials": {"whatsAppApi": {"id": "9SFJPeqrpChOkAmw", "name": "WhatsApp account"}}, "typeVersion": 1}, {"id": "a3be543c-949c-4443-bf82-e0d00419ae23", "name": "Get Video URL", "type": "n8n-nodes-base.whatsApp", "position": [1020, 200], "parameters": {"resource": "media", "operation": "mediaUrlGet", "mediaGetId": "={{ $json.video.id }}", "requestOptions": {}}, "credentials": {"whatsAppApi": {"id": "9SFJPeqrpChOkAmw", "name": "WhatsApp account"}}, "typeVersion": 1}, {"id": "dd3cd0e7-0d1e-40cf-8120-aba0d1646d6d", "name": "Get Image URL", "type": "n8n-nodes-base.whatsApp", "position": [1020, 540], "parameters": {"resource": "media", "operation": "mediaUrlGet", "mediaGetId": "={{ $json.image.id }}", "requestOptions": {}}, "credentials": {"whatsAppApi": {"id": "9SFJPeqrpChOkAmw", "name": "WhatsApp account"}}, "typeVersion": 1}, {"id": "a3505c93-2719-4a11-8813-39844fe0dd1a", "name": "Download Video", "type": "n8n-nodes-base.httpRequest", "position": [1180, 200], "parameters": {"url": "={{ $json.url }}", "options": {}, "authentication": "predefinedCredentialType", "nodeCredentialType": "whatsAppApi"}, "credentials": {"whatsAppApi": {"id": "9SFJPeqrpChOkAmw", "name": "WhatsApp account"}}, "typeVersion": 4.2}, {"id": "b22e3a7d-5fa1-4b8d-be08-b59f5bb5c417", "name": "Download Audio", "type": "n8n-nodes-base.httpRequest", "position": [1180, -160], "parameters": {"url": "={{ $json.url }}", "options": {}, "authentication": "predefinedCredentialType", "nodeCredentialType": "whatsAppApi"}, "credentials": {"whatsAppApi": {"id": "9SFJPeqrpChOkAmw", "name": "WhatsApp account"}}, "typeVersion": 4.2}, {"id": "dcadbd30-598e-443b-a3a7-10d7f9210f49", "name": "Download Image", "type": "n8n-nodes-base.httpRequest", "position": [1180, 540], "parameters": {"url": "={{ $json.url }}", "options": {}, "authentication": "predefinedCredentialType", "nodeCredentialType": "whatsAppApi"}, "credentials": {"whatsAppApi": {"id": "9SFJPeqrpChOkAmw", "name": "WhatsApp account"}}, "typeVersion": 4.2}, {"id": "d38b6f73-272e-4833-85fc-46ce0db91f6a", "name": "Window Buffer Memory", "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow", "position": [2380, 560], "parameters": {"sessionKey": "=whatsapp-tutorial-{{ $json.from }}", "sessionIdType": "customKey"}, "typeVersion": 1.2}, {"id": "3459f96b-c0de-4514-9d53-53a9b40d534e", "name": "Get User's Message", "type": "n8n-nodes-base.set", "position": [2080, 380], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "d990cbd6-a408-4ec4-a889-41be698918d9", "name": "message_type", "type": "string", "value": "={{ $('Split Out Message Parts').item.json.type }}"}, {"id": "23b785c3-f38e-4706-80b7-51f333bba3bd", "name": "message_text", "type": "string", "value": "={{ $json.text }}"}, {"id": "6e83f9a7-cf75-4182-b2d2-3151e8af76b9", "name": "from", "type": "string", "value": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}"}, {"id": "da4b602a-28ca-4b0d-a747-c3d3698c3731", "name": "message_caption", "type": "string", "value": "={{ $('Redirect Message Types').item.json.video && $('Redirect Message Types').item.json.video.caption || '' }}\\n{{ $('Redirect Message Types').item.json.image && $('Redirect Message Types').item.json.image.caption || ''}}\\n{{ $('Redirect Message Types').item.json.audio && $('Redirect Message Types').item.json.audio.caption || ''}}"}]}}, "typeVersion": 3.4}, {"id": "7a4c9905-37f0-4cfe-a928-91c7e38914b9", "name": "Split Out Message Parts", "type": "n8n-nodes-base.splitOut", "position": [460, 300], "parameters": {"options": {}, "fieldToSplitOut": "messages"}, "typeVersion": 1}, {"id": "f2ecc9a9-bdd9-475d-be0c-43594d0cb613", "name": "Wikipedia", "type": "@n8n/n8n-nodes-langchain.toolWikipedia", "position": [2500, 560], "parameters": {}, "typeVersion": 1}, {"id": "325dac6d-6698-41e0-8d2f-9ac5d84c245e", "name": "Redirect Message Types", "type": "n8n-nodes-base.switch", "position": [740, 380], "parameters": {"rules": {"values": [{"outputKey": "Audio Message", "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"operator": {"type": "boolean", "operation": "true", "singleValue": true}, "leftValue": "={{ $json.type == 'audio' && Boolean($json.audio) }}", "rightValue": "audio"}]}, "renameOutput": true}, {"outputKey": "Video Message", "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"id": "82aa5ff4-c9b6-4187-a27e-c7c5d9bfdda0", "operator": {"type": "boolean", "operation": "true", "singleValue": true}, "leftValue": "={{ $json.type == 'video' && Boolean($json.video) }}", "rightValue": ""}]}, "renameOutput": true}, {"outputKey": "Image Message", "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"id": "05b30af4-967b-4824-abdc-84a8292ac0e5", "operator": {"type": "boolean", "operation": "true", "singleValue": true}, "leftValue": "={{ $json.type == 'image' && Boolean($json.image) }}", "rightValue": ""}]}, "renameOutput": true}]}, "options": {"fallbackOutput": "extra", "renameFallbackOutput": "Text Message"}}, "typeVersion": 3.2}, {"id": "b25c7d65-b9ea-4f90-8516-1747130501b2", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [220, 20], "parameters": {"color": 7, "width": 335.8011507479863, "height": 245.72612197928734, "content": "## 1. WhatsApp Trigger\\n[Learn more about the WhatsApp Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.whatsapptrigger)\\n\\nTo start receiving WhatsApp messages in your workflow, there are quite a few steps involved so be sure to follow the n8n documentation. When we recieve WhatsApp messages, we'll split out the messages part of the payload and handle them depending on the message type using the Switch node."}, "typeVersion": 1}, {"id": "0d3d721e-fefc-4b50-abe1-0dd504c962ff", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [1020, -280], "parameters": {"color": 7, "width": 356.65822784810103, "height": 97.23360184119679, "content": "### 2. Transcribe Audio Messages 💬\\nFor audio messages or voice notes, we can use GPT4o to transcribe the message for our AI Agent."}, "typeVersion": 1}, {"id": "59de051e-f0d4-4c07-9680-03923ab81f57", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [1020, 40], "parameters": {"color": 7, "width": 492.5258918296896, "height": 127.13555811277331, "content": "### 3. Describe Video Messages 🎬\\nFor video messages, one approach is to use a Multimodal Model that supports parsing video. Currently, Google Gemini is a well-tested service for this task. We'll need to use the HTTP request node as currrently n8n's LLM node doesn't currently support video binary types."}, "typeVersion": 1}, {"id": "e2ca780f-01c0-4a5f-9f0a-e15575d0b803", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [1020, 420], "parameters": {"color": 7, "width": 356.65822784810103, "height": 97.23360184119679, "content": "### 4. Analyse Image Messages 🏞️\\nFor image messages, we can use GPT4o to explain what is going on in the message for our AI Agent."}, "typeVersion": 1}, {"id": "6eea3c0f-4501-4355-b3b7-b752c93d5c48", "name": "Sticky Note4", "type": "n8n-nodes-base.stickyNote", "position": [1020, 720], "parameters": {"color": 7, "width": 428.24395857307246, "height": 97.23360184119679, "content": "### 5. Text summarizer 📘\\nFor text messages, we don't need to do much transformation but it's nice to summarize for easier understanding."}, "typeVersion": 1}, {"id": "925a3871-9cdb-49f9-a2b9-890617d09965", "name": "Get Text", "type": "n8n-nodes-base.wait", "position": [1020, 840], "webhookId": "99b49c83-d956-46d2-b8d3-d65622121ad9", "parameters": {"amount": 0}, "typeVersion": 1.1}, {"id": "9225a6b9-322a-4a33-86af-6586fcf246b9", "name": "Sticky Note5", "type": "n8n-nodes-base.stickyNote", "position": [2280, 60], "parameters": {"color": 7, "width": 500.7797468354428, "height": 273.14522439585744, "content": "## 6. Generate Response with AI Agent\\n[Read more about the AI Agent node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent)\\n\\nNow that we'll able to handle all message types from WhatsApp, we could do pretty much anything we want with it by giving it our AI agent. Examples could include handling customer support, helping to book appointments or verifying documents.\\n\\nIn this demonstration, we'll just create a simple AI Agent which responds to our WhatsApp user's message and returns a simple response."}, "typeVersion": 1}, {"id": "5a863e5d-e7fb-4e89-851b-e0936f5937e7", "name": "Sticky Note6", "type": "n8n-nodes-base.stickyNote", "position": [2740, 660], "parameters": {"color": 7, "width": 384.12151898734186, "height": 211.45776754890682, "content": "## 7. Respond to WhatsApp User\\n[Read more about the Whatsapp node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.whatsapp/)\\n\\nTo close out this demonstration, we'll simple send a simple text message back to the user. Note that this WhatsApp node also allows you to send images, audio, videos, documents as well as location!"}, "typeVersion": 1}, {"id": "89df6f6c-2d91-4c14-a51a-4be29b1018ec", "name": "Respond to User", "type": "n8n-nodes-base.whatsApp", "position": [2740, 480], "parameters": {"textBody": "={{ $json.output }}", "operation": "send", "phoneNumberId": "477115632141067", "requestOptions": {}, "additionalFields": {}, "recipientPhoneNumber": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}"}, "credentials": {"whatsAppApi": {"id": "9SFJPeqrpChOkAmw", "name": "WhatsApp account"}}, "typeVersion": 1}, {"id": "67709b9e-a9b3-456b-9e68-71720b0cd75e", "name": "Sticky Note7", "type": "n8n-nodes-base.stickyNote", "position": [-340, -140], "parameters": {"width": 470.66513233601853, "height": 562.8608514850005, "content": "## Try It Out!\\n\\n### This n8n template demonstrates the beginnings of building your own n8n-powered WhatsApp chatbot! Under the hood, utilise n8n's powerful AI features to handle different message types and use an AI agent to respond to the user. A powerful tool for any use-case!\\n\\n* Incoming WhatsApp Trigger provides a way to get messages into the workflow.\\n* The message received is extracted and sent through 1 of 4 branches for processing.\\n* Each processing branch uses AI to analyse, summarize or transcribe the message so that the AI agent can understand it.\\n* The AI Agent is used to generate a response generally and uses a wikipedia tool for more complex queries.\\n* Finally, the response message is sent back to the WhatsApp user using the WhatsApp node.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!"}, "typeVersion": 1}, {"id": "10ae1f60-c025-4b63-8e02-4e6353bb67dc", "name": "Sticky Note8", "type": "n8n-nodes-base.stickyNote", "position": [-340, 440], "parameters": {"color": 5, "width": 473.28063885246377, "height": 96.0144533433243, "content": "### Activate workflow to use!\\nYou must activate the workflow to use this WhatsApp Chabot. If you are self-hosting, ensure WhatsApp is able to connect to your server."}, "typeVersion": 1}, {"id": "2f0fd658-a138-4f50-95a7-7ddc4eb90fab", "name": "Image Explainer", "type": "@n8n/n8n-nodes-langchain.chainLlm", "position": [1700, 540], "parameters": {"text": "Here is an image sent by the user. Describe the image and transcribe any text visible in the image.", "messages": {"messageValues": [{"type": "HumanMessagePromptTemplate", "messageType": "imageBinary"}]}, "promptType": "define"}, "typeVersion": 1.4}, {"id": "d969ce8b-d6c4-4918-985e-3420557ef707", "name": "Format Response", "type": "n8n-nodes-base.set", "position": [1860, 200], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "2ec0e573-373b-4692-bfae-86b6d3b9aa9a", "name": "text", "type": "string", "value": "={{ $json.candidates[0].content.parts[0].text }}"}]}}, "typeVersion": 3.4}, {"id": "b67c9c4e-e13f-4ee4-bf01-3fd9055a91be", "name": "Sticky Note9", "type": "n8n-nodes-base.stickyNote", "position": [1540, 180], "parameters": {"width": 260, "height": 305.35604142692785, "content": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n### 🚨 Google Gemini Required!\\nNot using Gemini? Feel free to swap this out for any Multimodal Model that supports Video."}, "typeVersion": 1}, {"id": "8dd972be-305b-4d26-aa05-1dee17411d8a", "name": "Google Gemini Chat Model", "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini", "position": [2240, 560], "parameters": {"options": {}, "modelName": "models/gemini-1.5-pro-002"}, "credentials": {"googlePalmApi": {"id": "dSxo6ns5wn658r8N", "name": "Google Gemini(PaLM) Api account"}}, "typeVersion": 1}, {"id": "00a883a6-7688-4e82-926b-c5ba680378b7", "name": "Sticky Note10", "type": "n8n-nodes-base.stickyNote", "position": [1540, -180], "parameters": {"width": 260, "height": 294.22048331415436, "content": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n### 🚨 Google Gemini Required!\\nNot using Gemini? Feel free to swap this out for any Multimodal Model that supports Audio."}, "typeVersion": 1}, {"id": "d0c7c2f6-b626-4ec5-86ff-96523749db2c", "name": "Google Gemini Audio", "type": "n8n-nodes-base.httpRequest", "position": [1620, -160], "parameters": {"url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-002:generateContent", "method": "POST", "options": {}, "jsonBody": "={{\\n{\\n  \\"contents\\": [{\\n    \\"parts\\":[\\n      {\\"text\\": \\"Transcribe this audio\\"},\\n      {\\"inlineData\\": {\\n        \\"mimeType\\": `audio/${$binary.data.fileExtension}`,\\n        \\"data\\": $input.item.binary.data.data }\\n      }\\n    ]\\n  }]\\n}\\n}}", "sendBody": true, "sendHeaders": true, "specifyBody": "json", "authentication": "predefinedCredentialType", "headerParameters": {"parameters": [{"name": "Content-Type", "value": "application/json"}]}, "nodeCredentialType": "googlePalmApi"}, "credentials": {"googlePalmApi": {"id": "dSxo6ns5wn658r8N", "name": "Google Gemini(PaLM) Api account"}}, "typeVersion": 4.2}, {"id": "27261815-f949-48e8-920d-7bf880ea87ce", "name": "Google Gemini Video", "type": "n8n-nodes-base.httpRequest", "position": [1620, 200], "parameters": {"url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-002:generateContent", "method": "POST", "options": {}, "jsonBody": "={{\\n{\\n  \\"contents\\": [{\\n    \\"parts\\":[\\n      {\\"text\\": \\"Describe this video\\"},\\n      {\\"inlineData\\": {\\n        \\"mimeType\\": `video/${$binary.data.fileExtension}`,\\n        \\"data\\": $input.item.binary.data.data }\\n      }\\n    ]\\n  }]\\n}\\n}}", "sendBody": true, "sendHeaders": true, "specifyBody": "json", "authentication": "predefinedCredentialType", "headerParameters": {"parameters": [{"name": "Content-Type", "value": "application/json"}]}, "nodeCredentialType": "googlePalmApi"}, "credentials": {"googlePalmApi": {"id": "dSxo6ns5wn658r8N", "name": "Google Gemini(PaLM) Api account"}}, "typeVersion": 4.2}, {"id": "7e28786b-ab19-4969-9915-2432a25b49d3", "name": "Google Gemini Chat Model1", "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini", "position": [1680, 680], "parameters": {"options": {}, "modelName": "models/gemini-1.5-pro-002"}, "credentials": {"googlePalmApi": {"id": "dSxo6ns5wn658r8N", "name": "Google Gemini(PaLM) Api account"}}, "typeVersion": 1}, {"id": "8832dac3-9433-4dcc-a805-346408042bf2", "name": "Google Gemini Chat Model2", "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini", "position": [1680, 980], "parameters": {"options": {}, "modelName": "models/gemini-1.5-pro-002"}, "credentials": {"googlePalmApi": {"id": "dSxo6ns5wn658r8N", "name": "Google Gemini(PaLM) Api account"}}, "typeVersion": 1}, {"id": "73d0af9e-d009-4859-b60d-48a2fbeda932", "name": "Format Response1", "type": "n8n-nodes-base.set", "position": [1860, -160], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "2ec0e573-373b-4692-bfae-86b6d3b9aa9a", "name": "text", "type": "string", "value": "={{ $json.candidates[0].content.parts[0].text }}"}]}}, "typeVersion": 3.4}, {"id": "2ad0e104-0924-47ef-ad11-d84351d72083", "name": "Text Summarizer", "type": "@n8n/n8n-nodes-langchain.chainLlm", "position": [1700, 840], "parameters": {"text": "={{ $json.text.body || $json.text }}", "messages": {"messageValues": [{"message": "Summarize the user's message succinctly."}]}, "promptType": "define"}, "typeVersion": 1.4}, {"id": "85eaad3a-c4d1-4ae7-a37b-0b72be39409d", "name": "AI Agent", "type": "@n8n/n8n-nodes-langchain.agent", "position": [2280, 380], "parameters": {"text": "=The user sent the following message\\nmessage type: {{ $json.message_type }}\\nmessage text or description:\\n```{{ $json.message_text }}```\\n{{ $json.message_caption ? `message caption: ${$json.message_caption.trim()}` : '' }}", "options": {"systemMessage": "You are a general knowledge assistant made available to the public via whatsapp. Help answer the user's query succiently and factually."}, "promptType": "define"}, "typeVersion": 1.6}], "pinData": {}, "connections": {"AI Agent": {"main": [[{"node": "Respond to User", "type": "main", "index": 0}]]}, "Get Text": {"main": [[{"node": "Text Summarizer", "type": "main", "index": 0}]]}, "Wikipedia": {"ai_tool": [[{"node": "AI Agent", "type": "ai_tool", "index": 0}]]}, "Get Audio URL": {"main": [[{"node": "Download Audio", "type": "main", "index": 0}]]}, "Get Image URL": {"main": [[{"node": "Download Image", "type": "main", "index": 0}]]}, "Get Video URL": {"main": [[{"node": "Download Video", "type": "main", "index": 0}]]}, "Download Audio": {"main": [[{"node": "Google Gemini Audio", "type": "main", "index": 0}]]}, "Download Image": {"main": [[{"node": "Image Explainer", "type": "main", "index": 0}]]}, "Download Video": {"main": [[{"node": "Google Gemini Video", "type": "main", "index": 0}]]}, "Format Response": {"main": [[{"node": "Get User's Message", "type": "main", "index": 0}]]}, "Image Explainer": {"main": [[{"node": "Get User's Message", "type": "main", "index": 0}]]}, "Text Summarizer": {"main": [[{"node": "Get User's Message", "type": "main", "index": 0}]]}, "Format Response1": {"main": [[{"node": "Get User's Message", "type": "main", "index": 0}]]}, "WhatsApp Trigger": {"main": [[{"node": "Split Out Message Parts", "type": "main", "index": 0}]]}, "Get User's Message": {"main": [[{"node": "AI Agent", "type": "main", "index": 0}]]}, "Google Gemini Audio": {"main": [[{"node": "Format Response1", "type": "main", "index": 0}]]}, "Google Gemini Video": {"main": [[{"node": "Format Response", "type": "main", "index": 0}]]}, "Window Buffer Memory": {"ai_memory": [[{"node": "AI Agent", "type": "ai_memory", "index": 0}]]}, "Redirect Message Types": {"main": [[{"node": "Get Audio URL", "type": "main", "index": 0}], [{"node": "Get Video URL", "type": "main", "index": 0}], [{"node": "Get Image URL", "type": "main", "index": 0}], [{"node": "Get Text", "type": "main", "index": 0}]]}, "Split Out Message Parts": {"main": [[{"node": "Redirect Message Types", "type": "main", "index": 0}]]}, "Google Gemini Chat Model": {"ai_languageModel": [[{"node": "AI Agent", "type": "ai_languageModel", "index": 0}]]}, "Google Gemini Chat Model1": {"ai_languageModel": [[{"node": "Image Explainer", "type": "ai_languageModel", "index": 0}]]}, "Google Gemini Chat Model2": {"ai_languageModel": [[{"node": "Text Summarizer", "type": "ai_languageModel", "index": 0}]]}}}}	2025-10-12 14:22:36.394543
1443	3002	3	3	[]	full	f	{"id": 3002, "name": " Dynamically Run SuiteQL Queries in NetSuite via HTTP Webhook in n8n", "workflow": {"id": "FDl4Ho3KYiA7MIxR", "meta": {"instanceId": "f6d3344846b38f0c35c069a91b2450f6527b26bb735b6301a692ce1cca2b2682"}, "name": "NetSuite Rest API workflow", "tags": [], "nodes": [{"id": "f7f90fb4-e29f-4bbf-a99d-ee2fde45cd06", "name": "When clicking ‘Test workflow’", "type": "n8n-nodes-base.manualTrigger", "position": [-380, -40], "parameters": {}, "typeVersion": 1}, {"id": "9fcc1ce7-e9bf-4592-8bcd-7c77272a9c59", "name": "NetSuite", "type": "n8n-nodes-netsuite.netsuite", "position": [-40, -180], "parameters": {"query": "={{ $json.query.suiteql }}", "options": {}, "operation": "runSuiteQL"}, "credentials": {"netsuite": {"id": "ro6Rl1oWY4KkFUYn", "name": "NetSuite account"}}, "typeVersion": 1}, {"id": "1d615309-2cb0-4383-9698-2f80da0d4bf5", "name": "Webhook", "type": "n8n-nodes-base.webhook", "position": [-380, -280], "webhookId": "249328cc-587a-4269-b266-96fe60cfaeb9", "parameters": {"path": "249328cc-587a-4269-b266-96fe60cfaeb9", "options": {}, "responseData": "allEntries", "responseMode": "lastNode"}, "typeVersion": 2}], "active": true, "pinData": {}, "settings": {"executionOrder": "v1"}, "versionId": "d6823e59-8e07-44a6-b4af-b029da620523", "connections": {"Webhook": {"main": [[{"node": "NetSuite", "type": "main", "index": 0}]]}, "NetSuite": {"main": [[]]}, "When clicking ‘Test workflow’": {"main": [[{"node": "NetSuite", "type": "main", "index": 0}]]}}}}	2025-10-12 14:46:17.945307
1444	3003	41	25	[]	full	f	{"id": 3003, "name": "Monitor Favorite YouTube Channels Through RSS feeds and Receive Notifications", "workflow": {"id": "tHgDFmFyuj6DnP6l", "meta": {"instanceId": "31e69f7f4a77bf465b805824e303232f0227212ae922d12133a0f96ffeab4fef", "templateCredsSetupCompleted": true}, "name": "🎦💌Advanced YouTube RSS Feed Buddy for Your Favorite Channels", "tags": [], "nodes": [{"id": "ab1db660-96d6-402c-b6e8-8c4d278577d1", "name": "On form submission", "type": "n8n-nodes-base.formTrigger", "position": [60, -220], "webhookId": "f6b3bbf7-b6e9-4ade-add4-12004d70b61c", "parameters": {"options": {"appendAttribution": false}, "formTitle": "RSS Feed for YouTube Channels", "formFields": {"values": [{"fieldType": "textarea", "fieldLabel": "YouTube Channel Ids", "placeholder": "[ \\"UCMcoud_ZW7cfxeIugBflSBw\\", \\"UCtevzRsHEKhs-RK8pAqwSyQ\\" ]"}]}, "responseMode": "lastNode", "formDescription": "Create RSS Feeds for Your Favorite YouTube Channels"}, "typeVersion": 2.2}, {"id": "6ea8d71f-a5f8-46d5-bf51-20df75ec6202", "name": "Create RSS Feed URLs1", "type": "n8n-nodes-base.set", "position": [60, 420], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "8159d367-513c-406b-8ad7-36f65c2e6512", "name": "rss_feed_url", "type": "string", "value": "=https://www.youtube.com/feeds/videos.xml?channel_id={{ $json.youtube_channel_id }}"}]}}, "typeVersion": 3.4}, {"id": "038e95ce-656e-4f6a-a9d8-96555aeeccf2", "name": "Get Channel Ids", "type": "n8n-nodes-base.set", "position": [460, 80], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "4b276cf0-6bb5-489e-a776-327291608b8e", "name": "ids", "type": "array", "value": "={{ $json[\\"YouTube Channel Ids\\"].length > 0  ? $json[\\"YouTube Channel Ids\\"] : $json[\\"Default YouTube Channel Ids\\"] }}"}]}}, "typeVersion": 3.4}, {"id": "7c8b43fb-52c9-4a3e-b5ff-2c21fe8fb183", "name": "Create YouTube API URL", "type": "n8n-nodes-base.code", "position": [1380, -220], "parameters": {"jsCode": "// Define the base URL for the YouTube Data API\\nconst BASE_URL = 'https://www.googleapis.com/youtube/v3/videos';\\n\\n// Get all input items\\nconst items = $input.all();\\n\\n// Process each item and create YouTube URLs\\nconst results = items.map(item => {\\n    const VIDEO_ID = item.json.VIDEO_ID;\\n    const GOOGLE_API_KEY = item.json.GOOGLE_API_KEY;\\n\\n    if (!VIDEO_ID) {\\n        throw new Error('The video ID parameter is empty.');\\n    }\\n\\n    if (!GOOGLE_API_KEY) {\\n        throw new Error('The Google API Key is missing.');\\n    }\\n\\n    // Construct the API URL with the video ID and dynamically retrieved API key\\n    const youtubeUrl = `${BASE_URL}?part=snippet,contentDetails,status,statistics,player,topicDetails&id=${VIDEO_ID}&key=${GOOGLE_API_KEY}`;\\n\\n    return {\\n        json: {\\n            youtubeUrl: youtubeUrl\\n        }\\n    };\\n});\\n\\n// Return array of results\\nreturn results;\\n\\n"}, "typeVersion": 2}, {"id": "1941d169-f91f-4500-af55-deb7a5b2bc23", "name": "Get YouTube Video Details", "type": "n8n-nodes-base.httpRequest", "position": [1580, -220], "parameters": {"url": "={{ $json.youtubeUrl }}", "options": {}}, "typeVersion": 4.2}, {"id": "ca49479c-b8e6-44db-a021-2b0f27a16bfc", "name": "Sticky Note14", "type": "n8n-nodes-base.stickyNote", "position": [1280, -340], "parameters": {"color": 3, "width": 680, "height": 300, "content": "## YouTube Video Details\\nhttps://developers.google.com/youtube/v3/docs\\nhttps://www.googleapis.com/youtube/v3/videos"}, "typeVersion": 1}, {"id": "8224915d-c7c4-449d-8210-463b5c5c39f0", "name": "Workflow Variables", "type": "n8n-nodes-base.set", "position": [1020, -220], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "e656b8ef-4266-4f50-bd41-703b4bdb04df", "name": "GOOGLE_API_KEY", "type": "string", "value": "[Add-Your-Google-API-Key-Here]"}, {"id": "32db428d-a2e2-48a0-92c6-3880e744d140", "name": "VIDEO_ID", "type": "string", "value": "={{ $json.id.split(\\":\\").last() }}"}]}}, "typeVersion": 3.4}, {"id": "cf334637-5632-4d2c-85b9-5ff232e2a164", "name": "Sticky Note12", "type": "n8n-nodes-base.stickyNote", "position": [900, -420], "parameters": {"width": 340, "height": 380, "content": "## 💡 YouTube Variables\\nhttps://cloud.google.com/docs/get-started/access-apis\\n\\n- GOOGLE_API_KEY (🌟Add your api key)\\n- VIDEO_ID"}, "typeVersion": 1}, {"id": "290bbc35-3835-4f50-9e02-bac8414f35bb", "name": "OpenAI Chat Model", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [1480, 580], "parameters": {"model": {"__rl": true, "mode": "list", "value": "gpt-4o-mini"}, "options": {}}, "credentials": {"openAiApi": {"id": "jEMSvKmtYfzAkhe6", "name": "OpenAi account"}}, "typeVersion": 1.2}, {"id": "fd65592b-e64a-445e-b090-1fecd15de9c7", "name": "Merge", "type": "n8n-nodes-base.merge", "position": [1020, 420], "parameters": {"mode": "combine", "options": {}, "advanced": true, "joinMode": "enrichInput1", "mergeByFields": {"values": [{"field1": "items[0].id", "field2": "id"}]}}, "typeVersion": 3}, {"id": "a3f82f16-5b34-4935-a3a0-ccd7f107eb80", "name": "OpenAI Chat Model1", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [1480, 1020], "parameters": {"model": {"__rl": true, "mode": "list", "value": "gpt-4o-mini"}, "options": {}}, "credentials": {"openAiApi": {"id": "jEMSvKmtYfzAkhe6", "name": "OpenAi account"}}, "typeVersion": 1.2}, {"id": "998fb87b-100c-4b93-bddf-4e09ccc7f312", "name": "Default YouTube Channel Ids", "type": "n8n-nodes-base.set", "position": [260, 80], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "73b9220c-d701-4a29-8aaf-3732d1db0ce6", "name": "Default YouTube Channel Ids", "type": "array", "value": "=[ \\"UCTwwnM-YB8zWC0RWwhO5sGw\\", \\"UCMcoud_ZW7cfxeIugBflSBw\\", \\"UCtevzRsHEKhs-RK8pAqwSyQ\\"]"}]}, "includeOtherFields": true}, "typeVersion": 3.4}, {"id": "96ca1617-1ee3-4ffa-ae63-d90fc07484c5", "name": "YouTube Channel Ids", "type": "n8n-nodes-base.set", "position": [60, 80], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "e01feba6-36c0-4fbe-803b-927069b56506", "name": "YouTube Channel Ids", "type": "string", "value": ""}]}}, "typeVersion": 3.4}, {"id": "0b5ac0a0-b4cc-43a8-8417-e488b9668c9d", "name": "RSS Read  - Max 15 Latest Videos per Channel", "type": "n8n-nodes-base.rssFeedRead", "position": [260, 420], "parameters": {"url": "={{ $json.rss_feed_url }}", "options": {"ignoreSSL": false}}, "typeVersion": 1.1}, {"id": "474daccd-01ed-4c9e-9c92-be33376b5770", "name": "Label New Videos", "type": "n8n-nodes-base.code", "position": [460, 420], "parameters": {"jsCode": "/**\\n * Processes YouTube video items and adds recent_videos flag based on publication date\\n * @param {Object[]} $input.all() - Array of input items from previous node\\n * @param {number} days - Number of days to check for recent videos (default: 3)\\n * @returns {Object[]} - Processed video items with additional properties\\n */\\ntry {\\n  // Get all input items from previous node\\n  const items = $input.all();\\n  \\n  // Define the threshold for recent videos (in days)\\n  const days = 3;\\n\\n  // Validate inputs\\n  if (!Array.isArray(items)) {\\n    throw new Error('Input must be an array of items');\\n  }\\n\\n  // Process each video item\\n  const videos = items.map((item, index) => {\\n    try {\\n      // Validate required properties\\n      if (!item?.json?.id || !item?.json?.pubDate) {\\n        throw new Error(`Missing required properties in item ${index}`);\\n      }\\n\\n      // Extract YouTube video ID from the full ID string\\n      const videoId = item.json.id.split(':')[2];\\n\\n      // Calculate if video is recent based on publication date\\n      const pubDate = new Date(item.json.pubDate);\\n      const thresholdDate = DateTime.now()\\n        .setZone('America/New_York')\\n        .startOf('day')\\n        .minus({days: days});\\n\\n      // Return processed item with additional properties\\n      return {\\n        json: {\\n          ...item.json,\\n          id: videoId,\\n          recent_videos: pubDate > new Date(thresholdDate)\\n        }\\n      };\\n    } catch (itemError) {\\n      // Handle individual item processing errors\\n      console.error(`Error processing item ${index}:`, itemError.message);\\n      // Return original item if processing fails\\n      return item;\\n    }\\n  });\\n\\n  return videos;\\n\\n} catch (error) {\\n  // Handle general execution errors\\n  console.error('Error in code execution:', error.message);\\n  throw new Error(`Failed to process video items: ${error.message}`);\\n}\\n"}, "typeVersion": 2}, {"id": "0a47e235-33e5-4b74-8b54-2c97d25fb55c", "name": "Get New Videos", "type": "n8n-nodes-base.filter", "position": [660, 420], "parameters": {"options": {}, "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"id": "914cc748-6fc4-4031-8e8c-849657b7e661", "operator": {"type": "boolean", "operation": "true", "singleValue": true}, "leftValue": "={{ $json.recent_videos }}", "rightValue": ""}]}}, "typeVersion": 2.2}, {"id": "d7d6319e-e3c9-44ec-b178-15f2f98f7a8c", "name": "Prepare For Telegram Message", "type": "n8n-nodes-base.set", "position": [1380, 80], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "dea3ff12-0650-474e-aa9e-e0912cb971de", "name": "items[0].id", "type": "string", "value": "={{ $json.items[0].id }}"}, {"id": "11c57b3a-d958-4dda-a52c-91e45b530eaf", "name": "items[0].snippet.title", "type": "string", "value": "={{ $json.items[0].snippet.title }}"}, {"id": "b519c5a4-cef1-46e7-8a33-138262e989e4", "name": "items[0].snippet.thumbnails.standard.url", "type": "string", "value": "={{ $json.items[0].snippet.thumbnails.standard.url }}"}, {"id": "62c5158a-bd64-428b-b681-0add1c8a2177", "name": "link", "type": "string", "value": "={{ $json.link }}"}]}}, "typeVersion": 3.4}, {"id": "30313019-1973-450a-92fa-00d0f0c4480e", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [1280, 0], "parameters": {"color": 5, "width": 520, "height": 280, "content": "## Send Latest Videos as Telegram Message"}, "typeVersion": 1}, {"id": "215e6ee8-af50-4b42-ac21-64dcef41d9f1", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [1280, 320], "parameters": {"color": 6, "width": 680, "height": 400, "content": "## Send Email for Each Latest Video (Multiple Emails)"}, "typeVersion": 1}, {"id": "df46f216-d365-4229-884c-95925ed1c3b6", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [1280, 760], "parameters": {"color": 6, "width": 680, "height": 400, "content": "## Send Email with a List of Latest Videos (One email only)"}, "typeVersion": 1}, {"id": "ef415f16-fb77-441f-9f34-c1962da8f669", "name": "One List Object", "type": "n8n-nodes-base.aggregate", "position": [1020, 860], "parameters": {"options": {}, "aggregate": "aggregateAllItemData"}, "typeVersion": 1}, {"id": "77b37e2f-eb9c-4b85-84db-a59525390d10", "name": "Prepare YouTube Data", "type": "n8n-nodes-base.set", "position": [1780, -220], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "b8e16aa1-b2a7-46c2-8d0a-5a6d203f8902", "name": "items[0].id", "type": "string", "value": "={{ $json.items[0].id }}"}, {"id": "560c5991-8aed-474b-99fa-2660ccb5ab8f", "name": "items[0].snippet.title", "type": "string", "value": "={{ $json.items[0].snippet.title }}"}, {"id": "dee0a454-56d3-4c17-83d3-2e3a368414af", "name": "items[0].snippet.description", "type": "string", "value": "={{ $json.items[0].snippet.description }}"}, {"id": "fba2482f-9cc0-4678-b035-f51367a6bff1", "name": "items[0].player.embedHtml", "type": "string", "value": "={{ $json.items[0].player.embedHtml }}"}, {"id": "21f47e6a-6847-4c54-87b1-08953d640011", "name": "items[0].snippet.thumbnails.standard", "type": "object", "value": "={{ $json.items[0].snippet.thumbnails.standard }}"}]}}, "typeVersion": 3.4}, {"id": "b0428f2b-e565-4592-9350-f70a3bcab255", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [-20, 320], "parameters": {"color": 3, "width": 880, "height": 300, "content": "## Create YouTube RSS Feed from Favorite Channel Ids"}, "typeVersion": 1}, {"id": "b5fb976b-6f08-4e6d-8d49-821bbb24230a", "name": "Sticky Note4", "type": "n8n-nodes-base.stickyNote", "position": [-20, 0], "parameters": {"width": 880, "height": 280, "content": "## Prepare the List of YouTube Channel Ids"}, "typeVersion": 1}, {"id": "c871e70f-187d-46e4-b012-f8e4318b066f", "name": "Sticky Note5", "type": "n8n-nodes-base.stickyNote", "position": [-20, -300], "parameters": {"color": 4, "width": 280, "height": 260, "content": "## 👍Try Me!"}, "typeVersion": 1}, {"id": "d19e2874-2d5b-4583-9345-d2f10e0b991e", "name": "Sticky Note6", "type": "n8n-nodes-base.stickyNote", "position": [-340, -300], "parameters": {"color": 4, "width": 280, "height": 260, "content": "## ⌚Set Your Schedule"}, "typeVersion": 1}, {"id": "b295807d-15aa-4a72-8e96-31d21534987a", "name": "Create List of Channel Ids", "type": "n8n-nodes-base.splitOut", "position": [660, 80], "parameters": {"options": {"destinationFieldName": "youtube_channel_id"}, "fieldToSplitOut": "ids"}, "typeVersion": 1}, {"id": "f8c8896e-474b-4213-a3d2-cc737e81e37f", "name": "Every Day", "type": "n8n-nodes-base.scheduleTrigger", "position": [-240, -220], "parameters": {"rule": {"interval": [{}]}}, "typeVersion": 1.2}, {"id": "347c55fa-24b9-46c9-a44a-786bb84cb300", "name": "Multiple Emails", "type": "n8n-nodes-base.gmail", "position": [1740, 420], "webhookId": "c016d26a-1c8a-4564-b715-a65bfcc902ea", "parameters": {"sendTo": "joe@example.com", "message": "={{ $json.text }}", "options": {}, "subject": "Latest YouTube Videos from Your Favorite Channels"}, "credentials": {"gmailOAuth2": {"id": "1xpVDEQ1yx8gV022", "name": "Gmail account"}}, "typeVersion": 2.1}, {"id": "3d5135db-4603-487e-ae70-4c457719b217", "name": "Single Email", "type": "n8n-nodes-base.gmail", "position": [1740, 860], "webhookId": "c016d26a-1c8a-4564-b715-a65bfcc902ea", "parameters": {"sendTo": "joe@example.com", "message": "={{ $json.text }}", "options": {}, "subject": "Latest YouTube Videos from Your Favorite Channels"}, "credentials": {"gmailOAuth2": {"id": "1xpVDEQ1yx8gV022", "name": "Gmail account"}}, "typeVersion": 2.1}, {"id": "3282d84b-497c-4a1c-90d7-7baabe614ca9", "name": "Sticky Note7", "type": "n8n-nodes-base.stickyNote", "position": [-640, -460], "parameters": {"color": 7, "width": 2640, "height": 1660, "content": "# 🎦💌 Advanced YouTube RSS Feed Buddy for Your Favorite Channels\\n## Automated Telegram and Email Notificatons for Latest YouTube Videos from Custom YouTube RSS Feeds"}, "typeVersion": 1}, {"id": "4b00df24-e3bb-44d0-afd5-be7afe272a6e", "name": "Create Email per Video", "type": "@n8n/n8n-nodes-langchain.chainLlm", "position": [1380, 420], "parameters": {"text": "=Create a list of responsive HTML email cards with the following requirements:\\n\\n## Use the following JSON data to populate the content:\\n{{ $json.items.toJsonString() }}\\n\\n## Design requirements:\\n- Use the HTML Card Template example provided which uses a clean, modern card layout\\n- Use safe email-compatible HTML and inline CSS\\n- Include padding and margins for readability\\n- Make the title clickable and link to the YouTube URL\\n- Display the author name and publication date\\n- Use web-safe fonts\\n- Ensure the card is mobile-responsive\\n- Keep the design simple and professional\\n- Add a YouTube play button icon or indication that it's a video\\n\\n3. Output only the HTML code without any preample or further explanations.  Remove all ``` and ```html from the response.\\n\\nThe HTML should be optimized for email clients and follow email HTML best practices.\\n\\n### HTML Card Template example:\\n\\n<table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\">\\\\n  <tr>\\\\n    <td align=\\"center\\">\\\\n      <table width=\\"600\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\" style=\\"max-width: 100%; border: 1px solid #e0e0e0; border-radius: 8px; font-family: Arial, sans-serif; background-color: #ffffff;\\">\\\\n        <tr>\\\\n          <td style=\\"padding: 16px;\\">\\\\n            <img src=\\"https://i.ytimg.com/vi/gTZOxYV379M/default.jpg\\" alt=\\"Video Thumbnail\\" style=\\"width: 100%; border-radius: 8px; display: block;\\"/>\\\\n            <h2 style=\\"font-size: 20px; margin: 12px 0; color: #333;\\"><a href=\\"//www.youtube.com/embed/gTZOxYV379M\\" style=\\"text-decoration: none; color: #1a73e8;\\">n8n Tutorial #10: Two n8n features to build AI Agents faster & easier</a></h2>\\\\n            <p style=\\"color: #555; font-size: 14px; line-height: 1.5; margin: 8px 0;\\">Discover how to build AI Agents and Tools faster and easier using n8n's built in <span style=\\"font-weight: bold;\\">$fromAI()</span> function as well as their Easy button. Find out which solution may be better for you.</p>\\\\n            <div style=\\"padding: 10px 0;\\">\\\\n              <p style=\\"color: #888; font-size: 12px; margin: 0;\\">👨‍💼 Business Inquiries: <a href=\\"mailto:ben@smarterchats.com\\" style=\\"color: #1a73e8; text-decoration: none;\\">ben@smarterchats.com</a></p>\\\\n              <p style=\\"color: #888; font-size: 12px; margin: 0;\\">Timestamps: 0:00 Intro | 0:35 The hack | 1:13 Solution 1: Easy | 1:30 Demo | 3:11 $fromAI()</p>\\\\n            </div>\\\\n            <div style=\\"text-align: center; margin-top: 8px;\\">\\\\n              <a href=\\"//www.youtube.com/embed/gTZOxYV379M\\" style=\\"display: inline-block; background-color: #ff0000; color: #ffffff; padding: 10px 15px; border-radius: 4px; text-decoration: none; font-weight: bold;\\">▶ Play Video</a>\\\\n            </div>\\\\n          </td>\\\\n        </tr>\\\\n      </table>\\\\n    </td>\\\\n  </tr>\\\\n</table>\\n", "promptType": "define"}, "typeVersion": 1.5}, {"id": "3b50b7c2-8a2a-4383-9f61-757fc1db61c0", "name": "Create One Email for All Videos", "type": "@n8n/n8n-nodes-langchain.chainLlm", "position": [1380, 860], "parameters": {"text": "=Create a list of responsive HTML email cards with the following requirements:\\n\\n## Use the following JSON data to populate the content:\\n{{ $json.data.toJsonString() }}\\n\\n## Design requirements:\\n- Use the HTML Card Template example provided which uses a clean, modern card layout\\n- Use safe email-compatible HTML and inline CSS\\n- Include padding and margins for readability\\n- Make the title clickable and link to the YouTube URL\\n- Display the author name and publication date\\n- Use web-safe fonts\\n- Ensure the card is mobile-responsive\\n- Keep the design simple and professional\\n- Add a YouTube play button icon or indication that it's a video\\n\\n3. Output only the HTML code without any preample or further explanations.  Remove all ``` and ```html from the response.\\n\\nThe HTML should be optimized for email clients and follow email HTML best practices.\\n\\n### HTML Card Template example:\\n\\n<table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\">\\\\n  <tr>\\\\n    <td align=\\"center\\">\\\\n      <table width=\\"600\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\" style=\\"max-width: 100%; border: 1px solid #e0e0e0; border-radius: 8px; font-family: Arial, sans-serif; background-color: #ffffff;\\">\\\\n        <tr>\\\\n          <td style=\\"padding: 16px;\\">\\\\n            <img src=\\"https://i.ytimg.com/vi/gTZOxYV379M/default.jpg\\" alt=\\"Video Thumbnail\\" style=\\"width: 100%; border-radius: 8px; display: block;\\"/>\\\\n            <h2 style=\\"font-size: 20px; margin: 12px 0; color: #333;\\"><a href=\\"//www.youtube.com/embed/gTZOxYV379M\\" style=\\"text-decoration: none; color: #1a73e8;\\">n8n Tutorial #10: Two n8n features to build AI Agents faster & easier</a></h2>\\\\n            <p style=\\"color: #555; font-size: 14px; line-height: 1.5; margin: 8px 0;\\">Discover how to build AI Agents and Tools faster and easier using n8n's built in <span style=\\"font-weight: bold;\\">$fromAI()</span> function as well as their Easy button. Find out which solution may be better for you.</p>\\\\n            <div style=\\"padding: 10px 0;\\">\\\\n              <p style=\\"color: #888; font-size: 12px; margin: 0;\\">👨‍💼 Business Inquiries: <a href=\\"mailto:ben@smarterchats.com\\" style=\\"color: #1a73e8; text-decoration: none;\\">ben@smarterchats.com</a></p>\\\\n              <p style=\\"color: #888; font-size: 12px; margin: 0;\\">Timestamps: 0:00 Intro | 0:35 The hack | 1:13 Solution 1: Easy | 1:30 Demo | 3:11 $fromAI()</p>\\\\n            </div>\\\\n            <div style=\\"text-align: center; margin-top: 8px;\\">\\\\n              <a href=\\"//www.youtube.com/embed/gTZOxYV379M\\" style=\\"display: inline-block; background-color: #ff0000; color: #ffffff; padding: 10px 15px; border-radius: 4px; text-decoration: none; font-weight: bold;\\">▶ Play Video</a>\\\\n            </div>\\\\n          </td>\\\\n        </tr>\\\\n      </table>\\\\n    </td>\\\\n  </tr>\\\\n</table>\\n", "promptType": "define"}, "typeVersion": 1.5}, {"id": "0a6bc236-1e8d-43bf-ac80-483d13531b06", "name": "Telegram", "type": "n8n-nodes-base.telegram", "position": [1580, 80], "webhookId": "93342863-02c0-42ee-98c3-a2ec72b3bf12", "parameters": {"file": "={{ $json.items[0].snippet.thumbnails.standard.url }}", "chatId": "={{ $env.TELEGRAM_CHAT_ID }}", "operation": "sendPhoto", "additionalFields": {"caption": "=New YouTube Video From Your Favorite Channel {{ $json.items[0].snippet.title }} {{ $json.items[0].snippet.thumbnails.standard.url }} {{ $json.link }}"}}, "credentials": {"telegramApi": {"id": "pAIFhguJlkO3c7aQ", "name": "Telegram account"}}, "typeVersion": 1.2}, {"id": "e2a39e5e-2df9-4165-92e5-ed7b4f3837ce", "name": "Create RSS Feed URLs", "type": "n8n-nodes-base.set", "position": [460, 860], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "8159d367-513c-406b-8ad7-36f65c2e6512", "name": "rss_feed_url", "type": "string", "value": "=https://www.youtube.com/feeds/videos.xml?channel_id={{ $json.youtube_channel_id }}"}]}}, "typeVersion": 3.4}, {"id": "228acccf-7d8f-4b07-9b0d-e88e3284a4c5", "name": "RSS Read  - Max 15 Latest Videos per Channel1", "type": "n8n-nodes-base.rssFeedRead", "position": [660, 860], "parameters": {"url": "={{ $json.rss_feed_url }}", "options": {"ignoreSSL": false}}, "typeVersion": 1.1}, {"id": "c6f2cd3b-7920-4f1d-a2c2-299dcd4ef592", "name": "Create List of Channel Ids1", "type": "n8n-nodes-base.splitOut", "position": [260, 860], "parameters": {"options": {"destinationFieldName": "youtube_channel_id"}, "fieldToSplitOut": "ids"}, "typeVersion": 1}, {"id": "e1a040f0-513c-4810-9b6d-9db5a4ac64a5", "name": "Sticky Note8", "type": "n8n-nodes-base.stickyNote", "position": [-20, 740], "parameters": {"color": 2, "width": 880, "height": 320, "content": "## Simple Option for Creating YouTube RSS Feed by Channel Ids"}, "typeVersion": 1}, {"id": "b1229199-464c-42e0-b8c2-8cc58bebfeb0", "name": "When clicking ‘Test workflow’", "type": "n8n-nodes-base.manualTrigger", "disabled": true, "position": [-200, 660], "parameters": {}, "typeVersion": 1}, {"id": "5b271425-aa7e-4703-a89f-64f10d6396dc", "name": "YouTube Channel Ids1", "type": "n8n-nodes-base.set", "position": [60, 860], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "73b9220c-d701-4a29-8aaf-3732d1db0ce6", "name": "ids", "type": "array", "value": "=[ \\"UCTwwnM-YB8zWC0RWwhO5sGw\\", \\"UCMcoud_ZW7cfxeIugBflSBw\\", \\"UCtevzRsHEKhs-RK8pAqwSyQ\\"]"}]}}, "typeVersion": 3.4}, {"id": "d07a4c79-9035-4eab-84c8-8ab31454471f", "name": "Sticky Note9", "type": "n8n-nodes-base.stickyNote", "position": [-600, 0], "parameters": {"width": 540, "height": 1060, "content": "## 🎯 Description\\n\\nThis workflow creates an automated system for monitoring and receiving notifications about new videos from your favorite YouTube channels through RSS feeds, with customizable email and Telegram notifications.\\n\\n## 🌟 Key Features\\n**📡 RSS Feed Management**\\n- Accepts custom YouTube channel IDs or uses default channels\\n- Automatically creates RSS feeds for each YouTube channel\\n- Monitors channels for new video uploads\\n- Labels and filters recent videos within a 3-day window (change this as required)\\n\\n\\n**📨 Multi-Channel Notification System**\\n- Sends Telegram notifications with video thumbnails and links\\n- Delivers customized email notifications in two formats:\\n  - Individual emails for each new video\\n  - Single digest email containing all new videos\\n\\n\\n**⚙️ Content Processing**\\n- Fetches detailed video information using YouTube API\\n- Creates responsive HTML email templates with video previews\\n- Includes video thumbnails, titles, descriptions, and direct links\\n- Maintains professional formatting across different email clients\\n\\n\\n## 🛠️ Setup Requirements\\n**🔑 API Configuration**\\n- YouTube Data API credentials\\n- Gmail account for sending notifications\\n- Telegram bot token and chat ID\\n- OpenAI API key for content processing\\n\\n\\n**📋 Channel Management**\\n- Add YouTube channel IDs through form input\\n- Configure default channel list\\n- Set notification preferences\\n- Adjust monitoring schedule\\n\\n\\nThis workflow is perfect for content creators, marketers, or anyone wanting to stay updated with their favorite YouTube channels through automated, professionally formatted notifications delivered via email and Telegram.\\n"}, "typeVersion": 1}], "active": true, "pinData": {}, "settings": {"timezone": "America/Vancouver", "callerPolicy": "workflowsFromSameOwner", "executionOrder": "v1"}, "versionId": "7d101e72-043a-42f0-a28a-4253d204869e", "connections": {"Merge": {"main": [[{"node": "Create Email per Video", "type": "main", "index": 0}, {"node": "One List Object", "type": "main", "index": 0}, {"node": "Prepare For Telegram Message", "type": "main", "index": 0}]]}, "Every Day": {"main": [[{"node": "YouTube Channel Ids", "type": "main", "index": 0}]]}, "Get New Videos": {"main": [[{"node": "Workflow Variables", "type": "main", "index": 0}, {"node": "Merge", "type": "main", "index": 1}]]}, "Get Channel Ids": {"main": [[{"node": "Create List of Channel Ids", "type": "main", "index": 0}]]}, "One List Object": {"main": [[{"node": "Create One Email for All Videos", "type": "main", "index": 0}]]}, "Label New Videos": {"main": [[{"node": "Get New Videos", "type": "main", "index": 0}]]}, "OpenAI Chat Model": {"ai_languageModel": [[{"node": "Create Email per Video", "type": "ai_languageModel", "index": 0}]]}, "On form submission": {"main": [[{"node": "Default YouTube Channel Ids", "type": "main", "index": 0}]]}, "OpenAI Chat Model1": {"ai_languageModel": [[{"node": "Create One Email for All Videos", "type": "ai_languageModel", "index": 0}]]}, "Workflow Variables": {"main": [[{"node": "Create YouTube API URL", "type": "main", "index": 0}]]}, "YouTube Channel Ids": {"main": [[{"node": "Default YouTube Channel Ids", "type": "main", "index": 0}]]}, "Create RSS Feed URLs": {"main": [[{"node": "RSS Read  - Max 15 Latest Videos per Channel1", "type": "main", "index": 0}]]}, "Prepare YouTube Data": {"main": [[{"node": "Merge", "type": "main", "index": 0}]]}, "YouTube Channel Ids1": {"main": [[{"node": "Create List of Channel Ids1", "type": "main", "index": 0}]]}, "Create RSS Feed URLs1": {"main": [[{"node": "RSS Read  - Max 15 Latest Videos per Channel", "type": "main", "index": 0}]]}, "Create Email per Video": {"main": [[{"node": "Multiple Emails", "type": "main", "index": 0}]]}, "Create YouTube API URL": {"main": [[{"node": "Get YouTube Video Details", "type": "main", "index": 0}]]}, "Get YouTube Video Details": {"main": [[{"node": "Prepare YouTube Data", "type": "main", "index": 0}]]}, "Create List of Channel Ids": {"main": [[{"node": "Create RSS Feed URLs1", "type": "main", "index": 0}]]}, "Create List of Channel Ids1": {"main": [[{"node": "Create RSS Feed URLs", "type": "main", "index": 0}]]}, "Default YouTube Channel Ids": {"main": [[{"node": "Get Channel Ids", "type": "main", "index": 0}]]}, "Prepare For Telegram Message": {"main": [[{"node": "Telegram", "type": "main", "index": 0}]]}, "Create One Email for All Videos": {"main": [[{"node": "Single Email", "type": "main", "index": 0}]]}, "When clicking ‘Test workflow’": {"main": [[{"node": "YouTube Channel Ids1", "type": "main", "index": 0}]]}, "RSS Read  - Max 15 Latest Videos per Channel": {"main": [[{"node": "Label New Videos", "type": "main", "index": 0}]]}}}}	2025-10-12 15:07:48.112175
1445	3007	18	10	[]	full	f	{"id": 3007, "name": "YouTube Shorts Automation - The Game-Changer in Scroll-Stopping Short Clips", "workflow": {"id": "qbjgCkTfRhq5KOx1", "meta": {"instanceId": "143d2ab55c8bffb06f8b9c7ad30335764fdc48bbbacecbe2218dadb998a32213", "templateCredsSetupCompleted": true}, "name": "YouTube Shorts Automation Agent - The Game-Changer in YouTube Shorts Automation", "tags": [], "nodes": [{"id": "df29859a-37ef-4187-b069-77559e901e2b", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [-380, -120], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "7dc74bae-e2c3-4c54-bbdf-fb4097bf352a", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [40, -320], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "b1bf8410-f900-4e11-aa9b-b6b57dd5fdcf", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [300, -80], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "38c9d441-1763-44d1-827c-bd91a60fd305", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [860, -200], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "dcb411bb-7670-402c-8ce9-9faf86b90f25", "name": "Sticky Note4", "type": "n8n-nodes-base.stickyNote", "position": [1500, -200], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "2a65ed59-e2fb-448f-b222-ddc56111360e", "name": "Sticky Note5", "type": "n8n-nodes-base.stickyNote", "position": [1980, 300], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "17ddf02e-9f3e-4f48-b296-84eb08ef2f0d", "name": "Fill information to Start", "type": "n8n-nodes-base.formTrigger", "position": [-260, 40], "webhookId": "ad85184b-608f-4fc5-8951-102b00ac45f0", "parameters": {}, "typeVersion": 2.2}, {"id": "76d8a495-a80c-4221-93e7-fcccdb63cad8", "name": "Extract Shorts", "type": "n8n-nodes-base.httpRequest", "position": [620, 0], "parameters": {}, "typeVersion": 4.2, "alwaysOutputData": true}, {"id": "612b1b0d-e117-45a5-994f-f5742fc7e756", "name": "Structure Shorts", "type": "n8n-nodes-base.splitOut", "position": [920, 0], "parameters": {}, "typeVersion": 1, "alwaysOutputData": true}, {"id": "e913603c-620e-446d-93ef-f052207d7949", "name": "Filter the Best Shorts to Upload", "type": "n8n-nodes-base.code", "position": [1240, 0], "parameters": {}, "typeVersion": 2}, {"id": "26cacd1b-28c4-4fe6-b3e0-743e57059884", "name": "Send shorts 1 at a time", "type": "n8n-nodes-base.splitInBatches", "position": [1620, 0], "parameters": {}, "typeVersion": 3}, {"id": "cb533798-f87d-49fc-bece-608fc089d00d", "name": "Download the Short in the Right Format", "type": "n8n-nodes-base.httpRequest", "position": [2620, 20], "parameters": {}, "typeVersion": 4.2, "alwaysOutputData": true}, {"id": "33d8eaec-2c56-469c-9c52-c4a9eaeff977", "name": "Upload to your YouTube Account", "type": "n8n-nodes-base.youTube", "position": [3200, 20], "parameters": {}, "typeVersion": 1}, {"id": "8a1fde28-87ba-4d8a-9cea-ff8f50b85858", "name": "Wait #1", "type": "n8n-nodes-base.wait", "position": [360, 40], "webhookId": "e446ad2f-da99-4529-9eb4-10fceb208600", "parameters": {}, "typeVersion": 1.1}, {"id": "f60eeeaa-0d46-42c7-a894-b826c857027a", "name": "Wait #2", "type": "n8n-nodes-base.wait", "position": [2020, 320], "webhookId": "20e42bb6-c4cc-474f-9ed5-4dcd328a05cf", "parameters": {}, "typeVersion": 1.1}, {"id": "7efcc3d2-f7c4-43a1-999f-efcdbd773a77", "name": "Sticky Note6", "type": "n8n-nodes-base.stickyNote", "position": [-1240, -240], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "6784b476-7928-4932-9a94-1bd08154d9ef", "name": "Prepare Shorts1", "type": "n8n-nodes-base.httpRequest", "position": [100, 40], "parameters": {}, "typeVersion": 4.2, "alwaysOutputData": true}, {"id": "fb8df3fa-0f00-4cc2-8902-eae19291005e", "name": "Sticky Note7", "type": "n8n-nodes-base.stickyNote", "position": [3600, -60], "parameters": {"content": ""}, "typeVersion": 1}], "active": true, "pinData": {}, "settings": {"executionOrder": "v1"}, "versionId": "a31ebfde-707b-4d33-aa04-5cbab4d9dd89", "connections": {"Wait #1": {"main": [[{"node": "Extract Shorts", "type": "main", "index": 0}]]}, "Wait #2": {"main": [[{"node": "Send shorts 1 at a time", "type": "main", "index": 0}]]}, "Extract Shorts": {"main": [[{"node": "Structure Shorts", "type": "main", "index": 0}]]}, "Prepare Shorts1": {"main": [[{"node": "Wait #1", "type": "main", "index": 0}]]}, "Structure Shorts": {"main": [[{"node": "Filter the Best Shorts to Upload", "type": "main", "index": 0}]]}, "Send shorts 1 at a time": {"main": [[], [{"node": "Download the Short in the Right Format", "type": "main", "index": 0}]]}, "Fill information to Start": {"main": [[{"node": "Prepare Shorts1", "type": "main", "index": 0}]]}, "Upload to your YouTube Account": {"main": [[{"node": "Wait #2", "type": "main", "index": 0}]]}, "Filter the Best Shorts to Upload": {"main": [[{"node": "Send shorts 1 at a time", "type": "main", "index": 0}]]}, "Download the Short in the Right Format": {"main": [[{"node": "Upload to your YouTube Account", "type": "main", "index": 0}]]}}}}	2025-10-12 15:07:48.112176
1446	3005	54	27	[]	full	f	{"id": 3005, "name": "✨🔪 Advanced AI Powered Document Parsing & Text Extraction with Llama Parse", "workflow": {"id": "kjyWJWfDlyXkKL3m", "meta": {"instanceId": "31e69f7f4a77bf465b805824e303232f0227212ae922d12133a0f96ffeab4fef", "templateCredsSetupCompleted": true}, "name": "✨🔪 Advanced AI Powered Document Parsing & Text Extraction with Llama Parse", "tags": [], "nodes": [{"id": "ea7670da-896e-4b9c-b0c2-b3a3dbb6f88f", "name": "Webhook", "type": "n8n-nodes-base.webhook", "position": [-2320, 80], "webhookId": "a9668054-5bd3-427d-8f18-932436441e42", "parameters": {"path": "parse", "options": {}, "httpMethod": "POST"}, "typeVersion": 2}, {"id": "2c445d40-5d8b-469e-811e-7423f57ba054", "name": "Gmail", "type": "n8n-nodes-base.gmail", "position": [-2040, -1260], "webhookId": "344de9dc-4062-4552-ae29-1e9150322cdb", "parameters": {"limit": 28, "filters": {"q": "has:attachment", "sender": " joe@example.com"}, "operation": "getAll"}, "credentials": {"gmailOAuth2": {"id": "1xpVDEQ1yx8gV022", "name": "Gmail account"}}, "typeVersion": 2.1}, {"id": "f321e1d3-24ba-4623-bb31-93c7f6389aa9", "name": "Gmail Trigger", "type": "n8n-nodes-base.gmailTrigger", "position": [-2360, -1260], "parameters": {"filters": {}, "pollTimes": {"item": [{"mode": "everyMinute"}, {}]}}, "credentials": {"gmailOAuth2": {"id": "1xpVDEQ1yx8gV022", "name": "Gmail account"}}, "typeVersion": 1.2}, {"id": "ad2701f8-be77-465e-bd58-0e964ba412c0", "name": "Limit", "type": "n8n-nodes-base.limit", "position": [-1840, -1260], "parameters": {"keep": "lastItems"}, "typeVersion": 1}, {"id": "c305dbce-714a-420e-8dd0-f5c6e80afa01", "name": "Get Message", "type": "n8n-nodes-base.gmail", "position": [-1640, -1260], "webhookId": "13036143-6e5b-47c1-84a4-a92cbc33b37f", "parameters": {"simple": false, "options": {"downloadAttachments": true, "dataPropertyAttachmentsPrefixName": "=file"}, "messageId": "={{ $('Gmail').item.json.id }}", "operation": "get"}, "credentials": {"gmailOAuth2": {"id": "1xpVDEQ1yx8gV022", "name": "Gmail account"}}, "typeVersion": 2.1}, {"id": "0e67527b-c886-41a1-b66b-c965fd6b44f3", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [-920, -1500], "parameters": {"color": 6, "width": 320, "height": 340, "content": "## Send to LlamaParse\\nhttps://docs.cloud.llamaindex.ai/API/upload-file-api-v-1-parsing-upload-post"}, "typeVersion": 1}, {"id": "85e72267-7be0-49ac-b305-4c07356ce244", "name": "Parse Document with LlamaParse", "type": "n8n-nodes-base.httpRequest", "position": [-800, -1360], "parameters": {"url": "https://api.cloud.llamaindex.ai/api/parsing/upload", "method": "POST", "options": {"response": {"response": {"responseFormat": "json"}}}, "sendBody": true, "contentType": "multipart-form-data", "sendHeaders": true, "authentication": "genericCredentialType", "bodyParameters": {"parameters": [{"name": "=file", "parameterType": "formBinaryData", "inputDataFieldName": "file0"}, {"name": "webhook_url", "value": "=https://[YOUR-N8N-URL]/webhook/parse"}, {"name": "accurate_mode", "value": "true"}, {"name": "premium_mode", "value": "false"}]}, "genericAuthType": "httpHeaderAuth", "headerParameters": {"parameters": [{"name": "accept", "value": "application/json"}]}}, "credentials": {"httpHeaderAuth": {"id": "9trkgqZBCEmSt6ng", "name": "GET Webhook"}}, "executeOnce": true, "typeVersion": 4.2, "alwaysOutputData": true}, {"id": "2664705a-31d5-439b-b1e4-fc6b708a7baa", "name": "Summarize Email", "type": "@n8n/n8n-nodes-langchain.chainLlm", "position": [-820, -680], "parameters": {"text": "={{ $('Is there an Email Attachement').item.json.text }}", "messages": {"messageValues": [{"message": "You are an expert at summarizing email messages.  Provide a summary of the provided email."}]}, "promptType": "define"}, "typeVersion": 1.5}, {"id": "1405f933-b281-469f-a5b7-0de2f820dd09", "name": "gpt-4o-mini", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [-720, -540], "parameters": {"model": {"__rl": true, "mode": "list", "value": "gpt-4o-mini"}, "options": {}}, "credentials": {"openAiApi": {"id": "jEMSvKmtYfzAkhe6", "name": "OpenAi account"}}, "typeVersion": 1.2}, {"id": "ea299469-7889-45c9-a8f1-679be09e5aaf", "name": "Save LlamaParse ID and Summary to Google Sheets", "type": "n8n-nodes-base.googleSheets", "position": [-140, -1020], "parameters": {"columns": {"value": {"jobid": "={{ $json.id }}", "summary": "={{ $json.text }}", "image_url": "={{ $json.webViewLink }}"}, "schema": [{"id": "jobid", "type": "string", "display": true, "removed": false, "required": false, "displayName": "jobid", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "statement_date", "type": "string", "display": true, "removed": true, "required": false, "displayName": "statement_date", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "org_name", "type": "string", "display": true, "removed": true, "required": false, "displayName": "org_name", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "member_name", "type": "string", "display": true, "removed": true, "required": false, "displayName": "member_name", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "subtotal", "type": "string", "display": true, "removed": true, "required": false, "displayName": "subtotal", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "service_fees_total", "type": "string", "display": true, "removed": true, "required": false, "displayName": "service_fees_total", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "tips_total", "type": "string", "display": true, "removed": true, "required": false, "displayName": "tips_total", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "current_excl_gst", "type": "string", "display": true, "removed": true, "required": false, "displayName": "current_excl_gst", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "container_deposit_total", "type": "string", "display": true, "removed": true, "required": false, "displayName": "container_deposit_total", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "outstanding_gst", "type": "string", "display": true, "removed": true, "required": false, "displayName": "outstanding_gst", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "paid_gst", "type": "string", "display": true, "removed": true, "required": false, "displayName": "paid_gst", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "total_gst", "type": "string", "display": true, "removed": true, "required": false, "displayName": "total_gst", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "total_bc_pst", "type": "string", "display": true, "removed": true, "required": false, "displayName": "total_bc_pst", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "total_bc_pst_liquor", "type": "string", "display": true, "removed": true, "required": false, "displayName": "total_bc_pst_liquor", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "total_savings", "type": "string", "display": true, "removed": true, "required": false, "displayName": "total_savings", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "final_amount_due", "type": "string", "display": true, "removed": true, "required": false, "displayName": "final_amount_due", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "payment_reference", "type": "string", "display": true, "removed": true, "required": false, "displayName": "payment_reference", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "payment_amount", "type": "string", "display": true, "removed": true, "required": false, "displayName": "payment_amount", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "transaction_number", "type": "string", "display": true, "removed": true, "required": false, "displayName": "transaction_number", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "image_url", "type": "string", "display": true, "removed": false, "required": false, "displayName": "image_url", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "summary", "type": "string", "display": true, "removed": false, "required": false, "displayName": "summary", "defaultMatch": false, "canBeUsedToMatch": true}], "mappingMode": "defineBelow", "matchingColumns": ["jobid"], "attemptToConvertTypes": false, "convertFieldsToString": false}, "options": {}, "operation": "appendOrUpdate", "sheetName": {"__rl": true, "mode": "list", "value": "gid=0", "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1mUvDI9sGvRl64iNV6ODXUzro5Q3Oeuaks5662tfN7Oo/edit#gid=0", "cachedResultName": "Expenses"}, "documentId": {"__rl": true, "mode": "list", "value": "1mUvDI9sGvRl64iNV6ODXUzro5Q3Oeuaks5662tfN7Oo", "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1mUvDI9sGvRl64iNV6ODXUzro5Q3Oeuaks5662tfN7Oo/edit?usp=drivesdk", "cachedResultName": "2024.Year.End.Expenses"}}, "credentials": {"googleSheetsOAuth2Api": {"id": "SOLbth24hZWisXAv", "name": "Google Sheets account"}}, "typeVersion": 4.5}, {"id": "d8454cf2-5bef-4bfa-9471-c358ff067765", "name": "Save Document to Google Drive", "type": "n8n-nodes-base.googleDrive", "position": [-820, -1020], "parameters": {"name": "={{ $('Is there an Email Attachement').item.json.id }}_{{ $('Is there an Email Attachement').item.binary.file0.fileName }}", "driveId": {"__rl": true, "mode": "list", "value": "My Drive"}, "options": {}, "folderId": {"__rl": true, "mode": "list", "value": "root", "cachedResultUrl": "https://drive.google.com/drive", "cachedResultName": "/ (Root folder)"}, "inputDataFieldName": "=file0"}, "credentials": {"googleDriveOAuth2Api": {"id": "UhdXGYLTAJbsa0xX", "name": "Google Drive account"}}, "typeVersion": 3}, {"id": "03f46b72-9e18-44a4-85ef-0eea058c3c6d", "name": "Extract Invoice Details as JSON", "type": "@n8n/n8n-nodes-langchain.chainLlm", "onError": "continueErrorOutput", "position": [-1180, 500], "parameters": {"text": "=Analyze this markdown content and convert it to JSON following this exact schema:\\n{\\n    \\"invoice_details\\": {\\n        \\"statement_date\\": \\"\\",\\n        \\"organization\\": {\\n            \\"name\\": \\"\\",\\n            \\"address\\": \\"\\",\\n            \\"gst_number\\": \\"\\"\\n        },\\n        \\"member\\": {\\n            \\"name\\": \\"\\",\\n            \\"company\\": \\"\\",\\n            \\"address\\": \\"\\",\\n            \\"contact_number\\": \\"\\",\\n            \\"organization_number\\": \\"\\"\\n        }\\n    },\\n    \\"transactions\\": [\\n        {\\n            \\"date\\": \\"\\",\\n            \\"document_number\\": \\"\\",\\n            \\"description\\": \\"\\",\\n            \\"base_amount\\": 0.00,\\n            \\"gst\\": 0.00,\\n            \\"bc_pst\\": 0.00,\\n            \\"bc_pst_liquor\\": 0.00,  # Added for liquor PST\\n            \\"container_deposit\\": 0.00,  # Added for bottle deposits\\n            \\"service_fee\\": 0.00,\\n            \\"tip_amount\\": 0.00,\\n            \\"regular_price\\": 0.00,  # Added for regular price tracking\\n            \\"savings_amount\\": 0.00,  # Added for savings tracking\\n            \\"total_charge\\": 0.00,\\n            \\"transaction_type\\": \\"\\"\\n        }\\n    ],\\n    \\"payment_details\\": {\\n        \\"previous_balance\\": 0.00,\\n        \\"payment_amount\\": 0.00,\\n        \\"payment_reference\\": \\"\\",\\n        \\"payment_date\\": \\"\\",\\n        \\"payment_method\\": \\"\\",\\n        \\"payment_status\\": \\"\\",\\n        \\"card_number\\": \\"\\",  # Added for card details\\n        \\"auth_number\\": \\"\\",  # Added for authorization\\n        \\"transaction_number\\": \\"\\"\\n    },\\n    \\"invoice_summary\\": {\\n        \\"subtotal\\": 0.00,\\n        \\"service_fees_total\\": 0.00,\\n        \\"tips_total\\": 0.00,\\n        \\"current_excl_gst\\": 0.00,\\n        \\"container_deposit_total\\": 0.00,  # Added for deposits\\n        \\"outstanding_gst\\": 0.00,\\n        \\"paid_gst\\": 0.00,\\n        \\"total_gst\\": 0.00,\\n        \\"total_bc_pst\\": 0.00,\\n        \\"total_bc_pst_liquor\\": 0.00,  # Added for liquor PST if shown in markdown content\\n        \\"total_savings\\": 0.00,  # Added for savings\\n        \\"final_amount_due\\": 0.00\\n    },\\n    \\"payment_terms\\": {\\n        \\"due_date\\": \\"\\",\\n        \\"processing_date\\": \\"\\",\\n        \\"special_notices\\": [],\\n        \\"cancellation_policy\\": \\"\\",\\n        \\"refund_policy\\": \\"\\",\\n        \\"return_policy\\": \\"\\"  # Added for return policy\\n    },\\n    \\"additional_info\\": {\\n        \\"booking_number\\": \\"\\",\\n        \\"transaction_time\\": \\"\\",  # Added for transaction time\\n        \\"register_info\\": \\"\\",     # Added for register details\\n        \\"event_details\\": {\\n            \\"date\\": \\"\\",\\n            \\"time\\": \\"\\",\\n            \\"location\\": \\"\\"\\n        },\\n        \\"special_instructions\\": []\\n    },\\n    \\"summary\\": \\"\\" # The natural language summary of the invoice\\n}\\n\\nMarkdown Content:\\n{{ $json.data }}\\n\\nImportant:\\n- Extract exact values from the markdown\\n- Return only valid JSON\\n- Include all fields even if empty\\n- Format numbers as floats with 2 decimal places\\n- Track container deposits separately\\n- Show liquor PST (10%) separately from regular PST if provided in markdown content\\n- Include regular prices and savings amounts\\n- Track transaction details including card info and authorization\\n- Parse return policy information\\n- Include register and transaction time details\\n- Ensure final_amount_due equals the sum of all applicable charges and taxes\\n- Summarize the markdown contents\\n- Only output valid JSON without any preamble or further explanation.  Remove any ```json and ``` from response.", "promptType": "define"}, "typeVersion": 1.5, "alwaysOutputData": true}, {"id": "3c371677-76e8-45d7-8c05-a4ca1cc0b1fe", "name": "gpt-4o-mini1", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [-1600, 240], "parameters": {"options": {}}, "credentials": {"openAiApi": {"id": "jEMSvKmtYfzAkhe6", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "9ff3f86f-9ffc-42fa-b428-a6bfabf2426a", "name": "gpt-4o-mini2", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [-1080, 640], "parameters": {"model": "gpt-4o", "options": {}}, "credentials": {"openAiApi": {"id": "jEMSvKmtYfzAkhe6", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "69a0505f-1fe4-4581-ad2d-5bc7d68874e9", "name": "Update Google Sheet by LlamaParse ID", "type": "n8n-nodes-base.googleSheets", "position": [-540, 600], "parameters": {"columns": {"value": {"jobid": "={{ $('Webhook').item.json.body.jobId }}", "summary": "={{ $json.output.summary }}", "org_name": "={{ $json.output.invoice_details.organization.name }}", "paid_gst": "={{ $json.output.invoice_summary.paid_gst }}", "subtotal": "={{ $json.output.invoice_summary.subtotal }}", "total_gst": "={{ $json.output.invoice_summary.total_gst }}", "tips_total": "={{ $json.output.invoice_summary.tips_total }}", "member_name": "={{ $json.output.invoice_details.member.name }}", "total_bc_pst": "={{ $json.output.invoice_summary.total_bc_pst }}", "total_savings": "={{ $json.output.invoice_summary.total_savings }}", "payment_amount": "={{ $json.output.payment_details.payment_amount }}", "statement_date": "={{ $json.output.invoice_details.statement_date }}", "outstanding_gst": "={{ $json.output.invoice_summary.outstanding_gst }}", "current_excl_gst": "={{ $json.output.invoice_summary.current_excl_gst }}", "final_amount_due": "={{ $json.output.invoice_summary.final_amount_due }}", "payment_reference": "={{ $json.output.payment_details.payment_reference }}", "service_fees_total": "={{ $json.output.invoice_summary.service_fees_total }}", "transaction_number": "={{ $json.output.payment_details.transaction_number }}", "total_bc_pst_liquor": "={{ $json.output.invoice_summary.total_bc_pst_liquor }}", "container_deposit_total": "={{ $json.output.invoice_summary.container_deposit_total }}"}, "schema": [{"id": "jobid", "type": "string", "display": true, "removed": false, "required": false, "displayName": "jobid", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "statement_date", "type": "string", "display": true, "removed": false, "required": false, "displayName": "statement_date", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "org_name", "type": "string", "display": true, "removed": false, "required": false, "displayName": "org_name", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "member_name", "type": "string", "display": true, "removed": false, "required": false, "displayName": "member_name", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "subtotal", "type": "string", "display": true, "removed": false, "required": false, "displayName": "subtotal", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "service_fees_total", "type": "string", "display": true, "removed": false, "required": false, "displayName": "service_fees_total", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "tips_total", "type": "string", "display": true, "removed": false, "required": false, "displayName": "tips_total", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "current_excl_gst", "type": "string", "display": true, "removed": false, "required": false, "displayName": "current_excl_gst", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "container_deposit_total", "type": "string", "display": true, "removed": false, "required": false, "displayName": "container_deposit_total", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "outstanding_gst", "type": "string", "display": true, "removed": false, "required": false, "displayName": "outstanding_gst", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "paid_gst", "type": "string", "display": true, "removed": false, "required": false, "displayName": "paid_gst", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "total_gst", "type": "string", "display": true, "removed": false, "required": false, "displayName": "total_gst", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "total_bc_pst", "type": "string", "display": true, "removed": false, "required": false, "displayName": "total_bc_pst", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "total_bc_pst_liquor", "type": "string", "display": true, "removed": false, "required": false, "displayName": "total_bc_pst_liquor", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "total_savings", "type": "string", "display": true, "removed": false, "required": false, "displayName": "total_savings", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "final_amount_due", "type": "string", "display": true, "removed": false, "required": false, "displayName": "final_amount_due", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "payment_reference", "type": "string", "display": true, "removed": false, "required": false, "displayName": "payment_reference", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "payment_amount", "type": "string", "display": true, "removed": false, "required": false, "displayName": "payment_amount", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "transaction_number", "type": "string", "display": true, "removed": false, "required": false, "displayName": "transaction_number", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "summary", "type": "string", "display": true, "removed": false, "required": false, "displayName": "summary", "defaultMatch": false, "canBeUsedToMatch": true}], "mappingMode": "defineBelow", "matchingColumns": ["jobid"]}, "options": {}, "operation": "update", "sheetName": {"__rl": true, "mode": "list", "value": "gid=0", "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1mUvDI9sGvRl64iNV6ODXUzro5Q3Oeuaks5662tfN7Oo/edit#gid=0", "cachedResultName": "Expenses"}, "documentId": {"__rl": true, "mode": "list", "value": "1mUvDI9sGvRl64iNV6ODXUzro5Q3Oeuaks5662tfN7Oo", "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1mUvDI9sGvRl64iNV6ODXUzro5Q3Oeuaks5662tfN7Oo/edit?usp=drivesdk", "cachedResultName": "2024.Year.End.Expenses"}}, "credentials": {"googleSheetsOAuth2Api": {"id": "SOLbth24hZWisXAv", "name": "Google Sheets account"}}, "typeVersion": 4.5}, {"id": "19907cba-4530-4f25-8a6f-435b1f8d23ad", "name": "Invoice Details", "type": "n8n-nodes-base.set", "position": [-780, 400], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "e145ed8c-cdea-4e5a-ba11-d8ce595dfb8d", "name": "output", "type": "object", "value": "={{ $json.text }}"}]}}, "typeVersion": 3.4}, {"id": "af95c024-8e36-499b-af32-4c661da49a61", "name": "Prepare Message", "type": "n8n-nodes-base.set", "position": [-540, 400], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "3e566101-2ad9-444b-8459-451ba6a91575", "name": "invoice_details.statement_date", "type": "string", "value": "={{ $json.output.invoice_details.statement_date }}"}, {"id": "57a466f6-d354-4864-98d3-ba4673afde98", "name": "invoice_details.organization", "type": "object", "value": "={{ $json.output.invoice_details.organization }}"}, {"id": "e1b22978-8114-4956-a5fc-3efbc43335a3", "name": "invoice_details.member", "type": "object", "value": "={{ $json.output.invoice_details.member }}"}, {"id": "e45a744c-0874-48b7-b59a-9d83aad27ff3", "name": "payment_details", "type": "object", "value": "={{ $json.output.payment_details }}"}, {"id": "c0335dc7-1b5c-41fc-b60a-bf45248c9f7f", "name": "invoice_summary", "type": "object", "value": "={{ $json.output.invoice_summary }}"}, {"id": "6c9ba3bf-37a6-4a8f-b97d-991f3ce6950f", "name": "summary", "type": "string", "value": "={{ $json.output.summary }}"}]}}, "typeVersion": 3.4}, {"id": "333f42a7-2665-4613-89c9-c184d764af37", "name": "Send Invoice Details as Telegram Message", "type": "n8n-nodes-base.telegram", "position": [-340, 400], "webhookId": "04464e72-2be3-4df9-8a08-18d23cb75d72", "parameters": {"text": "={{ $json.summary }}\\n--------\\n{{ $json.invoice_summary.toJsonString() }}", "chatId": "={{ $env.TELEGRAM_CHAT_ID }}", "additionalFields": {"parse_mode": "HTML", "appendAttribution": false}}, "credentials": {"telegramApi": {"id": "pAIFhguJlkO3c7aQ", "name": "Telegram account"}}, "typeVersion": 1.2}, {"id": "faa0768f-1d4c-42c4-902c-b2d0d40f0eb4", "name": "gpt-4o-mini3", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [-1080, 60], "parameters": {"model": "gpt-4o", "options": {}}, "credentials": {"openAiApi": {"id": "jEMSvKmtYfzAkhe6", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "d1a54284-60d1-4fac-b81b-4ed1610ddf2e", "name": "Send Error Message 2", "type": "n8n-nodes-base.telegram", "position": [-780, 600], "webhookId": "3ba1ee6d-1648-4421-823b-e68ae14d769b", "parameters": {"text": "=Error in workflow", "chatId": "={{ $env.TELEGRAM_CHAT_ID }}", "additionalFields": {"parse_mode": "HTML", "appendAttribution": false}}, "credentials": {"telegramApi": {"id": "pAIFhguJlkO3c7aQ", "name": "Telegram account"}}, "typeVersion": 1.2}, {"id": "b1b50042-8270-4e13-b7b1-6d017e9be8d9", "name": "Send Error Message 1", "type": "n8n-nodes-base.telegram", "position": [-780, 60], "webhookId": "3ba1ee6d-1648-4421-823b-e68ae14d769b", "parameters": {"text": "=Error in workflow", "chatId": "={{ $env.TELEGRAM_CHAT_ID }}", "additionalFields": {"parse_mode": "HTML", "appendAttribution": false}}, "credentials": {"telegramApi": {"id": "pAIFhguJlkO3c7aQ", "name": "Telegram account"}}, "typeVersion": 1.2}, {"id": "a365c8a1-c0fb-43f7-84fa-b68a0e9c087e", "name": "Send Document Summary as Telegram Message", "type": "n8n-nodes-base.telegram", "position": [-540, -200], "webhookId": "04464e72-2be3-4df9-8a08-18d23cb75d72", "parameters": {"text": "={{ $json.text }}", "chatId": "={{ $env.TELEGRAM_CHAT_ID }}", "additionalFields": {"parse_mode": "HTML", "appendAttribution": false}}, "credentials": {"telegramApi": {"id": "pAIFhguJlkO3c7aQ", "name": "Telegram account"}}, "typeVersion": 1.2}, {"id": "6abd00a0-2971-49f9-812f-f65a0004136b", "name": "Summarize Document", "type": "@n8n/n8n-nodes-langchain.chainLlm", "onError": "continueErrorOutput", "position": [-1180, -80], "parameters": {"text": "=Please analyze this document and provide:\\n\\n## Document Analysis\\n- A concise executive summary (2-3 sentences)\\n- Key themes and main points\\n- Notable findings or insights\\n- Data highlights and important statistics (if applicable)\\n\\n## Recommendations\\n- Action items or next steps\\n- Areas requiring further investigation\\n- Potential implications\\n\\n## Format Requirements\\n- Structure the analysis using clear headers and sections\\n- Include relevant quotes to support key points\\n- Present any numerical data in tables or bullet points\\n- Highlight critical information using bold text\\n\\nPlease maintain the original document's context while making the content more accessible and actionable.\\n\\nHere is the document: {{ $json.data }}\\n", "promptType": "define"}, "typeVersion": 1.5, "alwaysOutputData": true}, {"id": "e672bcf3-0d5f-4410-ac5b-660c3ba0c456", "name": "Classify Parsed Document", "type": "@n8n/n8n-nodes-langchain.textClassifier", "position": [-1680, 80], "parameters": {"options": {}, "inputText": "={{ $json.data }}", "categories": {"categories": [{"category": "not invoice", "description": "The document is not an invoice"}, {"category": "invoice", "description": "The document is an invoice"}]}}, "typeVersion": 1}, {"id": "cc522966-3e6a-4830-bde9-d4e251752ec0", "name": "Get Parsed Markdown", "type": "n8n-nodes-base.set", "position": [-1980, 80], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "55b5a755-eeaf-4ce7-b600-e6c864dc7e10", "name": "data", "type": "string", "value": "={{ $json.body.md }}"}]}}, "typeVersion": 3.4}, {"id": "683fa521-dfd0-4b1c-905f-d5a4f56ab65a", "name": "Prepare Data", "type": "n8n-nodes-base.set", "position": [-640, -1020], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "cee9e2d3-b311-4903-9867-e7d3d7ed2456", "name": "google_drive_fileid", "type": "string", "value": "={{ $json.id }}"}, {"id": "5c6eddf6-5a5e-4c51-87ed-8e3aabc2f65d", "name": "webViewLink", "type": "string", "value": "={{ $json.webViewLink }}"}]}}, "typeVersion": 3.4}, {"id": "b64a21ab-0e1f-4d6c-b718-a9aaaa27ae19", "name": "HTTP Request", "type": "n8n-nodes-base.httpRequest", "position": [-2040, -860], "parameters": {"url": "https://api.cloud.llamaindex.ai/api/parsing/supported_file_extensions", "options": {}}, "typeVersion": 4.2}, {"id": "cd0699cf-3a95-4dc8-806a-6a01339c598d", "name": "Is there an Email Attachement", "type": "n8n-nodes-base.if", "position": [-1420, -1260], "parameters": {"options": {}, "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"id": "460b82e5-30f5-4cb3-a937-a275fd256fcc", "operator": {"type": "object", "operation": "exists", "singleValue": true}, "leftValue": "={{ $input.item.binary }}", "rightValue": ""}]}}, "typeVersion": 2.2}, {"id": "269ba37f-fa18-4333-be3c-eee6ef5c0f56", "name": "Aggregate", "type": "n8n-nodes-base.aggregate", "position": [-1840, -860], "parameters": {"options": {}, "aggregate": "aggregateAllItemData", "destinationFieldName": "extensions"}, "typeVersion": 1}, {"id": "dffd2e83-58ff-49a0-b547-3b6f4b92dfa9", "name": "Edit Fields", "type": "n8n-nodes-base.set", "position": [-1620, -860], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "c9c59aae-b507-4493-a047-495bed344a5e", "name": "extension", "type": "string", "value": "=.{{ $('Is there an Email Attachement').item.binary.file0.fileExtension }}"}]}}, "typeVersion": 3.4}, {"id": "02a121a4-edea-45c4-b325-2f61b3d0b02e", "name": "Merge Email Processing", "type": "n8n-nodes-base.merge", "position": [-380, -1020], "parameters": {"mode": "combine", "options": {}, "combineBy": "combineByPosition", "numberInputs": 3}, "typeVersion": 3}, {"id": "c1310be3-6448-48d1-a954-caa3d4651075", "name": "Merge", "type": "n8n-nodes-base.merge", "position": [-1120, -1020], "parameters": {"mode": "combine", "options": {}, "combineBy": "combineAll"}, "typeVersion": 3}, {"id": "dbe3a235-0bae-4743-b53e-154b75911482", "name": "If Supported File Extensions", "type": "n8n-nodes-base.if", "position": [-1420, -860], "parameters": {"options": {}, "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"id": "f76cc5a7-6882-4e1f-86d5-99d5d9e90a34", "operator": {"type": "boolean", "operation": "true", "singleValue": true}, "leftValue": "={{ $('Aggregate').item.json.extensions.includes($json.extension)}}", "rightValue": ""}]}}, "typeVersion": 2.2}, {"id": "1413f84b-d1a9-4b0c-ae43-7f303a54527e", "name": "No Operation, do nothing", "type": "n8n-nodes-base.noOp", "position": [-1120, -1260], "parameters": {}, "typeVersion": 1}, {"id": "9f3ae287-cb8b-466c-8dbe-678be30c2c04", "name": "No Operation, do nothing1", "type": "n8n-nodes-base.noOp", "position": [-1120, -780], "parameters": {}, "typeVersion": 1}, {"id": "6f9b5ae2-22e8-4dc8-ba0b-06fbc585f209", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [-2140, -980], "parameters": {"width": 920, "height": 320, "content": "## Check for Supported File Extension\\nhttps://docs.cloud.llamaindex.ai/API/get-supported-file-extensions-api-v-1-parsing-supported-file-extensions-get"}, "typeVersion": 1}, {"id": "28c5c09a-9a15-4af9-8253-59ae36dfe390", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [-2140, -1420], "parameters": {"color": 3, "width": 920, "height": 400, "content": "## Get Emails with Attachments\\n### ☀️Disclaimer\\nThis workflow only processes the the first attachment of the email.\\nAdjust search and limit settings to suit your use case."}, "typeVersion": 1}, {"id": "3174a934-3b64-47b2-b81b-bfe717a034e2", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [-920, -1120], "parameters": {"color": 4, "width": 460, "height": 300, "content": "## Save Document to Google Drive"}, "typeVersion": 1}, {"id": "92f079d1-c5bd-45fe-9372-7ff521eda15b", "name": "Sticky Note4", "type": "n8n-nodes-base.stickyNote", "position": [-920, -780], "parameters": {"color": 5, "width": 460, "height": 380, "content": "## Summarize the Email Message"}, "typeVersion": 1}, {"id": "fd7d7e7a-005a-4a43-a3de-e9bb036bb615", "name": "Sticky Note5", "type": "n8n-nodes-base.stickyNote", "position": [-220, -1120], "parameters": {"color": 4, "width": 300, "height": 300, "content": "## Save To Google Sheets"}, "typeVersion": 1}, {"id": "c6469054-0345-4371-8928-21a04c21b131", "name": "Sticky Note9", "type": "n8n-nodes-base.stickyNote", "position": [-3060, -1540], "parameters": {"width": 540, "height": 1340, "content": "# Description\\n\\nThis workflow automates document processing using LlamaParse to extract and analyze text from various file formats. It intelligently processes documents, extracts structured data, and delivers actionable insights through multiple channels.\\n\\n## How It Works\\n\\n### Document Ingestion & Processing 📄\\n- Monitors Gmail for incoming attachments or accepts documents via webhook\\n- Validates file formats against supported LlamaParse extensions\\n- Uploads documents to LlamaParse for advanced text extraction\\n- Stores original documents in Google Drive for reference\\n\\n### Intelligent Document Analysis 🧠\\n- Automatically classifies document types (invoices, reports, etc.)\\n- Extracts structured data using customized AI prompts\\n- Generates comprehensive document summaries with key insights\\n- Converts unstructured text into organized JSON data\\n\\n### Invoice Processing Automation 💼\\n- Extracts critical invoice details (dates, amounts, line items)\\n- Organizes financial data into structured formats\\n- Calculates tax breakdowns, subtotals, and payment information\\n- Maintains detailed records for accounting purposes\\n\\n### Multi-Channel Delivery 📱\\n- Saves extracted data to Google Sheets for tracking and analysis\\n- Sends concise summaries via Telegram for immediate review\\n- Creates searchable document archives in Google Drive\\n- Updates spreadsheets with structured financial information\\n\\n## Setup Steps\\n\\n### Configure API Credentials 🔑\\n- Set up LlamaParse API connection\\n- Configure Gmail OAuth for email monitoring\\n- Set up Google Drive and Sheets integrations\\n- Add Telegram bot credentials for notifications\\n\\n### Customize AI Processing ⚙️\\n- Adjust document classification parameters\\n- Modify extraction templates for specific document types\\n- Fine-tune summary generation prompts\\n- Customize invoice data extraction schema\\n\\n### Test and Deploy 🚀\\n- Test with sample documents of various formats\\n- Verify data extraction accuracy\\n- Confirm notification delivery\\n- Monitor processing pipeline performance\\n\\n\\n"}, "typeVersion": 1}, {"id": "b2024905-5c3b-49d5-89b9-ef41c4a4283c", "name": "Sticky Note8", "type": "n8n-nodes-base.stickyNote", "position": [-2440, -1340], "parameters": {"color": 4, "width": 260, "height": 280, "content": "## 👍Try Me!"}, "typeVersion": 1}, {"id": "22284854-4005-4678-94f8-d914e031e6fc", "name": "Sticky Note6", "type": "n8n-nodes-base.stickyNote", "position": [-2480, -1540], "parameters": {"color": 7, "width": 2600, "height": 1180, "content": "# ✨🔪 Advanced AI Powered Document Parsing & Text Extraction with Llama Parse\\n"}, "typeVersion": 1}, {"id": "4f0c910e-7ae6-40ac-a659-c14a6704aaba", "name": "Sticky Note7", "type": "n8n-nodes-base.stickyNote", "position": [-1280, 280], "parameters": {"color": 6, "width": 1160, "height": 540, "content": "## Example Invoice Processing\\n"}, "typeVersion": 1}, {"id": "e63bbfe8-8be7-4e3f-a8f5-a85b2ee82959", "name": "Sticky Note10", "type": "n8n-nodes-base.stickyNote", "position": [-1220, 360], "parameters": {"width": 360, "height": 420, "content": "## Extract Invoice as JSON\\n☀️Update User & System Prompt for Your Specific Use Case"}, "typeVersion": 1}, {"id": "d321e139-0828-4932-b5a9-ef11f6ae9baa", "name": "Sticky Note11", "type": "n8n-nodes-base.stickyNote", "position": [-1280, -280], "parameters": {"color": 5, "width": 980, "height": 520, "content": "## Example Document Summarizing\\n"}, "typeVersion": 1}, {"id": "ab9081bd-c1c5-4db1-8dcd-ff243a7ab9be", "name": "Sticky Note12", "type": "n8n-nodes-base.stickyNote", "position": [-1220, -200], "parameters": {"width": 360, "height": 400, "content": "## Summarize Document\\n☀️Update User & System Prompt for Your Specific Use Case"}, "typeVersion": 1}, {"id": "c08bbfa8-abe1-47e2-babe-b62581bcd011", "name": "Sticky Note13", "type": "n8n-nodes-base.stickyNote", "position": [-1760, -40], "parameters": {"color": 4, "width": 440, "height": 420, "content": "## Classify Parsed Document\\nAdd More Classifications as Required"}, "typeVersion": 1}, {"id": "5ffb907f-9701-401e-85e8-3b91a706ab10", "name": "Sticky Note14", "type": "n8n-nodes-base.stickyNote", "position": [-2060, -40], "parameters": {"color": 3, "width": 260, "height": 320, "content": "## Parsed Markdown from LlamaParse"}, "typeVersion": 1}, {"id": "a53034d2-34df-421a-aa14-d9d1bbc00fc5", "name": "Sticky Note15", "type": "n8n-nodes-base.stickyNote", "position": [-2440, -40], "parameters": {"width": 340, "height": 320, "content": "## Receive Parsed Document from LlamaParse"}, "typeVersion": 1}, {"id": "933f03f2-c231-4dcd-8aeb-ce716b8cc00e", "name": "Sticky Note16", "type": "n8n-nodes-base.stickyNote", "position": [-2480, -320], "parameters": {"color": 7, "width": 2400, "height": 1180, "content": "# 🪝Webhook to Receive LlamaParse Response"}, "typeVersion": 1}, {"id": "505a51e4-dea1-4876-964e-f59af728c65b", "name": "Sticky Note17", "type": "n8n-nodes-base.stickyNote", "position": [-1760, 420], "parameters": {"color": 5, "width": 440, "height": 400, "content": "## Save Parsed Document to Google Drive"}, "typeVersion": 1}, {"id": "33ca5eaf-30da-4360-a12b-a7dd8614743f", "name": "Save Summarized Document to Google Drive", "type": "n8n-nodes-base.googleDrive", "position": [-540, 0], "parameters": {"name": "={{ $('Webhook').item.json.body.jobId }}-summary.md", "content": "={{ $json.text }}", "driveId": {"__rl": true, "mode": "list", "value": "My Drive"}, "options": {}, "folderId": {"__rl": true, "mode": "list", "value": "root", "cachedResultUrl": "https://drive.google.com/drive", "cachedResultName": "/ (Root folder)"}, "operation": "createFromText"}, "credentials": {"googleDriveOAuth2Api": {"id": "UhdXGYLTAJbsa0xX", "name": "Google Drive account"}}, "typeVersion": 3}, {"id": "a1e8264f-fa99-49a5-a837-6aaf3a2dc39a", "name": "Save Parsed Document to Google Drive", "type": "n8n-nodes-base.googleDrive", "position": [-1600, 560], "parameters": {"name": "={{ $('Webhook').item.json.body.jobId }}-parsed.md", "content": "={{ $json.data }}", "driveId": {"__rl": true, "mode": "list", "value": "My Drive"}, "options": {}, "folderId": {"__rl": true, "mode": "list", "value": "root", "cachedResultUrl": "https://drive.google.com/drive", "cachedResultName": "/ (Root folder)"}, "operation": "createFromText"}, "credentials": {"googleDriveOAuth2Api": {"id": "UhdXGYLTAJbsa0xX", "name": "Google Drive account"}}, "typeVersion": 3}], "active": true, "pinData": {}, "settings": {"timezone": "America/Vancouver", "callerPolicy": "workflowsFromSameOwner", "executionOrder": "v1"}, "versionId": "c11e3a8a-499b-4b1e-b919-ffbed36ba898", "connections": {"Gmail": {"main": [[{"node": "Limit", "type": "main", "index": 0}]]}, "Limit": {"main": [[{"node": "Get Message", "type": "main", "index": 0}]]}, "Merge": {"main": [[{"node": "Parse Document with LlamaParse", "type": "main", "index": 0}, {"node": "Save Document to Google Drive", "type": "main", "index": 0}, {"node": "Summarize Email", "type": "main", "index": 0}]]}, "Webhook": {"main": [[{"node": "Get Parsed Markdown", "type": "main", "index": 0}]]}, "Aggregate": {"main": [[{"node": "Edit Fields", "type": "main", "index": 0}]]}, "Edit Fields": {"main": [[{"node": "If Supported File Extensions", "type": "main", "index": 0}]]}, "Get Message": {"main": [[{"node": "Is there an Email Attachement", "type": "main", "index": 0}]]}, "gpt-4o-mini": {"ai_languageModel": [[{"node": "Summarize Email", "type": "ai_languageModel", "index": 0}]]}, "HTTP Request": {"main": [[{"node": "Aggregate", "type": "main", "index": 0}]]}, "Prepare Data": {"main": [[{"node": "Merge Email Processing", "type": "main", "index": 1}]]}, "gpt-4o-mini1": {"ai_languageModel": [[{"node": "Classify Parsed Document", "type": "ai_languageModel", "index": 0}]]}, "gpt-4o-mini2": {"ai_languageModel": [[{"node": "Extract Invoice Details as JSON", "type": "ai_languageModel", "index": 0}]]}, "gpt-4o-mini3": {"ai_languageModel": [[{"node": "Summarize Document", "type": "ai_languageModel", "index": 0}]]}, "Gmail Trigger": {"main": [[{"node": "Gmail", "type": "main", "index": 0}]]}, "Invoice Details": {"main": [[{"node": "Prepare Message", "type": "main", "index": 0}, {"node": "Update Google Sheet by LlamaParse ID", "type": "main", "index": 0}]]}, "Prepare Message": {"main": [[{"node": "Send Invoice Details as Telegram Message", "type": "main", "index": 0}]]}, "Summarize Email": {"main": [[{"node": "Merge Email Processing", "type": "main", "index": 2}]]}, "Summarize Document": {"main": [[{"node": "Send Document Summary as Telegram Message", "type": "main", "index": 0}, {"node": "Save Summarized Document to Google Drive", "type": "main", "index": 0}], [{"node": "Send Error Message 1", "type": "main", "index": 0}]]}, "Get Parsed Markdown": {"main": [[{"node": "Classify Parsed Document", "type": "main", "index": 0}, {"node": "Save Parsed Document to Google Drive", "type": "main", "index": 0}]]}, "Merge Email Processing": {"main": [[{"node": "Save LlamaParse ID and Summary to Google Sheets", "type": "main", "index": 0}]]}, "Classify Parsed Document": {"main": [[{"node": "Summarize Document", "type": "main", "index": 0}], [{"node": "Extract Invoice Details as JSON", "type": "main", "index": 0}]]}, "If Supported File Extensions": {"main": [[{"node": "Merge", "type": "main", "index": 1}], [{"node": "No Operation, do nothing1", "type": "main", "index": 0}]]}, "Is there an Email Attachement": {"main": [[{"node": "HTTP Request", "type": "main", "index": 0}, {"node": "Merge", "type": "main", "index": 0}], [{"node": "No Operation, do nothing", "type": "main", "index": 0}]]}, "Save Document to Google Drive": {"main": [[{"node": "Prepare Data", "type": "main", "index": 0}]]}, "Parse Document with LlamaParse": {"main": [[{"node": "Merge Email Processing", "type": "main", "index": 0}]]}, "Extract Invoice Details as JSON": {"main": [[{"node": "Invoice Details", "type": "main", "index": 0}], [{"node": "Send Error Message 2", "type": "main", "index": 0}]]}, "Save LlamaParse ID and Summary to Google Sheets": {"main": [[]]}}}}	2025-10-12 15:07:48.112177
1447	3004	48	24	[]	full	f	{"id": 3004, "name": "🚀 TikTok Video Automation Tool ✨ – Highly Optimized with OpenAI & Replicate", "workflow": {"id": "6QxEQIF2zsTSNCIU", "meta": {"instanceId": "b2c6727f02106e7324192d5dfa251f5dd42759bfd0d7e1602a3ab09f0fcd3b61", "templateCredsSetupCompleted": true}, "name": "TikTok Video Automation Tool", "tags": [{"id": "JewU78VDH9dyL0uf", "name": "TikTok", "createdAt": "2025-02-22T17:47:23.655Z", "updatedAt": "2025-02-22T17:47:23.655Z"}, {"id": "Kw3fvInVHYxv6hGv", "name": "Automation", "createdAt": "2025-02-19T00:27:37.457Z", "updatedAt": "2025-02-19T00:27:37.457Z"}, {"id": "wKmj0lewEas67M0s", "name": "Marketing", "createdAt": "2025-02-19T00:27:35.090Z", "updatedAt": "2025-02-19T00:27:35.090Z"}], "nodes": [{"id": "932cf1c7-031b-4e88-aa95-226801fe8dbe", "name": "Script Generator", "type": "n8n-nodes-base.httpRequest", "position": [1520, 0], "parameters": {}, "typeVersion": 4.2}, {"id": "5f6bb660-3c9f-499a-9fcb-b486dffe4afa", "name": "Split Out", "type": "n8n-nodes-base.splitOut", "position": [1960, 0], "parameters": {}, "typeVersion": 1}, {"id": "63e35818-2c68-4932-b3fd-9f9ddf996c4a", "name": "Image Prompter", "type": "@n8n/n8n-nodes-langchain.openAi", "position": [2180, 0], "parameters": {}, "typeVersion": 1.8}, {"id": "45227926-15b9-43eb-8f86-10944c731bd9", "name": "Request Image", "type": "n8n-nodes-base.httpRequest", "position": [2580, 0], "parameters": {}, "typeVersion": 4.2}, {"id": "3cdbd02f-28e4-4475-90d1-4411a32d5bf4", "name": "Get Image", "type": "n8n-nodes-base.httpRequest", "position": [3020, 0], "parameters": {}, "typeVersion": 4.2}, {"id": "2e7220fa-fc60-451c-a7cd-bb246bd2b36d", "name": "Request Video", "type": "n8n-nodes-base.httpRequest", "position": [3240, 0], "parameters": {}, "typeVersion": 4.2}, {"id": "55c9766d-79c2-4591-84ea-204c2f49744a", "name": "Wait For Video", "type": "n8n-nodes-base.wait", "position": [3540, 0], "webhookId": "a89c4290-16ac-4905-a500-143abee2dd8d", "parameters": {}, "typeVersion": 1.1}, {"id": "8f9b74ff-28b4-4e11-89f3-5aad69eb099f", "name": "Get Video", "type": "n8n-nodes-base.httpRequest", "position": [3780, 0], "parameters": {}, "typeVersion": 4.2}, {"id": "7d614451-fdbd-426f-8a92-e2c6b8e11437", "name": "Upload to Cloudinary", "type": "n8n-nodes-base.httpRequest", "position": [1640, 440], "parameters": {}, "typeVersion": 4.2}, {"id": "bda76604-ce4f-4988-a447-5d0049fc0e20", "name": "Merge", "type": "n8n-nodes-base.merge", "position": [4300, 420], "parameters": {}, "typeVersion": 3}, {"id": "b167ef64-6cb9-4d77-ac02-1116d5314405", "name": "Aggregate", "type": "n8n-nodes-base.aggregate", "position": [4000, 0], "parameters": {}, "typeVersion": 1}, {"id": "c9b35b9f-687d-42bf-9909-8aa6e29d6acc", "name": "Create Editor JSON", "type": "n8n-nodes-base.httpRequest", "position": [4560, 420], "parameters": {}, "typeVersion": 4.2}, {"id": "74fe0781-8ed9-4884-be8f-032d0f161870", "name": "Set JSON Variable", "type": "n8n-nodes-base.set", "position": [4800, 420], "parameters": {}, "typeVersion": 3.4}, {"id": "2da91d88-a4ec-48a7-9288-3bca06d38708", "name": "Editor", "type": "n8n-nodes-base.httpRequest", "position": [5020, 420], "parameters": {}, "typeVersion": 4.2}, {"id": "d44173d4-195b-493f-bf74-56a226d6d28a", "name": "Rendering", "type": "n8n-nodes-base.wait", "position": [5240, 420], "webhookId": "9341b14b-9871-4037-8e5c-f9bdc23960ef", "parameters": {}, "typeVersion": 1.1}, {"id": "eaa68f53-8725-4cad-95ed-ff09220dc598", "name": "Get Final Video", "type": "n8n-nodes-base.httpRequest", "position": [5460, 420], "parameters": {}, "typeVersion": 4.2}, {"id": "4bfaa122-a109-417e-a23f-5227ec7484ab", "name": "Script Organizer", "type": "n8n-nodes-base.set", "position": [1300, 0], "parameters": {}, "typeVersion": 3.4}, {"id": "590af7e7-db4f-4b7a-8dea-a58799683f0c", "name": "Script Prompter", "type": "@n8n/n8n-nodes-langchain.openAi", "position": [940, 0], "parameters": {}, "typeVersion": 1.8}, {"id": "718dc7b3-41b8-4e15-81ce-b13db05ba63d", "name": "Wait For Image", "type": "n8n-nodes-base.wait", "position": [2800, 0], "webhookId": "94a63a56-1b6a-4c3b-9127-401f7105bb5d", "parameters": {}, "typeVersion": 1.1}, {"id": "693fb239-221d-44fd-9e02-e33ff16cf783", "name": "Outliner", "type": "n8n-nodes-base.httpRequest", "position": [1740, 0], "parameters": {}, "typeVersion": 4.2}, {"id": "6ade9569-d7c7-474f-a1c8-646b71b417a6", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [280, -940], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "5269b47f-ccdf-41aa-bc9f-6adad6eeda91", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [6540, 400], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "0c51f6cd-8530-47bd-8da2-4d0d09f8d286", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [160, -40], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "b6f91b35-99bd-477c-8887-c309a5a52a41", "name": "On form submission", "type": "n8n-nodes-base.formTrigger", "position": [740, 0], "webhookId": "68633130-d8cc-46a3-97a8-0ff6f14dab09", "parameters": {}, "typeVersion": 2.2}, {"id": "a6824a22-8e89-4ddb-bc2b-373b4dd55cb3", "name": "WhatsApp Trigger", "type": "n8n-nodes-base.whatsAppTrigger", "position": [740, 280], "webhookId": "95ecfb5c-2b4b-47ce-8d43-0f67212d6b6c", "parameters": {}, "typeVersion": 1}, {"id": "b9f88b79-73b5-4d31-a9a3-0c0838bbcff3", "name": "Choose Output", "type": "n8n-nodes-base.switch", "position": [5900, 380], "parameters": {}, "typeVersion": 3.2}, {"id": "a1339b4c-1b7a-4c6a-8785-9bc2db693bf6", "name": "WhatsApp Send Form", "type": "n8n-nodes-base.whatsApp", "position": [940, 280], "parameters": {}, "typeVersion": 1}, {"id": "fe799300-0aed-49e8-93ed-bee8ceac3e0c", "name": "Send To Gmail", "type": "n8n-nodes-base.gmail", "position": [6220, 100], "webhookId": "cdb69ec4-845b-4355-838b-6bf2b96d8591", "parameters": {}, "typeVersion": 2.1}, {"id": "5107a7cb-6a46-422b-8963-aed357a44fb6", "name": "Send To Outlook", "type": "n8n-nodes-base.microsoftOutlook", "position": [6220, 260], "webhookId": "3ef9cc36-4a39-4b3b-8f4f-b35505fa47ac", "parameters": {}, "typeVersion": 2}, {"id": "dc524ab5-deeb-43b9-aa99-25187b9d59a8", "name": "Upload Directly To TikTok", "type": "n8n-nodes-base.httpRequest", "position": [6220, 740], "parameters": {}, "typeVersion": 4.2}, {"id": "1db9e700-7c84-4ded-b98b-bb8683306626", "name": "Send To WhatsApp", "type": "n8n-nodes-base.whatsApp", "position": [6220, 420], "parameters": {}, "typeVersion": 1}, {"id": "5ff2a4c4-bfd5-4bb3-b7e2-81762ed83952", "name": "Sticky Note4", "type": "n8n-nodes-base.stickyNote", "position": [2540, -340], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "8264727e-4ea9-4939-b965-a5e56a8d5420", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [5820, 0], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "49712709-ea11-4953-b083-0e746773544b", "name": "Sticky Note7", "type": "n8n-nodes-base.stickyNote", "position": [4260, 320], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "26154250-750f-4f80-af48-42f884f1b024", "name": "Sticky Note8", "type": "n8n-nodes-base.stickyNote", "position": [2160, -460], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "c67e511f-7d0c-4fef-bc28-70e4268fd52d", "name": "Sticky Note5", "type": "n8n-nodes-base.stickyNote", "position": [3200, -340], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "75a03c3f-d9be-43cb-8f02-63c9f27fc205", "name": "Sticky Note9", "type": "n8n-nodes-base.stickyNote", "position": [1160, -340], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "cdd2032b-b560-4504-a77d-0448630288f6", "name": "Telegram Trigger", "type": "n8n-nodes-base.telegramTrigger", "position": [740, 580], "webhookId": "318e37a9-a91d-4c5c-b728-c6765b6c6ccb", "parameters": {}, "typeVersion": 1.1}, {"id": "9f29e6d1-6d81-4590-a155-422425bde154", "name": "Telegram Send Form", "type": "n8n-nodes-base.telegram", "position": [940, 580], "webhookId": "401f3ba6-ebb1-4460-b0a8-e5c5e38208c4", "parameters": {}, "typeVersion": 1.2}, {"id": "ef563536-fa63-4e66-b9b4-e7eab65b8071", "name": "Sticky Note6", "type": "n8n-nodes-base.stickyNote", "position": [240, 420], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "b80c89db-94fa-4f3b-8a97-d82719c68661", "name": "Sticky Note10", "type": "n8n-nodes-base.stickyNote", "position": [1700, -460], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "f0033ca1-0e11-4e2c-9d9b-9033bc637d1c", "name": "Sticky Note11", "type": "n8n-nodes-base.stickyNote", "position": [920, -460], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "71d9ca5f-7bed-4f03-b563-8d4b472f82d4", "name": "Sticky Note12", "type": "n8n-nodes-base.stickyNote", "position": [1500, 300], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "fd13bf2b-3d06-4dcf-9e2a-9027d539d9e8", "name": "Sticky Note13", "type": "n8n-nodes-base.stickyNote", "position": [600, -120], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "10349a8b-affc-4c2b-a0b2-63a32253e129", "name": "Sticky Note14", "type": "n8n-nodes-base.stickyNote", "position": [4760, 140], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "e33c9625-4ddf-4b46-9dc8-a88bafecaaae", "name": "Sticky Note15", "type": "n8n-nodes-base.stickyNote", "position": [2180, -340], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "b47ebddc-61e7-4f4c-8558-68273bf7ec55", "name": "Telegram", "type": "n8n-nodes-base.telegram", "position": [6220, 580], "webhookId": "cfef6ef4-da3f-4d57-bf93-77697b5fdb39", "parameters": {}, "typeVersion": 1.2}, {"id": "9e1da8b8-a47a-4376-902d-ff1aac912a3d", "name": "Sticky Note16", "type": "n8n-nodes-base.stickyNote", "position": [-160, -640], "parameters": {"content": ""}, "typeVersion": 1}], "active": false, "pinData": {}, "settings": {"executionOrder": "v1"}, "versionId": "50f1402d-609f-450d-b571-f366bd5574cb", "connections": {"Merge": {"main": [[{"node": "Create Editor JSON", "type": "main", "index": 0}]]}, "Editor": {"main": [[{"node": "Rendering", "type": "main", "index": 0}]]}, "Outliner": {"main": [[{"node": "Split Out", "type": "main", "index": 0}]]}, "Aggregate": {"main": [[{"node": "Merge", "type": "main", "index": 0}]]}, "Get Image": {"main": [[{"node": "Request Video", "type": "main", "index": 0}]]}, "Get Video": {"main": [[{"node": "Aggregate", "type": "main", "index": 0}]]}, "Rendering": {"main": [[{"node": "Get Final Video", "type": "main", "index": 0}]]}, "Split Out": {"main": [[{"node": "Image Prompter", "type": "main", "index": 0}]]}, "Choose Output": {"main": [[{"node": "Send To Gmail", "type": "main", "index": 0}], [{"node": "Send To Outlook", "type": "main", "index": 0}], [{"node": "Send To WhatsApp", "type": "main", "index": 0}], [{"node": "Telegram", "type": "main", "index": 0}], [{"node": "Upload Directly To TikTok", "type": "main", "index": 0}]]}, "Request Image": {"main": [[{"node": "Wait For Image", "type": "main", "index": 0}]]}, "Request Video": {"main": [[{"node": "Wait For Video", "type": "main", "index": 0}]]}, "Image Prompter": {"main": [[{"node": "Request Image", "type": "main", "index": 0}]]}, "Wait For Image": {"main": [[{"node": "Get Image", "type": "main", "index": 0}]]}, "Wait For Video": {"main": [[{"node": "Get Video", "type": "main", "index": 0}]]}, "Get Final Video": {"main": [[{"node": "Choose Output", "type": "main", "index": 0}]]}, "Script Prompter": {"main": [[{"node": "Script Organizer", "type": "main", "index": 0}]]}, "Script Generator": {"main": [[{"node": "Outliner", "type": "main", "index": 0}, {"node": "Upload to Cloudinary", "type": "main", "index": 0}]]}, "Script Organizer": {"main": [[{"node": "Script Generator", "type": "main", "index": 0}]]}, "Telegram Trigger": {"main": [[{"node": "Telegram Send Form", "type": "main", "index": 0}]]}, "WhatsApp Trigger": {"main": [[{"node": "WhatsApp Send Form", "type": "main", "index": 0}]]}, "Set JSON Variable": {"main": [[{"node": "Editor", "type": "main", "index": 0}]]}, "Create Editor JSON": {"main": [[{"node": "Set JSON Variable", "type": "main", "index": 0}]]}, "On form submission": {"main": [[{"node": "Script Prompter", "type": "main", "index": 0}]]}, "Upload to Cloudinary": {"main": [[{"node": "Merge", "type": "main", "index": 1}]]}}}}	2025-10-12 15:07:48.112177
1448	3010	27	16	[]	full	f	{"id": 3010, "name": "📄✨ Easy WordPress Content Creation from PDF Docs + Human in the Loop Gmail", "workflow": {"id": "fSG22q8TeUtsGUGD", "meta": {"instanceId": "31e69f7f4a77bf465b805824e303232f0227212ae922d12133a0f96ffeab4fef", "templateCredsSetupCompleted": true}, "name": "📄✨ Easy Wordpress Content Creation from PDF Document + Human In The Loop with Gmail Approval", "tags": [], "nodes": [{"id": "77d8c73c-1cdd-4795-841c-29c3b85040e0", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [1140, -860], "parameters": {"color": 4, "width": 461, "height": 319, "content": "## Upload PDF and Extract Text"}, "typeVersion": 1}, {"id": "62dc4474-1803-4b6e-8fe5-530e9baf80f7", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [1640, -860], "parameters": {"color": 5, "width": 649, "height": 452, "content": "## Create Blog Post"}, "typeVersion": 1}, {"id": "b8da4206-f1b5-4a8f-b056-70c7558c825d", "name": "Upload PDF", "type": "n8n-nodes-base.formTrigger", "position": [1220, -760], "webhookId": "6c4a4180-7206-469f-a645-f41824ccbf42", "parameters": {"path": "pdf", "options": {}, "formTitle": "PDF2Blog", "formFields": {"values": [{"fieldType": "file", "fieldLabel": "Upload PDF File", "multipleFiles": false, "requiredField": true, "acceptFileTypes": ".pdf"}]}, "formDescription": "Transform PDFs into captivating blog posts"}, "typeVersion": 2.1}, {"id": "ef70bbe2-d66c-4c91-96cf-2d0500522e70", "name": "Extract Text", "type": "n8n-nodes-base.extractFromFile", "position": [1420, -760], "parameters": {"options": {}, "operation": "pdf", "binaryPropertyName": "Upload_PDF_File"}, "typeVersion": 1}, {"id": "5de90f20-e0b3-4098-b5ae-c3bf5d724fcc", "name": "gpt-4o-mini", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [1840, -600], "parameters": {"options": {"responseFormat": "text"}}, "credentials": {"openAiApi": {"id": "jEMSvKmtYfzAkhe6", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "b6e33883-a13f-4bc8-bedc-18d93294ae75", "name": "pollinations.ai", "type": "n8n-nodes-base.httpRequest", "position": [1520, 300], "parameters": {"url": "=https://image.pollinations.ai/prompt/{{ $('Get Blog Post').item.json.title }} and avoid adding text and keep the image vibrant.", "options": {}}, "typeVersion": 4.2}, {"id": "d928d841-8098-406e-ad66-cf7ca653a2c4", "name": "Create Wordpress Post", "type": "n8n-nodes-base.wordpress", "onError": "continueRegularOutput", "position": [1220, 300], "parameters": {"title": "={{ $('Get Blog Post').item.json.title }}", "additionalFields": {"status": "draft", "content": "={{ $('Get Blog Post').item.json.content }}"}}, "credentials": {"wordpressApi": {"id": "cOkzd5eeOiHaOXI2", "name": "Wordpress account"}}, "typeVersion": 1, "alwaysOutputData": true}, {"id": "350cf732-037b-4e60-820e-4e38aecf7e57", "name": "Upload Image to Wordpress", "type": "n8n-nodes-base.httpRequest", "onError": "continueRegularOutput", "position": [1880, 120], "parameters": {"url": "https://[YOUR-WORDPRESS-SITE.com]/wp-json/wp/v2/media", "method": "POST", "options": {}, "sendBody": true, "contentType": "binaryData", "sendHeaders": true, "authentication": "predefinedCredentialType", "headerParameters": {"parameters": [{"name": "Content-Disposition", "value": "=attachment; filename=\\"cover-image-{{ $('Create Wordpress Post').item.json.id }}.jpeg\\""}]}, "inputDataFieldName": "data", "nodeCredentialType": "wordpressApi"}, "credentials": {"wordpressApi": {"id": "cOkzd5eeOiHaOXI2", "name": "Wordpress account"}}, "typeVersion": 4.2, "alwaysOutputData": true}, {"id": "0f85ff07-13fb-40d5-8eee-7946f7064874", "name": "Set Image on Wordpress Post", "type": "n8n-nodes-base.httpRequest", "onError": "continueRegularOutput", "position": [2100, 120], "parameters": {"url": "=https:/[YOUR-WORDPRESS-SITE.com]/wp-json/wp/v2/posts/{{ $('Create Wordpress Post').item.json.id }}", "method": "POST", "options": {}, "sendQuery": true, "authentication": "predefinedCredentialType", "queryParameters": {"parameters": [{"name": "featured_media", "value": "={{ $json.id }}"}]}, "nodeCredentialType": "wordpressApi"}, "credentials": {"wordpressApi": {"id": "cOkzd5eeOiHaOXI2", "name": "Wordpress account"}}, "typeVersion": 4.2, "alwaysOutputData": true}, {"id": "3bdc1e66-251f-4904-bbc2-dd4e667a4b40", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [1140, 40], "parameters": {"color": 6, "width": 1146, "height": 521, "content": "## Create Wordpress Post and Add New Image\\nhttps://docs.n8n.io/integrations/builtin/credentials/wordpress/"}, "typeVersion": 1}, {"id": "9d54b59e-5bf3-429b-856a-c3c1dcb25885", "name": "Sticky Note4", "type": "n8n-nodes-base.stickyNote", "position": [1420, 140], "parameters": {"color": 7, "width": 300, "height": 340, "content": "## Create Post Image\\nhttps://pollinations.ai/\\nhttps://image.pollinations.ai/prompt/[your image description]"}, "typeVersion": 1}, {"id": "957b63d2-68af-4c44-b145-3460ed9ea0fc", "name": "Send Error Message", "type": "n8n-nodes-base.telegram", "position": [1420, -240], "webhookId": "382a3b43-b83f-47b1-a276-67c6b98a441a", "parameters": {"text": "=Error Creating Blog Post", "chatId": "={{ $env.TELEGRAM_CHAT_ID }}", "additionalFields": {"appendAttribution": false}}, "credentials": {"telegramApi": {"id": "pAIFhguJlkO3c7aQ", "name": "Telegram account"}}, "typeVersion": 1.2}, {"id": "ef768593-053c-4a65-8eb9-b489cb115d2b", "name": "Is there Title & Content?", "type": "n8n-nodes-base.if", "position": [1220, -400], "parameters": {"options": {}, "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"id": "aaf83c73-65f3-4a88-87f3-25b1acaf93ef", "operator": {"type": "string", "operation": "notEmpty", "singleValue": true}, "leftValue": "={{ $json.title }}", "rightValue": ""}, {"id": "d9af5bce-f0fb-4c20-8b6a-b01a3bf3e1d1", "operator": {"type": "string", "operation": "notEmpty", "singleValue": true}, "leftValue": "={{ $json.content }}", "rightValue": ""}]}}, "typeVersion": 2.2}, {"id": "a6c70ec0-2809-4c38-a2dd-a16e0b44f23e", "name": "Merge", "type": "n8n-nodes-base.merge", "position": [2380, 280], "parameters": {"mode": "combine", "options": {}, "combineBy": "combineByPosition"}, "typeVersion": 3}, {"id": "2562ab36-2fba-424e-8128-387591d2077e", "name": "Markdown", "type": "n8n-nodes-base.markdown", "position": [2380, 80], "parameters": {"html": "={{ $('Get Blog Post').item.json.content }}", "options": {}, "destinationKey": "markdown"}, "typeVersion": 1}, {"id": "1739fe6e-4c0e-45b0-b368-6aab5dd79db9", "name": "Human In The Loop Approve Blog Post", "type": "n8n-nodes-base.gmail", "position": [1780, -240], "webhookId": "48f44283-5f68-4d7a-a2d2-a42209d35032", "parameters": {"sendTo": "joe@example.com", "message": "={{ $json.content }}", "options": {"limitWaitTime": {"values": {"resumeUnit": "minutes", "resumeAmount": 45}}}, "subject": "=Approval Required for \\"{{ $json.title }}\\"", "operation": "sendAndWait", "approvalOptions": {"values": {"approvalType": "double"}}}, "credentials": {"gmailOAuth2": {"id": "1xpVDEQ1yx8gV022", "name": "Gmail account"}}, "typeVersion": 2.1}, {"id": "ae015937-dffb-4445-a013-b22442850de7", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [1640, -360], "parameters": {"color": 4, "width": 400, "height": 340, "content": "## 💫🤩 New - Human In The Loop"}, "typeVersion": 1}, {"id": "aafee6b1-0273-429a-9002-e0406be6c281", "name": "Is Approved?", "type": "n8n-nodes-base.if", "position": [2080, -240], "parameters": {"options": {}, "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"id": "316594d7-7ff6-4e39-bea3-45a11b9e750f", "operator": {"type": "boolean", "operation": "true", "singleValue": true}, "leftValue": "={{ $json.data.approved }}", "rightValue": ""}]}}, "typeVersion": 2.2}, {"id": "d7aa4ec8-e936-4e05-b94a-da42f6852591", "name": "Gmail Final Blog", "type": "n8n-nodes-base.gmail", "position": [2640, 280], "webhookId": "07692f3b-4e21-42d3-92dd-3dce5df3112f", "parameters": {"sendTo": "joe@example.com", "message": "={{ $('Get Blog Post').item.json.content }}", "options": {}, "subject": "={{ $('Get Blog Post').item.json.title }}"}, "credentials": {"gmailOAuth2": {"id": "1xpVDEQ1yx8gV022", "name": "Gmail account"}}, "typeVersion": 2.1}, {"id": "cefad6b9-b061-4363-8221-34e15e262d00", "name": "Telegram Partial Blog", "type": "n8n-nodes-base.telegram", "position": [2640, 80], "webhookId": "77e3b2c9-79b7-4aa1-aa62-24da144c5f45", "parameters": {"chatId": "={{ $env.TELEGRAM_CHAT_ID }}", "operation": "sendPhoto", "binaryData": true, "additionalFields": {"caption": "={{ $json.markdown.slice(0,400) }} ..."}}, "credentials": {"telegramApi": {"id": "pAIFhguJlkO3c7aQ", "name": "Telegram account"}}, "typeVersion": 1.2}, {"id": "503ab66d-6924-4be4-8275-3bfa3b3bf69f", "name": "Sticky Note5", "type": "n8n-nodes-base.stickyNote", "position": [420, -860], "parameters": {"color": 7, "width": 680, "height": 1420, "content": "## 🎯 Description\\n\\nThis n8n workflow automates the process of transforming PDF documents into engaging, SEO-friendly WordPress blog posts. It incorporates AI-powered text analysis, automatic image generation, and a human review step to ensure quality before publishing.\\n\\n## 🚀 How It Works\\n\\n### 🗂️ PDF Upload & Text Extraction  \\n- Users upload a PDF document through a form trigger.  \\n- The workflow extracts text from the uploaded file, ensuring compatibility with supported formats.\\n\\n### 🤖 AI-Powered Blog Post Generation  \\n- The extracted text is analyzed by an AI model (GPT-based) to create a structured blog post.  \\n- The AI generates:  \\n  - A captivating SEO-friendly title.  \\n  - Well-formatted HTML content, including an introduction, chapters with subheadings, and a conclusion.\\n\\n### 🎨 Image Creation & Integration  \\n- An image is generated using **Pollinations.ai** based on the blog post title.  \\n- The vibrant image is uploaded to WordPress and set as the featured image for the post.\\n\\n### 📝 WordPress Draft Creation  \\n- A draft blog post is created on WordPress with the AI-generated title, content, and featured image.  \\n\\n### ✅ Human-in-the-Loop Approval  \\n- The draft content is sent via Gmail to a reviewer for manual approval.  \\n- If approved, the post is published on WordPress. If not, an error message is sent for troubleshooting.\\n\\n### 📢 Multi-Channel Notifications  \\n- Once published, notifications are sent via Gmail and Telegram to relevant stakeholders.  \\n\\n## 🔧 Setup Steps\\n\\n### 🔑 Configure API Credentials  \\n1. Set up API connections for:  \\n   - OpenAI (for AI content generation).  \\n   - WordPress (for post creation and media uploads).  \\n   - Gmail (for sending approval emails).  \\n   - Telegram (for notifications).  \\n\\n### ⚙️ Customize Workflow Parameters  \\n2. Adjust the AI prompt to match your desired blog structure and tone.  \\n3. Modify the image generation parameters to align with your branding needs.\\n\\n### 🧪 Test & Deploy  \\n3. Test the workflow with sample PDFs to ensure:  \\n   - Accurate text extraction.  \\n   - Proper formatting of generated content.  \\n   - Seamless approval and publishing processes.  \\n\\n\\nThis workflow streamlines content creation while maintaining quality control through human oversight, making it an ideal solution for efficient blog management! 🎉\\n"}, "typeVersion": 1}, {"id": "8ea57c7f-256b-4a89-b62f-3a6390fec719", "name": "Sticky Note6", "type": "n8n-nodes-base.stickyNote", "position": [360, -960], "parameters": {"width": 2520, "height": 1700, "content": "# 📄✨ Easy WordPress Content Creation from PDF Document + Human in the Loop with Gmail Approval"}, "typeVersion": 1}, {"id": "8cf6bd65-b025-45df-b556-a5fac970aa9b", "name": "Get Blog Post", "type": "n8n-nodes-base.code", "position": [2080, -760], "parameters": {"jsCode": "// Get the HTML content from the previous node\\nconst htmlContent = $input.first().json.text;\\n\\n// Use regex to extract the text between the first h1 tags\\nconst titleRegex = /<h1>(.*?)<\\\\/h1>/s;\\nconst match = htmlContent.match(titleRegex);\\n\\n// Extract the title or set to empty string if not found\\nconst title = match ? match[1] : '';\\n\\n// Return the extracted title\\nreturn [{\\n  json: {\\n    title: title,\\n    content: htmlContent\\n  }\\n}];"}, "typeVersion": 2}, {"id": "5e221628-d3b1-4242-bfa4-6a40599fa87b", "name": "Write Blog Post", "type": "@n8n/n8n-nodes-langchain.chainLlm", "position": [1740, -760], "parameters": {"text": "={{ $json.text }}", "messages": {"messageValues": [{"message": "=Analyze the provided PDF article and create a compelling blog post. Follow these specifications:  \\n\\n## Title Requirements \\n- Create an engaging, SEO-friendly title under 10 words \\n- Must not contain a colon \\n- Should capture the article's essence \\n- Will be formatted as an H1 in the content  \\n\\n## Content Structure \\n- Introduction (150-200 words)   \\n  * Compelling hook   \\n  * Topic context and importance   \\n  * Preview of main points  \\n- Main Content (6-8 chapters)   \\n  * Each chapter requires:     \\n    - Relevant H2 heading     \\n    - 300-400 words of unique content     \\n    - Specific topic focus     \\n    - Source material quotes/data     \\n    - Smooth transitions  \\n    - Conclusion (200-250 words)   \\n  * Key takeaways   \\n  * Final thoughts/implications  \\n\\n## Formatting Guidelines \\n- Use proper HTML tags throughout \\n- Structure with <p> tags for paragraphs \\n- Include appropriate spacing \\n- Use <blockquote> for direct quotes \\n- Maintain consistent formatting \\n- Write in clear, professional tone \\n- Break up long paragraphs \\n- Use engaging subheadings \\n- Include transitional phrases  \\n\\nThe content should be original, avoid direct copying, and maintain a consistent voice throughout. \\nOnly return the bolg post and avoid any preamble or further explanation."}]}, "promptType": "define"}, "typeVersion": 1.5}, {"id": "58ff967f-e327-4719-8a95-bfe9df02d185", "name": "Get Base64", "type": "n8n-nodes-base.extractFromFile", "position": [1880, 500], "parameters": {"options": {}, "operation": "binaryToPropery"}, "typeVersion": 1}, {"id": "a09a8b8b-ca30-4bbe-b3c9-a989e95d0fca", "name": "Save Image to imgbb.com", "type": "n8n-nodes-base.httpRequest", "position": [2100, 500], "parameters": {"url": "https://api.imgbb.com/1/upload", "method": "POST", "options": {"redirect": {"redirect": {}}}, "sendBody": true, "sendQuery": true, "contentType": "multipart-form-data", "bodyParameters": {"parameters": [{"name": "image", "value": "={{ $json.data }}"}, {"name": "name", "value": "="}]}, "queryParameters": {"parameters": [{"name": "expiration", "value": "600"}, {"name": "key", "value": "[your-imbgg-api-key-here]"}]}}, "typeVersion": 4.2}, {"id": "116a8bee-77b5-44c8-a9fd-df3776ddccd1", "name": "Sticky Note7", "type": "n8n-nodes-base.stickyNote", "position": [1780, 400], "parameters": {"color": 7, "width": 560, "height": 300, "content": "## Save Image to imgbb\\nhttps://api.imgbb.com/"}, "typeVersion": 1}], "active": false, "pinData": {}, "settings": {"executionOrder": "v1"}, "versionId": "2d20cb21-b376-49c8-8dc8-cbdec4ddf543", "connections": {"Merge": {"main": [[{"node": "Telegram Partial Blog", "type": "main", "index": 0}, {"node": "Gmail Final Blog", "type": "main", "index": 0}]]}, "Markdown": {"main": [[{"node": "Merge", "type": "main", "index": 0}]]}, "Get Base64": {"main": [[{"node": "Save Image to imgbb.com", "type": "main", "index": 0}]]}, "Upload PDF": {"main": [[{"node": "Extract Text", "type": "main", "index": 0}]]}, "gpt-4o-mini": {"ai_languageModel": [[{"node": "Write Blog Post", "type": "ai_languageModel", "index": 0}]]}, "Extract Text": {"main": [[{"node": "Write Blog Post", "type": "main", "index": 0}]]}, "Is Approved?": {"main": [[{"node": "Create Wordpress Post", "type": "main", "index": 0}]]}, "Get Blog Post": {"main": [[{"node": "Is there Title & Content?", "type": "main", "index": 0}]]}, "Write Blog Post": {"main": [[{"node": "Get Blog Post", "type": "main", "index": 0}]]}, "pollinations.ai": {"main": [[{"node": "Upload Image to Wordpress", "type": "main", "index": 0}, {"node": "Merge", "type": "main", "index": 1}, {"node": "Get Base64", "type": "main", "index": 0}]]}, "Create Wordpress Post": {"main": [[{"node": "pollinations.ai", "type": "main", "index": 0}]]}, "Telegram Partial Blog": {"main": [[]]}, "Is there Title & Content?": {"main": [[{"node": "Human In The Loop Approve Blog Post", "type": "main", "index": 0}], [{"node": "Send Error Message", "type": "main", "index": 0}]]}, "Upload Image to Wordpress": {"main": [[{"node": "Set Image on Wordpress Post", "type": "main", "index": 0}]]}, "Set Image on Wordpress Post": {"main": [[{"node": "Markdown", "type": "main", "index": 0}]]}, "Human In The Loop Approve Blog Post": {"main": [[{"node": "Is Approved?", "type": "main", "index": 0}]]}}}}	2025-10-12 15:07:48.112177
1449	3012	16	10	[]	full	f	{"id": 3012, "name": "🌐 Confluence Page AI Chatbot Workflow", "workflow": {"id": "mOcaSIUAvpt3QjQ1", "meta": {"instanceId": "31e69f7f4a77bf465b805824e303232f0227212ae922d12133a0f96ffeab4fef", "templateCredsSetupCompleted": true}, "name": "🌐 Confluence Page AI Powered Chatbot", "tags": [], "nodes": [{"id": "f4761e1a-6430-4b3d-97f9-b91743e02ea6", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [80, -340], "parameters": {"color": 7, "width": 633, "height": 974, "content": "## Confluence\\nhttps://developer.atlassian.com/cloud/confluence/basic-auth-for-rest-apis/\\nhttps://id.atlassian.com/manage-profile/security/api-tokens\\nhttps://developer.atlassian.com/cloud/confluence/rest/v2/intro/#about\\n\\nSupplying basic auth headers\\nYou can construct and send basic auth headers yourself, including a base64-encoded string that contains your Atlassian account email and API token.\\n\\nTo use basic auth headers, perform the following steps:\\n\\nGenerate an API Token for your Atlassian Account: https://id.atlassian.com/manage/api-tokens\\nBuild a string of the form your_email@domain.com:your_user_api_token.\\nYou'll need to encode your authorization credentials to Base64 encoded. You can do this locally:\\nLinux/Unix/MacOS:\\n\\nCopy\\n```\\necho -n your_email@domain.com:your_user_api_token | base64\\n```\\nWindows 7 and later, using Microsoft Powershell:\\n\\nCopy\\n```\\n$Text = ‘your_email@domain.com:your_user_api_token’\\n$Bytes = [System.Text.Encoding]::UTF8.GetBytes($Text)\\n$EncodedText = [Convert]::ToBase64String($Bytes)\\n$EncodedText\\n```\\nSupply an Authorization header with content Basic followed by the encoded string. Example: Authorization: Basic eW91cl9lbWFpbEBkb21haW4uY29tOnlvdXJfdXNlcl9hcGlfdG9rZW4=\\n\\nCopy\\n```\\ncurl -D- \\\\\\n   -X GET \\\\\\n   -H \\"Authorization: Basic <your_encoded_string>\\" \\\\\\n   -H \\"Content-Type: application/json\\" \\\\\\n   \\"https://<your-domain.atlassian.net>/wiki/rest/api/space\\"\\n```\\n\\nThe above cURL command will not work as shown. You need to replace <your_encoded_string> and <your-domain.atlassian.net> with your authorization credentials encoded string and instance information before running it in the terminal."}, "typeVersion": 1}, {"id": "b2865684-687e-45a9-bb0c-e78df4dda72e", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [760, -340], "parameters": {"color": 5, "width": 768.3946456283678, "height": 381.59428876752247, "content": "## Using Rest API to GET Confluence Page Body\\nhttps://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get\\n\\nRequest\\nhttps://<your-wiki>.atlassian.net/wiki/api/v2/pages/{id}\\nPath parameters\\nid\\ninteger\\n\\nRequired\\nQuery parameters\\n\\nThe content format types to be returned in the body field of the response. \\nIf available, the representation will be available under a response field of the same name under the body field.\\n\\nValid values: storage, atlas_doc_format, view, export_view, anonymous_export_view, styled_view, editor\\n\\n"}, "typeVersion": 1}, {"id": "2fae2b02-b15f-4226-86c2-f4444f10965e", "name": "Confluence Page Storage View", "type": "n8n-nodes-base.httpRequest", "position": [900, 580], "parameters": {"url": "=https://example.atlassian.net/wiki/api/v2/pages/{{ $json.id }}", "options": {}, "sendQuery": true, "sendHeaders": true, "authentication": "genericCredentialType", "genericAuthType": "httpHeaderAuth", "queryParameters": {"parameters": [{"name": "body-format", "value": "storage"}]}, "headerParameters": {"parameters": [{}]}}, "credentials": {"httpHeaderAuth": {"id": "KafuDlwiWOVNQcyC", "name": "Confluence API"}}, "typeVersion": 4.2}, {"id": "49c5c6f7-f879-4518-aeef-922154f47ea6", "name": "HTML to Markdown", "type": "n8n-nodes-base.markdown", "position": [1100, 580], "parameters": {"html": "={{ $json.body.storage.value }}", "options": {}}, "typeVersion": 1}, {"id": "6ef64460-1406-43c9-9c5b-9d8ae3f51d31", "name": "gpt-4o-mini", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [1260, 760], "parameters": {"options": {}}, "credentials": {"openAiApi": {"id": "jEMSvKmtYfzAkhe6", "name": "OpenAi account"}}, "typeVersion": 1}, {"id": "b8f998da-34b2-40d4-9816-b7a3ca33a3d9", "name": "When chat message received", "type": "@n8n/n8n-nodes-langchain.manualChatTrigger", "position": [820, 180], "parameters": {}, "typeVersion": 1.1}, {"id": "8fcfb987-3ea1-43cd-804f-dc2d629e558e", "name": "Window Buffer Memory", "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow", "position": [1400, 760], "parameters": {"sessionKey": "={{ $('When chat message received').item.json.sessionId }}", "sessionIdType": "customKey"}, "typeVersion": 1.2}, {"id": "53fe680c-af07-4712-b3cd-ae853f19cf8a", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [760, 420], "parameters": {"color": 6, "width": 1163, "height": 515, "content": "## Chatbot for Confluence Pages\\n\\n\\n"}, "typeVersion": 1}, {"id": "f37546a9-1b33-4276-9ea3-e461b53fe70a", "name": "Chat Response", "type": "n8n-nodes-base.set", "position": [1700, 680], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "636ec5bb-141c-491b-b827-bf6c3753a531", "name": "output", "type": "string", "value": "={{ $json.output }}"}]}}, "typeVersion": 3.4}, {"id": "c53f59bd-f0d9-4629-bf56-ca439ef9c7f5", "name": "Globals", "type": "n8n-nodes-base.set", "position": [1100, 180], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "74683edb-6368-4673-95f3-2885e30595cf", "name": "page_id_tekla", "type": "string", "value": "688157"}, {"id": "3a8796d7-3426-4f4a-bddf-973720b59e9d", "name": "page_id_n8n", "type": "string", "value": "491546"}, {"id": "42b27698-8d11-4fb0-a308-e256e0752f4d", "name": "page_id_more_n8n", "type": "string", "value": "983041"}, {"id": "62572887-e17a-4957-9ab1-3546277f79ab", "name": "page_id_tekla_clash_checking", "type": "string", "value": "753691"}]}}, "typeVersion": 3.4}, {"id": "ee500c5b-9289-4636-8178-6235c0fe4080", "name": "Search By ID", "type": "n8n-nodes-base.httpRequest", "position": [1300, 180], "parameters": {"url": "=https://example.atlassian.net/wiki/rest/api/search?limit=1&cql=id={{ $json.page_id_n8n }}", "options": {}, "authentication": "genericCredentialType", "genericAuthType": "httpHeaderAuth"}, "credentials": {"httpHeaderAuth": {"id": "KafuDlwiWOVNQcyC", "name": "Confluence API"}}, "typeVersion": 4.2}, {"id": "934f0c57-6184-4c85-a0dc-097b3c470be4", "name": "Sticky Note4", "type": "n8n-nodes-base.stickyNote", "position": [1020, 80], "parameters": {"width": 872, "height": 297, "content": "## Confluence Search By ID"}, "typeVersion": 1}, {"id": "c51b8421-962d-46a1-aaf5-1b170252b7da", "name": "Page Schema", "type": "n8n-nodes-base.set", "position": [1700, 180], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "3e8b49af-f3c6-4441-842f-9ce9a42c34b6", "name": "content._links.webui", "type": "string", "value": "={{ $json.content._links.webui }}"}, {"id": "6fd53eb3-52b2-4f7b-92ca-89a26e05d52a", "name": "content._links.self", "type": "string", "value": "={{ $json.content._links.self }}"}, {"id": "dfc89cbb-2f63-41ca-acfb-27b4d36d0418", "name": "title", "type": "string", "value": "={{ $json.title }}"}, {"id": "0e15af12-8ae2-4337-a174-f3c3592bd0c6", "name": "url", "type": "string", "value": "={{ $json.url }}"}, {"id": "6bbfa6eb-d6db-42c4-9ef6-81611fda0365", "name": "excerpt", "type": "string", "value": "={{ $json.excerpt }}"}, {"id": "a5a26e42-af66-41a6-9406-7ccb86fb3386", "name": "id", "type": "string", "value": "={{ $json.content.id }}"}]}}, "typeVersion": 3.4}, {"id": "2c765cad-e488-44ad-98b6-6e0a2c575fd2", "name": "AI Agent", "type": "@n8n/n8n-nodes-langchain.agent", "position": [1300, 580], "parameters": {"text": "=Answer questions from user with the context provided.  Only respond using the context.  If you do not know the answer simply respond with \\"I don't know.\\"\\n\\nUser question: {{ $('When chat message received').item.json.chatInput }}\\n\\nContext: {{ $json.data }}", "agent": "conversationalAgent", "options": {}, "promptType": "define"}, "typeVersion": 1.6}, {"id": "a89508f9-fd88-4a9f-84da-a0ddef590e1b", "name": "Send Telegram Message", "type": "n8n-nodes-base.telegram", "position": [1700, 480], "webhookId": "3ba1ee6d-1648-4421-823b-e68ae14d769b", "parameters": {"text": "={{ $json.output}}", "chatId": "={{ $env.TELEGRAM_CHAT_ID }}", "additionalFields": {"parse_mode": "HTML", "appendAttribution": false}}, "credentials": {"telegramApi": {"id": "pAIFhguJlkO3c7aQ", "name": "Telegram account"}}, "typeVersion": 1.2}, {"id": "dae8ae00-1552-4945-948e-2556dfdd8802", "name": "Split Out", "type": "n8n-nodes-base.splitOut", "position": [1500, 180], "parameters": {"options": {}, "fieldToSplitOut": "results"}, "typeVersion": 1}], "active": false, "pinData": {}, "settings": {"executionOrder": "v1"}, "versionId": "d57c434b-ed09-484a-bcc4-d81681001a36", "connections": {"Globals": {"main": [[{"node": "Search By ID", "type": "main", "index": 0}]]}, "AI Agent": {"main": [[{"node": "Chat Response", "type": "main", "index": 0}, {"node": "Send Telegram Message", "type": "main", "index": 0}]]}, "Split Out": {"main": [[{"node": "Page Schema", "type": "main", "index": 0}]]}, "Page Schema": {"main": [[{"node": "Confluence Page Storage View", "type": "main", "index": 0}]]}, "gpt-4o-mini": {"ai_languageModel": [[{"node": "AI Agent", "type": "ai_languageModel", "index": 0}]]}, "Search By ID": {"main": [[{"node": "Split Out", "type": "main", "index": 0}]]}, "HTML to Markdown": {"main": [[{"node": "AI Agent", "type": "main", "index": 0}]]}, "Window Buffer Memory": {"ai_memory": [[{"node": "AI Agent", "type": "ai_memory", "index": 0}]]}, "When chat message received": {"main": [[{"node": "Globals", "type": "main", "index": 0}]]}, "Confluence Page Storage View": {"main": [[{"node": "HTML to Markdown", "type": "main", "index": 0}]]}}}}	2025-10-12 15:07:48.112177
1450	3009	7	3	[]	full	f	{"id": 3009, "name": "🧠 *NEW* Claude 3.7 Extended Thinking AI Agent 🤖 – Unlock Ultimate Intelligence", "workflow": {"id": "orycXAEeu4i2tiGo", "meta": {"instanceId": "b2c6727f02106e7324192d5dfa251f5dd42759bfd0d7e1602a3ab09f0fcd3b61", "templateCredsSetupCompleted": true}, "name": "Claude 3.7 Extended Thinking AI Agent", "tags": [{"id": "ZpvdYWekm3yflGGn", "name": "Claude", "createdAt": "2025-02-25T10:07:27.212Z", "updatedAt": "2025-02-25T10:07:27.212Z"}, {"id": "j82neTlPTB3GhgSs", "name": "Coding", "createdAt": "2025-02-25T10:08:10.456Z", "updatedAt": "2025-02-25T10:08:10.456Z"}, {"id": "jJnzpA8oWOrt6aT8", "name": "Other", "createdAt": "2025-02-25T10:08:11.382Z", "updatedAt": "2025-02-25T10:08:11.382Z"}], "nodes": [{"id": "5fde0cfb-b41a-479c-8e30-3812a927cba4", "name": "On form submission", "type": "n8n-nodes-base.formTrigger", "position": [0, 0], "webhookId": "490c20d2-e7b8-4c95-a380-50d6de9daafa", "parameters": {}, "typeVersion": 2.2}, {"id": "18406083-696c-4c3e-bcb7-a0ad1242980e", "name": "Form", "type": "n8n-nodes-base.form", "position": [440, 0], "webhookId": "9528c151-bee8-4971-b7c2-92759a724f78", "parameters": {}, "typeVersion": 1}, {"id": "6bf76f4c-ff79-45f7-9315-9a49c73659f7", "name": "Claude Message", "type": "n8n-nodes-base.httpRequest", "position": [220, 0], "parameters": {}, "typeVersion": 4.2}, {"id": "03e496cf-fcc6-4e20-9156-a0777c074838", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [-460, -20], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "ea014614-c430-4c61-b67d-2ce2a89c2f60", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [120, -200], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "ebdf17ac-ffba-4fc9-99d9-279993487201", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [-580, -860], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "22c1a532-a049-482b-b140-9b8be427e5ec", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [-460, 200], "parameters": {"content": ""}, "typeVersion": 1}], "active": false, "pinData": {}, "settings": {"executionOrder": "v1"}, "versionId": "528d6f30-5c15-4b4d-b3c7-9a2bb94904c3", "connections": {"Form": {"main": [[]]}, "Claude Message": {"main": [[{"node": "Form", "type": "main", "index": 0}]]}, "On form submission": {"main": [[{"node": "Claude Message", "type": "main", "index": 0}]]}}}}	2025-10-12 15:07:48.112178
1451	3008	12	6	[]	full	f	{"id": 3008, "name": "Extract Thai Bank Slip Data from LINE using SpaceOCR and Save to Google Sheets", "workflow": {"id": "QOePbDNCilLhfzbs", "meta": {"instanceId": "2c12b0b552404dc07af67cd5f092afd21d18c808d4fdabdb04cb4b064195b6fb", "templateCredsSetupCompleted": true}, "name": "LINE BOT - Google Sheets Record Receipt", "tags": [], "nodes": [{"id": "c9a6882e-8971-4f8b-8dc4-730e217200f9", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [-1260, 100], "parameters": {"width": 400, "height": 500, "content": "## Prepare data\\n**- Get content image from Line** \\nhttps://api-data.line.me/v2/bot/message/xxx/content\\n\\n**- Get image URL to Binary**"}, "typeVersion": 1}, {"id": "b766ad37-ec63-4006-80a7-048307afd23a", "name": "Image slip URL in Line", "type": "n8n-nodes-base.set", "position": [-1200, 300], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "f8b8ac7c-5c5f-452f-a84d-e068bb248eb5", "name": "file_url", "type": "string", "value": "=https://api-data.line.me/v2/bot/message/{{ $json.body.events[0].message.id }}/content"}]}}, "typeVersion": 3.4}, {"id": "172ed09e-8caf-4bee-9f09-a9b8b00470f7", "name": "Get image to Binary", "type": "n8n-nodes-base.httpRequest", "position": [-1000, 300], "parameters": {"url": "={{ $json.file_url }}", "options": {}, "authentication": "genericCredentialType", "genericAuthType": "httpHeaderAuth"}, "credentials": {"httpHeaderAuth": {"id": "byY3kI23lMe4ewnM", "name": "Header Auth account - Maid"}}, "typeVersion": 4.2}, {"id": "79753b3d-d6a9-4047-af48-947e6221de48", "name": "Line Chat Bot", "type": "n8n-nodes-base.webhook", "position": [-1440, 300], "webhookId": "23ba996d-3242-42a1-946c-f04a680b320a", "parameters": {"path": "23ba996d-3242-42a1-946c-f04a680b320a", "options": {}, "httpMethod": "POST"}, "typeVersion": 1}, {"id": "91837828-c24d-4999-a6db-9323394b8e77", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [-840, 100], "parameters": {"color": 2, "width": 220, "height": 500, "content": "## Upload image to Google Drive\\n"}, "typeVersion": 1}, {"id": "94be83d7-5070-4f94-ae33-0a9695fc0b25", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [-600, 100], "parameters": {"color": 3, "width": 540, "height": 500, "content": "## OCR and get value\\n**- OCR API by SpaceOCR**\\nhttps://api.ocr.space/parse/imageurl?apikey=YOURAPI&language=tha&isOverlayRequired=false&OCREngine=2&filetype=JPG&url=xxx\\n\\n**- Parse Transaction Details**"}, "typeVersion": 1}, {"id": "5e269f18-c666-4ba3-bb92-e60f5761cf0e", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [-40, 100], "parameters": {"color": 5, "width": 220, "height": 500, "content": "## Store Data in Google Sheets"}, "typeVersion": 1}, {"id": "aa5312d8-304c-4d64-839b-a4464cb0d60e", "name": "Sticky Note4", "type": "n8n-nodes-base.stickyNote", "position": [-1500, 100], "parameters": {"color": 5, "width": 220, "height": 500, "content": "## LINE Webhook Trigger \\n**(Receive Image)**"}, "typeVersion": 1}, {"id": "802a7b11-38bf-4dd1-ae32-cd6b6071b9dd", "name": "Upload image to Google Drive", "type": "n8n-nodes-base.googleDrive", "position": [-780, 300], "parameters": {"name": "={{ $('Line Chat Bot').item.json.body.events[0].message.id }}.jpg", "driveId": {"__rl": true, "mode": "list", "value": "My Drive"}, "options": {}, "folderId": {"__rl": true, "mode": "url", "value": "https://drive.google.com/drive/folders/1M-j_Gt6yKM1K8SISWknaGQyPQn52AaK1"}}, "credentials": {"googleDriveOAuth2Api": {"id": "QVrgALkld7whKIgB", "name": "Google Drive account - Peakwave"}}, "typeVersion": 3}, {"id": "b37b4b7a-1030-44d0-8f57-90acca085e5a", "name": "Record in Google Sheets", "type": "n8n-nodes-base.googleSheets", "position": [20, 300], "parameters": {"columns": {"value": {"Fee": "={{ $json.fee }}", "Amount": "={{ $json.amount }}", "Date & Time": "={{ $json.date_time }}", "Sender Name": "={{ $json.sender_name }}", "Receiver Bank": "={{ $json.receiver_bank }}", "Receiver Name": "={{ $json.receiver_name }}", "Sender Account": "={{ $json.sender_account }}", "Transaction ID": "={{ $json.transaction_id }}", "Receiver Account": "={{ $json.receiver_account }}", "Transaction Type": "={{ $json.transaction_type }}"}, "schema": [{"id": "Transaction Type", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Transaction Type", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Date & Time", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Date & Time", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Bank", "type": "string", "display": true, "removed": true, "required": false, "displayName": "Bank", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Sender Name", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Sender Name", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Sender Account", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Sender Account", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Receiver Name", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Receiver Name", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Receiver Bank", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Receiver Bank", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Receiver Account", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Receiver Account", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Transaction ID", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Transaction ID", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Amount", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Amount", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Fee", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Fee", "defaultMatch": false, "canBeUsedToMatch": true}], "mappingMode": "defineBelow", "matchingColumns": [], "attemptToConvertTypes": false, "convertFieldsToString": false}, "options": {}, "operation": "append", "sheetName": {"__rl": true, "mode": "list", "value": "gid=0", "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IpvzcnWmb-aLpSleTIF0xoF8xzbOOJQhuT6ITAeEQks/edit#gid=0", "cachedResultName": "data"}, "documentId": {"__rl": true, "mode": "url", "value": "https://docs.google.com/spreadsheets/d/1IpvzcnWmb-aLpSleTIF0xoF8xzbOOJQhuT6ITAeEQks/edit?gid=0#gid=0"}}, "credentials": {"googleSheetsOAuth2Api": {"id": "0RVWjnYzlWor2bMu", "name": "Google Sheets account"}}, "typeVersion": 4.5}, {"id": "22fbba4f-ad1f-43a5-99de-db7084cd3fc5", "name": "Send Image URL to OCR Space for Text Extraction", "type": "n8n-nodes-base.httpRequest", "position": [-520, 300], "parameters": {"url": "=https://api.ocr.space/parse/imageurl?apikey=K82173083188957&language=tha&isOverlayRequired=false&OCREngine=2&filetype=JPG&url={{ \\"https://drive.google.com/uc?id=\\" + $json[\\"id\\"] }}\\n", "options": {}}, "typeVersion": 4.2}, {"id": "678993d0-8301-42d5-93cd-7839d42b71bc", "name": "Extract Transaction Details", "type": "n8n-nodes-base.code", "position": [-260, 300], "parameters": {"jsCode": "const text = $json[\\"ParsedResults\\"][0][\\"ParsedText\\"];\\n\\n// Split text by line breaks and trim spaces\\nconst lines = text.split(\\"\\\\n\\").map(line => line.trim());\\n\\n// Debugging: Log extracted lines for verification\\nconsole.log(\\"Extracted Lines:\\", lines);\\n\\n// Helper function to find text after a keyword, with OCR variations\\nfunction getValueAfterKeyword(keywords, offset = 1) {\\n    let index = lines.findIndex(line => keywords.some(keyword => line.includes(keyword)));\\n    return index !== -1 && lines[index + offset] ? lines[index + offset] : null;\\n}\\n\\n// **Extracting Data for Both Standard & PromptPay Transactions**\\nconst transaction_type = lines[0] || null;  // First line\\nconst date_time = lines[1] || null;  // Second line\\n\\n// **Sender Details**\\nconst sender_name_index = lines.findIndex(line => line.startsWith(\\"นาย\\"));\\nconst sender_name = sender_name_index !== -1 ? lines[sender_name_index] : null;\\nconst sender_bank = sender_name_index !== -1 ? lines[sender_name_index + 1] : null;\\nconst sender_account = sender_name_index !== -1 ? lines[sender_name_index + 2] : null;\\n\\n// **Determine if it's a Standard Bank Transfer or PromptPay**\\nconst isPromptPay = lines.some(line => line.includes(\\"Prompt\\") || line.includes(\\"รหัสพร้อมเพย์\\"));\\nlet receiver_name = null;\\nlet receiver_bank = null;\\nlet receiver_account = null;\\n\\nif (isPromptPay) {\\n    // **Handling PromptPay Transactions**\\n    const receiver_index = lines.findIndex(line => line.includes(\\"Prompt\\"));\\n    receiver_bank = \\"PromptPay\\"; // Fixed for PromptPay transactions\\n    receiver_name = receiver_index !== -1 ? lines[receiver_index + 2] : null; // Receiver's actual name\\n\\n    // **Fix Receiver Account for PromptPay**\\n    const receiver_account_index = lines.findIndex(line => line.includes(\\"รหัสพร้อมเพย์\\"));\\n    receiver_account = receiver_account_index !== -1 ? lines[receiver_account_index + 1] : null; // The actual account number\\n\\n} else {\\n    // **Handling Standard Bank Transfers**\\n    const receiver_index = lines.findIndex(line => line.includes(\\"นิติบุคคล\\") || line.includes(\\"บริษัท\\") || line.includes(\\"นาย\\"));\\n    receiver_name = receiver_index !== -1 ? lines[receiver_index] : null;\\n    receiver_bank = receiver_index !== -1 ? lines[receiver_index + 2] : null;\\n    receiver_account = receiver_index !== -1 ? lines[receiver_index + 3] : null;\\n}\\n\\n// **Fix Transaction ID Extraction**\\nlet transaction_id = null;\\n\\n// **First, try \\"เลขที่รายการ:\\" for Standard Transactions**\\nconst transaction_index = lines.findIndex(line => line.includes(\\"เลขที่รายการ:\\"));\\nif (transaction_index !== -1) {\\n    if (/\\\\d{10,}/.test(lines[transaction_index])) {\\n        // If the same line contains the transaction ID, extract it\\n        transaction_id = lines[transaction_index].match(/\\\\d{10,}/)[0];\\n    } else if (transaction_index + 1 < lines.length && /\\\\d{10,}/.test(lines[transaction_index + 1])) {\\n        // If transaction ID is on the next line, extract it\\n        transaction_id = lines[transaction_index + 1];\\n    }\\n}\\n\\n// ✅ **If transaction_id is still missing, use \\"จำนวน:\\" or possible OCR errors (\\"จำนวนะ\\")**\\nif (!transaction_id) {\\n    let amount_index = lines.findIndex(line => line.includes(\\"จำนวน\\") || line.includes(\\"จำนวนะ\\"));\\n    if (amount_index !== -1) {\\n        for (let i = amount_index + 1; i < lines.length; i++) {\\n            if (/^[A-Za-z0-9]+$/.test(lines[i])) { // Ensure it's a valid ID\\n                transaction_id = lines[i];\\n                break; // **Break early for efficiency**\\n            }\\n        }\\n    }\\n}\\n\\n// **Extract Amount Correctly**\\nconst amount_index = lines.findIndex(line => line.includes(\\"บาท\\") && !line.includes(\\"ค่าธรรมเนียม\\"));\\nconst amount = amount_index !== -1 ? lines[amount_index].replace(\\" บาท\\", \\"\\").replace(/[^0-9.]/g, \\"\\") : null;\\n\\n// **Extract Fee Correctly**\\nconst fee_index = lines.findIndex(line => line.includes(\\"ค่าธรรมเนียม\\"));\\nconst fee = fee_index !== -1 && lines[fee_index + 1] ? lines[fee_index + 1].replace(\\" บาท\\", \\"\\").replace(/[^0-9.]/g, \\"\\") : null;\\n\\n// **Ensure Essential Details Exist**\\nif (transaction_type && date_time && sender_name && sender_bank && sender_account && receiver_name && receiver_bank && receiver_account && transaction_id && amount) {\\n    return [\\n        {\\n            json: {\\n                \\"transaction_type\\": transaction_type,\\n                \\"date_time\\": date_time,\\n                \\"sender_name\\": sender_name,\\n                \\"sender_bank\\": sender_bank,\\n                \\"sender_account\\": sender_account,\\n                \\"receiver_name\\": receiver_name,\\n                \\"receiver_bank\\": receiver_bank,\\n                \\"receiver_account\\": receiver_account,\\n                \\"transaction_id\\": transaction_id,\\n                \\"amount\\": amount,\\n                \\"fee\\": fee\\n            }\\n        }\\n    ];\\n} else {\\n    return [\\n        {\\n            json: {\\n                \\"error\\": \\"Some values could not be extracted\\",\\n                \\"raw_text\\": text\\n            }\\n        }\\n    ];\\n}\\n"}, "typeVersion": 2}], "active": false, "pinData": {}, "settings": {"executionOrder": "v1"}, "versionId": "e1708774-49cf-4cbb-a4c4-9fefccd0fedb", "connections": {"Line Chat Bot": {"main": [[{"node": "Image slip URL in Line", "type": "main", "index": 0}]]}, "Get image to Binary": {"main": [[{"node": "Upload image to Google Drive", "type": "main", "index": 0}]]}, "Image slip URL in Line": {"main": [[{"node": "Get image to Binary", "type": "main", "index": 0}]]}, "Extract Transaction Details": {"main": [[{"node": "Record in Google Sheets", "type": "main", "index": 0}]]}, "Upload image to Google Drive": {"main": [[{"node": "Send Image URL to OCR Space for Text Extraction", "type": "main", "index": 0}]]}, "Send Image URL to OCR Space for Text Extraction": {"main": [[{"node": "Extract Transaction Details", "type": "main", "index": 0}]]}}}}	2025-10-12 15:07:48.112178
1452	3016	17	13	[]	full	f	{"id": 3016, "name": "Invoices from Gmail to Drive and Google Sheets", "workflow": {"id": "XnGZZfT5u0Cw1X3p", "meta": {"instanceId": "3378b0d68c3b7ebfc71b79896d94e1a044dec38e99a1160aed4e9c323910fbe2", "templateCredsSetupCompleted": true}, "name": "Attachments Gmail to drive and google sheets", "tags": [], "nodes": [{"id": "0404ef0a-9750-495a-8798-98d4b059a083", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [-580, -420], "parameters": {"height": 440, "content": "## Setup\\n1. Setup your **Gmail** and **Google Drive** credentials\\n2. Setup your **Google Sheets** credentials\\n3. Setup your **Openai** api key"}, "typeVersion": 1}, {"id": "8751a7f1-aae4-4746-aae7-3d8563845b8c", "name": "Gmail Trigger1", "type": "n8n-nodes-base.gmailTrigger", "position": [-640, 120], "parameters": {"simple": false, "filters": {"readStatus": "unread"}, "options": {"downloadAttachments": true}, "pollTimes": {"item": [{"mode": "everyMinute"}]}}, "credentials": {"gmailOAuth2": {"id": "v8YJP3VfeGtRk5la", "name": "Gmail account"}}, "typeVersion": 1.1}, {"id": "40f62192-5acb-4915-aa07-e5a0dfeb7581", "name": "Setup1", "type": "n8n-nodes-base.set", "position": [-300, 120], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "4cca07a2-6a70-4011-a025-65246e652fb9", "name": "url_to_drive_folder", "type": "string", "value": "1fCWCdqrFP3WrjjLc-gJtxMaiaF5lh8Ko"}]}, "includeOtherFields": true}, "typeVersion": 3.4}, {"id": "d928e797-8851-4ab4-9199-cd555a40eae9", "name": "Upload PDF to Drive1", "type": "n8n-nodes-base.httpRequest", "maxTries": 5, "position": [220, 0], "parameters": {"url": "https://www.googleapis.com/upload/drive/v3/files", "method": "POST", "options": {}, "sendBody": true, "sendQuery": true, "contentType": "binaryData", "authentication": "predefinedCredentialType", "queryParameters": {"parameters": [{"name": "uploadType", "value": "media"}]}, "inputDataFieldName": "={{ $binary.attachment_0.mimeType === \\"application/pdf\\"\\n     ? \\"attachment_0\\"\\n     : \\"attachment_1\\" }}", "nodeCredentialType": "googleDriveOAuth2Api"}, "credentials": {"googleDriveOAuth2Api": {"id": "p5I6S4YkJps1zvwz", "name": "Google Drive account 2"}}, "retryOnFail": true, "typeVersion": 4.2}, {"id": "22df6933-a0c7-4cce-8114-5332038a14c3", "name": "Rename file1", "type": "n8n-nodes-base.googleDrive", "position": [400, 0], "parameters": {"fileId": {"__rl": true, "mode": "id", "value": "={{ $json.id }}"}, "options": {}, "operation": "update", "newUpdatedFileName": "={{ $('Setup1').item.json.subject }}_invoice_{{ $now.format('yyyy-MM-dd') }}.pdf"}, "credentials": {"googleDriveOAuth2Api": {"id": "p5I6S4YkJps1zvwz", "name": "Google Drive account 2"}}, "typeVersion": 3}, {"id": "ce6a6a4c-17ba-4cf7-b07a-97b9d8d80844", "name": "Move to the correct folder1", "type": "n8n-nodes-base.googleDrive", "position": [580, 0], "parameters": {"fileId": {"__rl": true, "mode": "id", "value": "={{ $json.id }}"}, "driveId": {"__rl": true, "mode": "list", "value": "My Drive", "cachedResultUrl": "https://drive.google.com/drive/my-drive", "cachedResultName": "My Drive"}, "folderId": {"__rl": true, "mode": "list", "value": "1fCWCdqrFP3WrjjLc-gJtxMaiaF5lh8Ko", "cachedResultUrl": "", "cachedResultName": "2025"}, "operation": "move"}, "credentials": {"googleDriveOAuth2Api": {"id": "p5I6S4YkJps1zvwz", "name": "Google Drive account 2"}}, "typeVersion": 3}, {"id": "e64aac5c-a314-46b6-b7db-fc0d6f450e1f", "name": "Gmail", "type": "n8n-nodes-base.gmail", "position": [1240, 0], "webhookId": "556cbee3-8de0-4645-9e91-e7c0c252f2ab", "parameters": {"messageId": "={{ $('Gmail Trigger1').item.json.id }}", "operation": "markAsRead"}, "credentials": {"gmailOAuth2": {"id": "v8YJP3VfeGtRk5la", "name": "Gmail account"}}, "typeVersion": 2.1}, {"id": "ea74cfc1-0305-418d-9f5f-bffcfb3bb2c7", "name": "Extract from File2", "type": "n8n-nodes-base.extractFromFile", "position": [1200, -180], "parameters": {"options": {}, "operation": "pdf"}, "typeVersion": 1}, {"id": "0398d982-78fd-4830-b5cf-271195af80fd", "name": "Google Drive", "type": "n8n-nodes-base.googleDrive", "position": [800, 0], "parameters": {"fileId": {"__rl": true, "mode": "id", "value": "={{ $json.id }}"}, "options": {}, "operation": "download"}, "credentials": {"googleDriveOAuth2Api": {"id": "p5I6S4YkJps1zvwz", "name": "Google Drive account 2"}}, "typeVersion": 3}, {"id": "3b4a96d4-a6ee-486a-a795-fe410ccc38b2", "name": "OpenAI Model", "type": "@n8n/n8n-nodes-langchain.lmOpenAi", "position": [1740, 20], "parameters": {"model": {"__rl": true, "mode": "list", "value": "gpt-4o", "cachedResultName": "gpt-4o"}, "options": {"temperature": 0}}, "credentials": {"openAiApi": {"id": "XJdxgMSXFgwReSsh", "name": "n8n key"}}, "typeVersion": 1}, {"id": "a7dd0d95-5e79-4bd2-a8a6-2178264d19fc", "name": "Structured Output Parser", "type": "@n8n/n8n-nodes-langchain.outputParserStructured", "position": [1940, 40], "parameters": {"jsonSchema": "{\\n  \\"Invoice date\\": { \\"type\\": \\"date\\" },\\n  \\"Invoice description\\": { \\"type\\": \\"string\\" },\\n  \\"Total price\\": { \\"type\\": \\"number\\" },\\n  \\"Fichero\\": { \\"type\\": \\"string\\" }\\n}"}, "typeVersion": 1.1}, {"id": "68d98f4c-e679-48e3-a1a1-529cda4e31a4", "name": "Append to Reconciliation Sheet", "type": "n8n-nodes-base.googleSheets", "position": [2280, -140], "parameters": {"columns": {"value": {}, "schema": [{"id": "Invoice date", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Invoice date", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Invoice Description", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Invoice Description", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Total price", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Total price", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Fichero", "type": "string", "display": true, "removed": false, "required": false, "displayName": "Fichero", "defaultMatch": false, "canBeUsedToMatch": true}], "mappingMode": "autoMapInputData", "matchingColumns": [], "attemptToConvertTypes": false, "convertFieldsToString": false}, "options": {}, "operation": "append", "sheetName": {"__rl": true, "mode": "id", "value": "gid=0"}, "documentId": {"__rl": true, "mode": "list", "value": "1gIUnjSWUhsoTOVVd4ZoVjARCGQfGE8s7FWcju3lNajM", "cachedResultUrl": "", "cachedResultName": "facturas"}}, "credentials": {"googleSheetsOAuth2Api": {"id": "3IOU2VjBnR4hGohx", "name": "Google Sheets account"}}, "typeVersion": 4.3}, {"id": "80e1c8f4-b593-4c5f-b9e2-f3b7996ee6d4", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [1680, -400], "parameters": {"color": 7, "width": 805.0578351924228, "height": 656.5014186128178, "content": "## 3. Use LLMs to Extract Values from Data\\n[Read more about Basic LLM Chain](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm/)\\n\\nLarge language models are perfect for data extraction tasks as they can work across a range of document layouts without human intervention. The extracted data can then be sent to a variety of datastores such as spreadsheets, accounting systems and/or CRMs.\\n\\n**Tip:** The \\"Structured Output Parser\\" ensures the AI output can be\\ninserted to our spreadsheet without additional clean up and/or formatting. "}, "typeVersion": 1}, {"id": "3754e10e-a233-4ce0-bc79-bb5c01db9695", "name": "Map Output", "type": "n8n-nodes-base.set", "position": [2080, -140], "parameters": {"mode": "raw", "options": {}, "jsonOutput": "={{ $json.output }}"}, "typeVersion": 3.3}, {"id": "a42ff16f-d0df-4b6d-9a36-849f85d1facc", "name": "Apply Data Extraction Rules", "type": "@n8n/n8n-nodes-langchain.chainLlm", "position": [1740, -140], "parameters": {"text": "=Given the following invoice in the <invoice> xml tags, extract the following information as listed below.\\nIf you cannot the information for a specific item, then leave blank and skip to the next. \\n\\n* Invoice date\\n* Invoice Description: {{ $('Rename file1').item.json.name }}\\n* Total price\\n* Fichero: =HYPERLINK(\\"https://drive.google.com/file/d/{{ $('Move to the correct folder1').item.json.id }}/view\\", \\"Ver Documento\\")\\n\\n\\n<invoice>{{ $json.text }}</invoice>", "promptType": "define", "hasOutputParser": true}, "typeVersion": 1.4}, {"id": "f6de5d5a-d2dc-4590-8f46-3f250b8fca9f", "name": "Sticky Note6", "type": "n8n-nodes-base.stickyNote", "position": [1860, 0], "parameters": {"width": 192.26896179623753, "height": 213.73043662572252, "content": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n**Need more attributes?**\\nChange it here!"}, "typeVersion": 1}, {"id": "255fe8c1-5bd7-41cc-b1f9-c8956b5ad101", "name": "Only invoice mails with attachments", "type": "n8n-nodes-base.if", "position": [0, 120], "parameters": {"options": {}, "conditions": {"options": {"version": 1, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "or", "conditions": [{"id": "229200d1-ec13-4970-ae0e-2c8e17da0bdf", "operator": {"type": "string", "operation": "contains"}, "leftValue": "={{ $('Gmail Trigger1').item.json.headers['content-type'] }}", "rightValue": "multipart/mixed"}, {"id": "new-condition", "operator": {"type": "boolean", "operation": "isNotEmpty"}, "leftValue": "={{ $json.attachments }}"}]}}, "typeVersion": 2.1}], "active": true, "pinData": {}, "settings": {"executionOrder": "v1"}, "versionId": "eb152808-e993-4e18-9dd8-10f21df57bf1", "connections": {"Gmail": {"main": [[]]}, "Setup1": {"main": [[{"node": "Only invoice mails with attachments", "type": "main", "index": 0}]]}, "Map Output": {"main": [[{"node": "Append to Reconciliation Sheet", "type": "main", "index": 0}]]}, "Google Drive": {"main": [[{"node": "Extract from File2", "type": "main", "index": 0}]]}, "OpenAI Model": {"ai_languageModel": [[{"node": "Apply Data Extraction Rules", "type": "ai_languageModel", "index": 0}]]}, "Rename file1": {"main": [[{"node": "Move to the correct folder1", "type": "main", "index": 0}]]}, "Gmail Trigger1": {"main": [[{"node": "Setup1", "type": "main", "index": 0}]]}, "Extract from File2": {"main": [[{"node": "Apply Data Extraction Rules", "type": "main", "index": 0}]]}, "Upload PDF to Drive1": {"main": [[{"node": "Rename file1", "type": "main", "index": 0}]]}, "Structured Output Parser": {"ai_outputParser": [[{"node": "Apply Data Extraction Rules", "type": "ai_outputParser", "index": 0}]]}, "Apply Data Extraction Rules": {"main": [[{"node": "Map Output", "type": "main", "index": 0}]]}, "Move to the correct folder1": {"main": [[{"node": "Gmail", "type": "main", "index": 0}, {"node": "Google Drive", "type": "main", "index": 0}]]}, "Only invoice mails with attachments": {"main": [[{"node": "Upload PDF to Drive1", "type": "main", "index": 0}], [{"node": "Gmail", "type": "main", "index": 0}]]}}}}	2025-10-12 15:07:48.112178
1453	3014	44	27	[]	full	f	{"id": 3014, "name": "🔄 Workflow Repos8r: Github Version Control User Interface for n8n Workflows", "workflow": {"id": "19zAOGWLxA9g9epQ", "meta": {"instanceId": "ba3fa76a571c35110ef5f67e5099c9a5c1768ef125c2f3b804ba20de75248c0b", "templateCredsSetupCompleted": true}, "name": "Dynamic GitHub Workflows", "tags": [{"id": "n7iHVPoDy5TG4oVr", "name": "utility", "createdAt": "2025-01-14T14:58:44.872Z", "updatedAt": "2025-01-14T14:58:44.872Z"}], "nodes": [{"id": "077b5015-2b26-44ac-aac7-a868a7ab9647", "name": "n8n | get wf1", "type": "n8n-nodes-base.n8n", "position": [2240, 1440], "parameters": {}, "typeVersion": 1}, {"id": "8b048484-3aba-4e7a-99f3-d11cd76a0fda", "name": "Respond with UI", "type": "n8n-nodes-base.respondToWebhook", "position": [3820, 760], "parameters": {}, "typeVersion": 1.1}, {"id": "2fb30621-c1fc-4e2c-bd80-5aa19e95e1fe", "name": "HTML-UI", "type": "n8n-nodes-base.html", "position": [3540, 760], "parameters": {}, "typeVersion": 1.2}, {"id": "eb55c132-b001-463c-bca7-7e7850f3dffb", "name": "Webhook-ideogener8r", "type": "n8n-nodes-base.webhook", "position": [1680, 760], "webhookId": "e892f1af-d192-40e1-9c27-7fda6539d911", "parameters": {}, "typeVersion": 2}, {"id": "9f89ec58-5f63-4358-82a8-8ee5263f09c3", "name": "Sticky Note7", "type": "n8n-nodes-base.stickyNote", "position": [1620, 660], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "121f6666-7731-40e0-93a4-4599197305c2", "name": "Set Flows", "type": "n8n-nodes-base.set", "position": [2920, 760], "parameters": {}, "typeVersion": 3.4}, {"id": "eb1a073b-8353-494c-9711-1bc40d1b0ee3", "name": "Aggregate", "type": "n8n-nodes-base.aggregate", "position": [3260, 760], "parameters": {}, "typeVersion": 1}, {"id": "6b40c70a-3592-4ecf-9311-99bc39b9ff63", "name": "GitHub", "type": "n8n-nodes-base.github", "position": [2640, 760], "parameters": {}, "typeVersion": 1}, {"id": "4b4e4846-cbb6-4ab0-aad4-d7de542568e1", "name": "submit-form", "type": "n8n-nodes-base.webhook", "position": [1680, 1900], "webhookId": "d541171c-731e-4104-ac30-6a32f2c0af03", "parameters": {}, "typeVersion": 2}, {"id": "da4b75e6-1cf0-43d6-8994-9c920669f7a7", "name": "Respond to Webhook", "type": "n8n-nodes-base.respondToWebhook", "position": [3820, 1100], "parameters": {}, "typeVersion": 1.1}, {"id": "87a1185f-9f9f-401d-818c-b4f52e12dd82", "name": "GitHub2", "type": "n8n-nodes-base.github", "position": [2140, 1100], "parameters": {}, "typeVersion": 1}, {"id": "3fb50870-df6a-4e0c-b9e8-c1f94e86728f", "name": "Set GH Repo and Path3", "type": "n8n-nodes-base.set", "position": [1940, 1100], "parameters": {}, "typeVersion": 3.4}, {"id": "85ed78b0-d257-4164-b8d1-753ebd1f2e3a", "name": "Extract from File", "type": "n8n-nodes-base.extractFromFile", "position": [2360, 1100], "parameters": {}, "typeVersion": 1}, {"id": "9ebe75fe-3e9c-4a28-8d83-1054d6c703fa", "name": "Set Git Workflow Id", "type": "n8n-nodes-base.set", "position": [2640, 1100], "parameters": {}, "typeVersion": 3.4}, {"id": "a803bd8f-809b-4955-9e89-1586abcbf00c", "name": "Get n8n Workflow", "type": "n8n-nodes-base.n8n", "position": [2940, 1100], "parameters": {}, "typeVersion": 1}, {"id": "a2f799b5-5325-4820-969f-be0949e563b8", "name": "Set n8n Workflow", "type": "n8n-nodes-base.set", "position": [3260, 1100], "parameters": {}, "typeVersion": 3.4}, {"id": "755eaa25-fb21-4df5-8cf9-36f4c530e5c9", "name": "ComapreNodes", "type": "n8n-nodes-base.code", "position": [3540, 1100], "parameters": {}, "typeVersion": 2}, {"id": "8d77291b-d517-4321-9c72-d0287fab1c52", "name": "Respond to Webhook1", "type": "n8n-nodes-base.respondToWebhook", "position": [3820, 1760], "parameters": {}, "typeVersion": 1.1}, {"id": "c610bcb1-04c7-4b79-9fca-dd7bc5ad68f4", "name": "Get-n8n-workflows", "type": "n8n-nodes-base.webhook", "position": [1680, 1440], "webhookId": "e892f1af-d192-40e1-9c27-7fda6539d911", "parameters": {}, "typeVersion": 2}, {"id": "9b71c203-6c9a-4798-ae9e-c6f1ff14d633", "name": "Respond to Webhook2", "type": "n8n-nodes-base.respondToWebhook", "position": [3820, 1440], "parameters": {}, "typeVersion": 1.1}, {"id": "ebbd2611-27e9-48c4-8224-6e18a59cf5c3", "name": "Get-Workflow-Changes", "type": "n8n-nodes-base.webhook", "position": [1680, 1100], "webhookId": "e892f1af-d192-40e1-9c27-7fda6539d911", "parameters": {}, "typeVersion": 2}, {"id": "f768d245-9f92-4232-9b8f-381cb18e609c", "name": "SetWorkflows", "type": "n8n-nodes-base.set", "position": [2680, 1440], "parameters": {}, "typeVersion": 3.4}, {"id": "3facd854-5d61-468f-8a2a-f230ebade3ac", "name": "Edit Fields", "type": "n8n-nodes-base.set", "position": [3400, 1440], "parameters": {}, "typeVersion": 3.4}, {"id": "39f4fbb3-fc33-4f12-8aee-a85f4ebd3ed7", "name": "Aggregate1", "type": "n8n-nodes-base.aggregate", "position": [3020, 1440], "parameters": {}, "typeVersion": 1}, {"id": "0bfa387a-0513-4239-af6f-6cde51d374db", "name": "Switch1", "type": "n8n-nodes-base.switch", "position": [2680, 1900], "parameters": {}, "typeVersion": 3.2}, {"id": "33e97127-b0da-44d9-bcc4-43b033342c6d", "name": "Set GH Repo and Path4", "type": "n8n-nodes-base.set", "position": [2220, 1900], "parameters": {}, "typeVersion": 3.4}, {"id": "921bfed2-52c0-4da5-a208-34d445175fdb", "name": "n8n", "type": "n8n-nodes-base.n8n", "position": [3020, 1760], "parameters": {}, "typeVersion": 1}, {"id": "6a92ecd5-aa28-4224-8700-b9cd7ee82904", "name": "Commit Workflow Edit", "type": "n8n-nodes-base.github", "position": [3400, 1760], "parameters": {}, "typeVersion": 1}, {"id": "8f88c306-08df-4b8f-9c44-8936562901f3", "name": "n8n1", "type": "n8n-nodes-base.n8n", "position": [3020, 1980], "parameters": {}, "typeVersion": 1}, {"id": "f15b37f4-a0c2-4c27-9b22-c586cd3636cd", "name": "Commit New File", "type": "n8n-nodes-base.github", "position": [3400, 1980], "parameters": {}, "typeVersion": 1}, {"id": "d766a2fd-b05d-4a9d-a5f9-53009c5e198b", "name": "Respond to Webhook3", "type": "n8n-nodes-base.respondToWebhook", "position": [3820, 1980], "parameters": {}, "typeVersion": 1.1}, {"id": "712e2d80-f659-4d60-95c6-342883fc6eca", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [1620, 1000], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "c569ff75-eb1b-4783-a65d-376069a43c50", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [1620, 1340], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "d6d223d5-67dd-419c-9e88-9762c51ce692", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [1620, 1680], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "b705cb50-b982-4d0e-ac4c-32556128fe53", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [1900, 700], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "ea518e3e-274a-4b1a-b0ed-06408457c77d", "name": "Sticky Note4", "type": "n8n-nodes-base.stickyNote", "position": [1880, 1060], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "b8017298-cefd-4126-8959-4515e18fb163", "name": "Sticky Note5", "type": "n8n-nodes-base.stickyNote", "position": [2160, 1840], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "22cc7d73-c424-4ea3-bacb-0526222b1f81", "name": "Sticky Note6", "type": "n8n-nodes-base.stickyNote", "position": [1400, 740], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "b25d9672-28cb-4c26-ac4a-7d259352de17", "name": "Sticky Note8", "type": "n8n-nodes-base.stickyNote", "position": [1400, 1080], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "82b3e0c7-5a7c-4cda-acc8-dc9de63ce9a3", "name": "Sticky Note9", "type": "n8n-nodes-base.stickyNote", "position": [1400, 1420], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "d8bbf686-0173-4863-948d-c5cdb1dc1b76", "name": "Sticky Note10", "type": "n8n-nodes-base.stickyNote", "position": [1380, 1880], "parameters": {"content": ""}, "typeVersion": 1}, {"id": "aa62e288-3628-40f6-ad38-54768d76dff9", "name": "Set Workflow Variables", "type": "n8n-nodes-base.set", "position": [1940, 760], "parameters": {}, "typeVersion": 3.4}, {"id": "73986aeb-c311-4acf-9427-dcfe65d6bc34", "name": "Workflow Vars", "type": "n8n-nodes-base.set", "position": [1960, 1900], "parameters": {}, "typeVersion": 3.4}, {"id": "a8c438f1-be8c-4461-b83c-ffdc612f2a04", "name": "Sticky Note11", "type": "n8n-nodes-base.stickyNote", "position": [1620, 240], "parameters": {"content": ""}, "typeVersion": 1}], "active": true, "pinData": {}, "settings": {"executionOrder": "v1"}, "versionId": "24bded7d-e0f5-4c66-b64f-f6324a5a2d35", "connections": {"n8n": {"main": [[{"node": "Commit Workflow Edit", "type": "main", "index": 0}]]}, "n8n1": {"main": [[{"node": "Commit New File", "type": "main", "index": 0}]]}, "GitHub": {"main": [[{"node": "Set Flows", "type": "main", "index": 0}]]}, "GitHub2": {"main": [[{"node": "Extract from File", "type": "main", "index": 0}]]}, "HTML-UI": {"main": [[{"node": "Respond with UI", "type": "main", "index": 0}]]}, "Switch1": {"main": [[{"node": "n8n", "type": "main", "index": 0}], [{"node": "n8n1", "type": "main", "index": 0}]]}, "Aggregate": {"main": [[{"node": "HTML-UI", "type": "main", "index": 0}]]}, "Set Flows": {"main": [[{"node": "Aggregate", "type": "main", "index": 0}]]}, "Aggregate1": {"main": [[{"node": "Edit Fields", "type": "main", "index": 0}]]}, "Edit Fields": {"main": [[{"node": "Respond to Webhook2", "type": "main", "index": 0}]]}, "submit-form": {"main": [[{"node": "Workflow Vars", "type": "main", "index": 0}]]}, "ComapreNodes": {"main": [[{"node": "Respond to Webhook", "type": "main", "index": 0}]]}, "SetWorkflows": {"main": [[{"node": "Aggregate1", "type": "main", "index": 0}]]}, "Workflow Vars": {"main": [[{"node": "Set GH Repo and Path4", "type": "main", "index": 0}]]}, "n8n | get wf1": {"main": [[{"node": "SetWorkflows", "type": "main", "index": 0}]]}, "Commit New File": {"main": [[{"node": "Respond to Webhook3", "type": "main", "index": 0}]]}, "Get n8n Workflow": {"main": [[{"node": "Set n8n Workflow", "type": "main", "index": 0}]]}, "Set n8n Workflow": {"main": [[{"node": "ComapreNodes", "type": "main", "index": 0}]]}, "Extract from File": {"main": [[{"node": "Set Git Workflow Id", "type": "main", "index": 0}]]}, "Get-n8n-workflows": {"main": [[{"node": "n8n | get wf1", "type": "main", "index": 0}]]}, "Set Git Workflow Id": {"main": [[{"node": "Get n8n Workflow", "type": "main", "index": 0}]]}, "Webhook-ideogener8r": {"main": [[{"node": "Set Workflow Variables", "type": "main", "index": 0}]]}, "Commit Workflow Edit": {"main": [[{"node": "Respond to Webhook1", "type": "main", "index": 0}]]}, "Get-Workflow-Changes": {"main": [[{"node": "Set GH Repo and Path3", "type": "main", "index": 0}]]}, "Set GH Repo and Path3": {"main": [[{"node": "GitHub2", "type": "main", "index": 0}]]}, "Set GH Repo and Path4": {"main": [[{"node": "Switch1", "type": "main", "index": 0}]]}, "Set Workflow Variables": {"main": [[{"node": "GitHub", "type": "main", "index": 0}]]}}}}	2025-10-12 15:07:48.112178
1454	3021	9	4	[]	full	f	{"id": 3021, "name": "Get GitHub Issue Updates and Send Notifications to Telegram", "workflow": {"id": "okjjim5PVb2dZUgg", "meta": {"instanceId": "b229c9a129a49cc78e21e7f6e65be625850967828e8c77a8f82738e7c8461afc", "templateCredsSetupCompleted": true}, "name": "FetchGithubIssues", "tags": [], "nodes": [{"id": "2f3cac64-7326-471d-8f6a-1677a4ff5a6d", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [-540, -560], "parameters": {"color": 5, "content": "### Get Github Issues HTTP Request \\n- Edit the OWNER and REPO NAME in the respective fields\\n- The request is configured with query parameters of *state*, *since* and *labels*"}, "typeVersion": 1}, {"id": "13809408-63f3-4161-87f2-c5d950274aa9", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [-260, -560], "parameters": {"color": 3, "width": 180, "content": "### Extract Fields\\nExtract fields like title, comments, created_at, etc from the github api response"}, "typeVersion": 1}, {"id": "3df26230-c2b0-44d5-98da-cccbca493c8f", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [-40, -560], "parameters": {"color": 3, "width": 180, "content": "### Filter on Fields\\nFilter issues based on number of comments"}, "typeVersion": 1}, {"id": "819bd3f8-8d23-4299-ac1d-ae9762f944dd", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [220, -680], "parameters": {"color": 5, "width": 200, "height": 280, "content": "### Send message to Telegram User\\n- This node is configured to send *issue title* and *url* to your user id\\n- Create a new telegram bot using the instructions [here](https://core.telegram.org/bots/tutorial#obtain-your-bot-token) and configure bot token in the telegram credential\\n- Chat ID can be your username or your username ID"}, "typeVersion": 1}, {"id": "9e08036f-e082-424d-b536-349d236a40ec", "name": "Send Message to @user", "type": "n8n-nodes-base.telegram", "position": [280, -380], "webhookId": "d0c6ee9e-ed0b-49fa-95cd-e483fc29ffbc", "parameters": {"text": "=New Issue:  {{ $json.title }} [Link]({{ $json.html_url }})", "additionalFields": {}}, "credentials": {"telegramApi": {"id": "MEwozHKykMH3flb4", "name": "Telegram account 2"}}, "typeVersion": 1.2}, {"id": "9cf3bf31-12a6-4f3b-a1e7-69f575f801f0", "name": "Check for comments", "type": "n8n-nodes-base.filter", "position": [0, -380], "parameters": {"options": {}, "conditions": {"options": {"version": 2, "leftValue": "", "caseSensitive": true, "typeValidation": "strict"}, "combinator": "and", "conditions": [{"id": "88ae0b8f-c586-4f01-8389-bc0e2c0473bc", "operator": {"type": "number", "operation": "lt"}, "leftValue": "={{ $json.comments }}", "rightValue": 5}]}}, "typeVersion": 2.2}, {"id": "0cfd2924-64c0-4f8b-a15b-7e619d5b21bf", "name": "Map title, url, created, comments", "type": "n8n-nodes-base.set", "position": [-220, -380], "parameters": {"options": {}, "assignments": {"assignments": [{"id": "ebad3986-8804-428f-acbb-7c1953dbbc47", "name": "title", "type": "string", "value": "={{ $json.title }}"}, {"id": "2daabd16-f1af-4d24-8409-51e7ba242bbb", "name": "html_url", "type": "string", "value": "={{ $json.html_url }}"}, {"id": "7ea20a16-794c-4701-81e0-4b99fb1a9fc7", "name": "created_at", "type": "string", "value": "={{ $json.created_at }}"}, {"id": "0a4985f9-5d80-420b-ae57-15329bf19634", "name": "comments", "type": "number", "value": "={{ $json.comments }}"}]}}, "typeVersion": 3.4}, {"id": "eacbb029-03b9-46d6-9f2e-edaab70cce10", "name": "Run every 10 minutes", "type": "n8n-nodes-base.scheduleTrigger", "position": [-780, -380], "parameters": {"rule": {"interval": [{"field": "minutes", "minutesInterval": 10}]}}, "typeVersion": 1.2}, {"id": "d87f01e3-8277-4dbb-bcc0-4ca2e1c794d4", "name": "Get Github Issues", "type": "n8n-nodes-base.github", "position": [-480, -380], "parameters": {"owner": {"__rl": true, "mode": "name", "value": ""}, "resource": "repository", "repository": {"__rl": true, "mode": "name", "value": ""}, "getRepositoryIssuesFilters": {"since": "={{ new Date(Date.now() - 30 * 60 * 1000).toISOString() }}", "state": "open", "labels": "Bug"}}, "credentials": {"githubApi": {"id": "2yRBqav2uahP1pas", "name": "GitHub account"}}, "typeVersion": 1}], "active": false, "pinData": {}, "settings": {"executionOrder": "v1"}, "versionId": "5bc6fb0e-face-48c3-aba4-0c53ad1e9b35", "connections": {"Get Github Issues": {"main": [[{"node": "Map title, url, created, comments", "type": "main", "index": 0}]]}, "Check for comments": {"main": [[{"node": "Send Message to @user", "type": "main", "index": 0}]]}, "Run every 10 minutes": {"main": [[{"node": "Get Github Issues", "type": "main", "index": 0}]]}, "Map title, url, created, comments": {"main": [[{"node": "Check for comments", "type": "main", "index": 0}]]}}}}	2025-10-12 15:07:48.112179
1455	3020	6	4	[]	full	f	{"id": 3020, "name": "AI Linux system administrator for managing Linux VPS instance", "workflow": {"nodes": [{"id": "84460a1f-50e7-4d16-8701-ebc1a86a0ef1", "name": "OpenAI Chat Model", "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi", "position": [-360, -40], "parameters": {"model": {"__rl": true, "mode": "list", "value": "gpt-4o", "cachedResultName": "gpt-4o"}, "options": {}}, "credentials": {"openAiApi": {"id": "8kKub5m50fH8NRfv", "name": "OpenAi account"}}, "typeVersion": 1.2}, {"id": "221bbae2-0920-46b4-8b25-bb654439e567", "name": "When chat message received", "type": "@n8n/n8n-nodes-langchain.chatTrigger", "position": [-580, -220], "webhookId": "61927fdb-5d6e-47c2-aa73-bb48e46d41ad", "parameters": {"options": {}}, "typeVersion": 1.1}, {"id": "dd0a9a82-9ad5-4116-a738-81334c58a0f2", "name": "Basic SSH commands", "type": "@n8n/n8n-nodes-langchain.toolHttpRequest", "position": [-160, -40], "parameters": {"url": "https://www.hostinger.com/tutorials/linux-commands", "toolDescription": "Get basic SSH commands"}, "typeVersion": 1.1}, {"id": "428f2694-26fd-4ce1-b423-f9a734395b08", "name": "Execute SSH", "type": "@n8n/n8n-nodes-langchain.toolWorkflow", "position": [40, -40], "parameters": {"name": "SSH", "source": "parameter", "description": "Call this tool to execute the bash command on external VPS.\\nTo pass a command to execute, you should only pass the command itself.\\n", "workflowJson": "{\\n  \\"nodes\\": [\\n    {\\n      \\"parameters\\": {\\n        \\"workflowInputs\\": {\\n          \\"values\\": [\\n            {\\n              \\"name\\": \\"query\\"\\n            }\\n          ]\\n        }\\n      },\\n      \\"type\\": \\"n8n-nodes-base.executeWorkflowTrigger\\",\\n      \\"typeVersion\\": 1.1,\\n      \\"position\\": [\\n        0,\\n        0\\n      ],\\n      \\"id\\": \\"29e380c2-2ecd-465e-a784-f31b1c204b38\\",\\n      \\"name\\": \\"When Executed by Another Workflow\\"\\n    },\\n    {\\n      \\"parameters\\": {\\n        \\"command\\": \\"={{ $json.query }}\\"\\n      },\\n      \\"type\\": \\"n8n-nodes-base.ssh\\",\\n      \\"typeVersion\\": 1,\\n      \\"position\\": [\\n        220,\\n        0\\n      ],\\n      \\"id\\": \\"81a147e8-e8c8-4c98-8a9b-24de4e0152a0\\",\\n      \\"name\\": \\"SSH\\",\\n      \\"alwaysOutputData\\": true,\\n      \\"credentials\\": {\\n        \\"sshPassword\\": {\\n          \\"id\\": \\"VMCCUQkaq46q3CpB\\",\\n          \\"name\\": \\"SSH Password account\\"\\n        }\\n      },\\n      \\"onError\\": \\"continueErrorOutput\\"\\n    }\\n  ],\\n  \\"pinData\\": {},\\n  \\"connections\\": {\\n    \\"When Executed by Another Workflow\\": {\\n      \\"main\\": [\\n        [\\n          {\\n            \\"node\\": \\"SSH\\",\\n            \\"type\\": \\"main\\",\\n            \\"index\\": 0\\n          }\\n        ]\\n      ]\\n    }\\n  }\\n}"}, "credentials": {"sshPassword": {"id": "VMCCUQkaq46q3CpB", "name": "SSH Password account"}}, "typeVersion": 2}, {"id": "1cd5280c-f16f-4195-9cdc-1649893ea16c", "name": "AI SysAdmin", "type": "@n8n/n8n-nodes-langchain.agent", "position": [-340, -220], "parameters": {"text": "=You are an AI Linux System Administrator Agent expert designed to help manage Linux VPS systems.\\nThe user will communicate with you as a fellow colleague. You must understand their final intention and act accordingly.\\nYou can execute single-line bash commands inside a VPS using the SSH tool.\\nTo pass a command to execute, you should only pass the command itself.\\nReplacing null with a command you want to execute.\\n\\n\\nYour objectives are:\\n\\n### **1. Understand User Intent**\\n- Parse user requests related to Linux operations.\\n- Accurately interpret the intent to generate valid Linux commands.\\n- Accurately interpret the response you receive from a VPS.\\n- Provide the user with an interpreted response.\\n\\n### **2. Refer to tools**\\n- **Basic SSH commands**\\n- **SSH**\\n\\n### **3. Restrictions**\\n- Do not do destructive actions without confirmation from the user.\\n- Under no circumstance execute \\"rm -rf\\" command.\\n\\n### **4. Behavior Guidelines**\\n- Be concise, precise, and consistent.\\n- Ensure all generated commands are compatible with Linux SSH.\\n- Rely on system defaults when user input is incomplete.\\n- For unknown or unrelated queries, clearly indicate invalid input.\\n\\n\\nUser Prompt \\nHere is a request from user: {{ $json.chatInput }}", "agent": "reActAgent", "options": {}, "promptType": "define"}, "typeVersion": 1.7}, {"id": "fc8b89d9-36eb-400a-8c25-cd89056efc64", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [20, -180], "parameters": {"width": 360, "height": 260, "content": "## SSH login credentials\\nMake sure to provide the correct SSH credentials ID in this embedded workflow under \\"sshPassword\\".\\n\\n"}, "typeVersion": 1}], "pinData": {}, "connections": {"Execute SSH": {"ai_tool": [[{"node": "AI SysAdmin", "type": "ai_tool", "index": 0}]]}, "OpenAI Chat Model": {"ai_languageModel": [[{"node": "AI SysAdmin", "type": "ai_languageModel", "index": 0}]]}, "Basic SSH commands": {"ai_tool": [[{"node": "AI SysAdmin", "type": "ai_tool", "index": 0}]]}, "When chat message received": {"main": [[{"node": "AI SysAdmin", "type": "main", "index": 0}]]}}}}	2025-10-12 15:07:48.112179
1456	3018	17	6	[]	full	f	{"id": 3018, "name": "Automated Content Generation & Publishing - Wordpress", "workflow": {"id": "YOUR_WORKFLOW_ID", "meta": {"instanceId": "YOUR_INSTANCE_ID", "templateCredsSetupCompleted": true}, "name": "Automated Content Generation & Publishing - Wordpress", "tags": [], "nodes": [{"id": "9cd63357-19dc-4420-baa9-1e1389c7120f", "name": "Create posts on Wordpress", "type": "n8n-nodes-base.wordpress", "position": [1180, 280], "parameters": {"title": "={{ $('Save to Sheet').item.json['title'] }}", "additionalFields": {"status": "publish", "content": "=<img src=\\"{{ $('Automated Image Retrieval from Pexels').item.json.photos[0].src.landscape }}\\" alt=\\"image text\\" style=\\"width:100%; height:auto;\\"><br><br>\\n<br><br>\\n{{ $node['Save to Sheet'].json['content'] }}"}}, "credentials": {"wordpressApi": {"id": "YOUR_WORDPRESS_CREDENTIAL_ID", "name": "Wordpress account 2"}}, "typeVersion": 1, "alwaysOutputData": false}, {"id": "65f62f19-d10f-4ca1-a853-9cedb3506743", "name": "Processing Delay", "type": "n8n-nodes-base.code", "position": [180, 580], "parameters": {"jsCode": "const delay = Math.floor(Math.random() * (6 * 60 * 60 * 1000)); // random delay 0-6 hour\\nreturn {\\n  json: {\\n    delay: delay,\\n    delay_minutes: Math.round(delay / 60000),  // to minutes\\n    delay_hours: (delay / 3600000).toFixed(2) // to hours\\n  }\\n};\\n"}, "typeVersion": 2}, {"id": "193d2876-c50e-4b9e-8856-9fd11baa025e", "name": "Random Wait", "type": "n8n-nodes-base.wait", "position": [180, 760], "webhookId": "61377399-ce9f-497a-80b1-aab29fc9fb69", "parameters": {"amount": "={{$json[\\"delay\\"] / 1000}}"}, "typeVersion": 1.1}, {"id": "cf510c21-7c19-4e84-a43a-62d170277cdf", "name": "Save to Sheet", "type": "n8n-nodes-base.googleSheets", "position": [780, 280], "parameters": {"columns": {"value": {"title": "={{ $json.message.content.title }}", "content": "={{ $json.message.content.content }}", "Image search keyword": "={{ $json.message.content.keywords.join(\\"+\\") }}"}, "schema": [{"id": "title", "type": "string", "display": true, "removed": false, "required": false, "displayName": "title", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "content", "type": "string", "display": true, "required": false, "displayName": "content", "defaultMatch": false, "canBeUsedToMatch": true}, {"id": "Image search keyword", "type": "string", "display": true, "required": false, "displayName": "Image search keyword", "defaultMatch": false, "canBeUsedToMatch": true}], "mappingMode": "defineBelow", "matchingColumns": []}, "options": {}, "operation": "append", "sheetName": {"__rl": true, "mode": "name", "value": "Sheet1"}, "documentId": {"__rl": true, "mode": "url", "value": "YOURDOCUMENT_URL"}}, "credentials": {"googleSheetsOAuth2Api": {"id": "YOUR_GOOGLE_SHEETS_CREDENTIAL_ID", "name": "Google Sheets account_正確"}}, "typeVersion": 4.5}, {"id": "1778f649-c09e-4ef9-b153-4160eed6805c", "name": "Sticky Note", "type": "n8n-nodes-base.stickyNote", "position": [-220, 0], "parameters": {"width": 607.503259452412, "height": 892.7656453715782, "content": "## Automated Article Scheduling\\n\\n**1. Fast Bulk Article Generation**\\nQuickly create multiple AI-generated articles.\\nEfficiently streamline content creation.\\nReduces manual effort while maintaining quality.\\n\\n**2. Workflow Testing Before Execution**\\nManually test the workflow for debugging.\\nEnsure each step runs as expected.\\nOptimize before full automation.\\n\\n**3. Automated & Randomized Publishing**\\nSchedule posts at predefined intervals.\\nIntroduce random delays for a natural posting pattern.\\nPrevents overly predictable publishing behavior."}, "typeVersion": 1}, {"id": "6f385e8c-b3e6-4456-9738-e85ea2cbbea1", "name": "1. Auto Start", "type": "n8n-nodes-base.scheduleTrigger", "disabled": true, "position": [180, 20], "parameters": {"rule": {"interval": [{"field": "minutes", "minutesInterval": 1}]}}, "typeVersion": 1.2}, {"id": "6d7712e8-9033-453b-ad52-09f718bcb701", "name": "2. When clicking ‘Test workflow’", "type": "n8n-nodes-base.manualTrigger", "disabled": true, "position": [180, 200], "parameters": {}, "typeVersion": 1}, {"id": "0fd8fe8f-a0d5-42d9-b728-53340c6e4233", "name": "3. Schedule Your Posts", "type": "n8n-nodes-base.scheduleTrigger", "position": [180, 380], "parameters": {"rule": {"interval": [{"field": "weeks", "triggerAtDay": [2, 4, 0], "triggerAtHour": "={{ 12 }}"}]}}, "typeVersion": 1.2}, {"id": "16c26c36-fb8e-4903-a64c-57803fac83b9", "name": "Sticky Note1", "type": "n8n-nodes-base.stickyNote", "position": [400, 440], "parameters": {"width": 351.77682676671327, "height": 271.4285686334568, "content": "## AI Content Generating\\n\\n**Automatic Content & Keyword Generation\\n\\n- Use your own prompt to start\\n- ChatGPT generates full-length articles with structured headings.\\n- Extracts relevant image search keywords for visual enhancement.\\n- To implement this, add the following prompt (green note) below your workflow:\\n"}, "typeVersion": 1}, {"id": "921173fb-ae10-4f88-a1ab-15f063cd623f", "name": "Sticky Note2", "type": "n8n-nodes-base.stickyNote", "position": [400, 740], "parameters": {"color": 4, "width": 349.47344203333904, "height": 1277.4269457977707, "content": "(YOUR PROMPT)\\n\\n**Image Search Keywords (For Visual Alignment)**\\n\\n- Automatically generates 3-5 English keywords for image searches based on the article content.\\n- Keywords should be specific objects, locations, or atmospheres rather than abstract concepts.\\n\\n**Article Formatting Requirements**\\n\\n1️⃣ Title (H1): Ensure unique and trend-driven headlines.\\n2️⃣ H2 / H3 Subheadings: Structure content in an SEO-optimized format.\\n3️⃣ Article Structure (Enhanced Readability)\\n\\n** Introduction **\\n- Go straight to the point, avoiding excessive background.\\n- Use question hooks or market trend data to engage readers.\\n\\n** Core Content **\\n- Include at least three knowledge points to ensure depth.\\n- Balance short and long sentences for better flow.\\n\\n** Conclusion **\\n- Avoid generic AI-style summaries; instead, provide insights or actionable takeaways.\\n- Optionally include a CTA (Call to Action).\\n\\n** HTML Formatting **\\nEnsure the article is properly structured in HTML format:\\n- Headings: Use <h1>, <h2>, <h3> appropriately.\\n- Paragraphs: Enclose text within <p>.\\n- Emphasized Words: Use <strong> to highlight key terms.\\n- Lists: Use <ul> and <li> for bullet points.\\n\\nEnsure a clean, well-structured output instead of plain text.\\n\\n### **Final JSON Format\\nEnsure the output follows this structure:\\n\\n{\\n  \\"title\\": \\"{Generate an H1 title that aligns with market trends, ensures high click-through rates, and follows keyword strategy}\\",\\n  \\"content\\": \\"{Generate a complete HTML article including H1, H2, H3 headings, paragraphs, lists, etc.}\\",\\n  \\"keywords\\": [\\"{Image search keyword 1}\\", \\"{Image search keyword 2}\\", \\"{Image search keyword 3}\\", \\"{Image search keyword 4}\\", \\"{Image search keyword 5}\\"]\\n}"}, "typeVersion": 1}, {"id": "364b1ee1-4685-4b10-b988-1704dc65592b", "name": "Sticky Note3", "type": "n8n-nodes-base.stickyNote", "position": [760, 440], "parameters": {"width": 367.1064142931126, "height": 267.17005729996885, "content": "## Google Sheet Setting\\n**You need to set up these in your sheet column** \\n- title\\n- content\\n- image search keyword\\n\\n**Mapping \\"Values to Send\\"**\\n- {{ $json.message.content.title }}\\n- {{ $json.message.content.content }}\\n- {{ $json.message.content.keywords.join(\\"+\\") }}"}, "typeVersion": 1}, {"id": "26876b53-aa27-4e16-991e-c3618e751c17", "name": "Automated Image Retrieval from Pexels", "type": "n8n-nodes-base.httpRequest", "position": [980, 280], "parameters": {"url": "=https://api.pexels.com/v1/search?per_page=1&orientation=landscape&query={{ $json[\\"Image search keyword\\"] }}\\n", "options": {}, "sendQuery": true, "sendHeaders": true, "queryParameters": {"parameters": [{"name": "query", "value": "={{ $json['Image search keyword'] }}"}]}, "headerParameters": {"parameters": [{"name": "Authorization", "value": "YOUR_PEXELS_API_KEY"}, {"name": "Content-Type", "value": "application/json"}]}}, "typeVersion": 4.2}, {"id": "769638be-ee38-4e40-a508-f998b09ce1f4", "name": "Sticky Note4", "type": "n8n-nodes-base.stickyNote", "position": [-220, -240], "parameters": {"color": 3, "width": 608.0701163493336, "height": 211.65896369815192, "content": "## Introduction: WordPress automatically publishes posts and inserts the first image\\n\\nIt is **highly recommended to install the Featured Image from URL (FIFU) plugin** and enable:\\n\\n**Auto > Set Featured Media Automatically from Content.** before you generate contents."}, "typeVersion": 1}, {"id": "37f3606f-f110-49d2-bcf5-1edc27149fee", "name": "Sticky Note5", "type": "n8n-nodes-base.stickyNote", "position": [400, 229.99235545929986], "parameters": {"width": 348.08256103956126, "height": 170.00764454070014, "content": "Add your API credential"}, "typeVersion": 1}, {"id": "2399a40d-4b79-400c-9e96-df7e683fd666", "name": "Sticky Note6", "type": "n8n-nodes-base.stickyNote", "position": [760, 228.00611563256007], "parameters": {"width": 150, "height": 170.00764454070008, "content": "Add your API credential"}, "typeVersion": 1}, {"id": "45e479a6-2eea-44a1-9096-9895a18904fd", "name": "Sticky Note7", "type": "n8n-nodes-base.stickyNote", "position": [920, 226.01987580582022], "parameters": {"width": 201.97095074533956, "height": 172.00917344884022, "content": "Add your API credential"}, "typeVersion": 1}, {"id": "e0489552-a7b5-4161-9553-95e23605a9d5", "name": "Generate AI Content", "type": "@n8n/n8n-nodes-langchain.openAi", "position": [440, 280], "parameters": {"modelId": {"__rl": true, "mode": "list", "value": "gpt-4o", "cachedResultName": "GPT-4O"}, "options": {}, "messages": {"values": [{"content": "(YOUR PROMPT)\\n(YOUR PROMPT)\\n\\n**Image Search Keywords (For Visual Alignment)**\\n\\n- Automatically generates 3-5 English keywords for image searches based on the article content.\\n- Keywords should be specific objects, locations, or atmospheres rather than abstract concepts.\\n\\n**Article Formatting Requirements**\\n\\n1️⃣ Title (H1): Ensure unique and trend-driven headlines.\\n2️⃣ H2 / H3 Subheadings: Structure content in an SEO-optimized format.\\n3️⃣ Article Structure (Enhanced Readability)\\n\\n** Introduction **\\n- Go straight to the point, avoiding excessive background.\\n- Use question hooks or market trend data to engage readers.\\n\\n** Core Content **\\n- Include at least three knowledge points to ensure depth.\\n- Balance short and long sentences for better flow.\\n\\n** Conclusion **\\n- Avoid generic AI-style summaries; instead, provide insights or actionable takeaways.\\n- Optionally include a CTA (Call to Action).\\n\\n** HTML Formatting **\\nEnsure the article is properly structured in HTML format:\\n- Headings: Use <h1>, <h2>, <h3> appropriately.\\n- Paragraphs: Enclose text within <p>.\\n- Emphasized Words: Use <strong> to highlight key terms.\\n- Lists: Use <ul> and <li> for bullet points.\\n\\nEnsure a clean, well-structured output instead of plain text.\\n\\n### **Final JSON Format\\nEnsure the output follows this structure:\\n\\n{\\n  \\"title\\": \\"{Generate an H1 title that aligns with market trends, ensures high click-through rates, and follows keyword strategy}\\",\\n  \\"content\\": \\"{Generate a complete HTML article including H1, H2, H3 headings, paragraphs, lists, etc.}\\",\\n  \\"keywords\\": [\\"{Image search keyword 1}\\", \\"{Image search keyword 2}\\", \\"{Image search keyword 3}\\", \\"{Image search keyword 4}\\", \\"{Image search keyword 5}\\"]\\n}"}]}, "jsonOutput": true}, "credentials": {"openAiApi": {"id": "YOUR_OPENAI_CREDENTIAL_ID", "name": "OpenAi account"}}, "typeVersion": 1.6}], "active": false, "pinData": {}, "settings": {"timezone": "Asia/Taipei", "callerPolicy": "workflowsFromSameOwner", "executionOrder": "v1", "executionTimeout": -1, "saveManualExecutions": true}, "versionId": "YOUR_VERSION_ID", "connections": {"Random Wait": {"main": [[{"node": "Generate AI Content", "type": "main", "index": 0}]]}, "Save to Sheet": {"main": [[{"node": "Automated Image Retrieval from Pexels", "type": "main", "index": 0}]]}, "Processing Delay": {"main": [[{"node": "Random Wait", "type": "main", "index": 0}]]}, "Generate AI Content": {"main": [[{"node": "Save to Sheet", "type": "main", "index": 0}]]}, "3. Schedule Your Posts": {"main": [[{"node": "Processing Delay", "type": "main", "index": 0}]]}, "Automated Image Retrieval from Pexels": {"main": [[{"node": "Create posts on Wordpress", "type": "main", "index": 0}]]}}}}	2025-10-12 15:07:48.112179
\.


--
-- Data for Name: workflows; Type: TABLE DATA; Schema: public; Owner: scraper_user
--

COPY public.workflows (id, workflow_id, url, extracted_at, updated_at, processing_time, quality_score, layer1_success, layer2_success, layer3_success, error_message, retry_count, last_scraped_at, created_at) FROM stdin;
2002	1	https://n8n.io/workflows/1-insert-excel-data-to-postgres	2025-10-12 07:53:02.628692	2025-10-12 07:53:02.628692	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2003	2	https://n8n.io/workflows/2-transfer-data-from-postgres-to-excel	2025-10-12 07:53:02.714958	2025-10-12 07:53:02.714958	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2004	3	https://n8n.io/workflows/3-write-http-query-string-on-image	2025-10-12 07:53:02.793298	2025-10-12 07:53:02.793298	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2005	4	https://n8n.io/workflows/4-send-selected-github-events-to-slack	2025-10-12 07:53:02.87408	2025-10-12 07:53:02.87408	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2006	6	https://n8n.io/workflows/6-sync-data-between-multiple-google-spreadsheets	2025-10-12 07:53:02.955377	2025-10-12 07:53:02.955377	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2007	8	https://n8n.io/workflows/8-handle-errors-from-a-different-workflow	2025-10-12 07:53:03.033344	2025-10-12 07:53:03.033344	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2008	11	https://n8n.io/workflows/11-add-data-from-google-sheet-to-dropbox	2025-10-12 07:53:03.115298	2025-10-12 07:53:03.115298	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2009	13	https://n8n.io/workflows/13-transform-xml-data-and-upload-to-dropbox	2025-10-12 07:53:03.194458	2025-10-12 07:53:03.194458	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2010	18	https://n8n.io/workflows/18-n8n-nodemation-basic-getting-started-on-the-workflow-canvas-13	2025-10-12 07:53:03.283231	2025-10-12 07:53:03.283231	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2011	19	https://n8n.io/workflows/19-n8n-nodemation-basic-creating-your-first-simple-workflow-23	2025-10-12 07:53:03.363606	2025-10-12 07:53:03.363606	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2012	27	https://n8n.io/workflows/27-telegram-sticker-bot	2025-10-12 07:53:03.440348	2025-10-12 07:53:03.440348	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2013	29	https://n8n.io/workflows/29-send-typeform-results-to-google-sheet-slack-and-email	2025-10-12 07:53:03.523391	2025-10-12 07:53:03.523391	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2014	100	https://n8n.io/workflows/100-using-the-merge-node-merge-by-key	2025-10-12 07:53:03.611254	2025-10-12 07:53:03.611254	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2015	101	https://n8n.io/workflows/101-write-json-to-disk-binary	2025-10-12 07:53:03.706289	2025-10-12 07:53:03.706289	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2016	119	https://n8n.io/workflows/119-webhook-returning-xml	2025-10-12 07:53:03.796474	2025-10-12 07:53:03.796474	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2017	122	https://n8n.io/workflows/122-report-phishing-websites-to-steam-and-cloudflare	2025-10-12 07:53:03.935139	2025-10-12 07:53:03.935139	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2018	154	https://n8n.io/workflows/154-listen-on-new-emails-on-a-imap-mailbox	2025-10-12 07:53:04.136666	2025-10-12 07:53:04.136666	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2019	156	https://n8n.io/workflows/156-get-execute-command-data-and-transfer-to-json	2025-10-12 07:53:04.978926	2025-10-12 07:53:04.978926	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2020	159	https://n8n.io/workflows/159-send-rss-feed-data-to-webhook	2025-10-12 07:53:05.356689	2025-10-12 07:53:05.356689	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2021	160	https://n8n.io/workflows/160-convert-xml-to-json	2025-10-12 07:53:05.457188	2025-10-12 07:53:05.457188	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2022	175	https://n8n.io/workflows/175-backs-up-n8n-workflows-to-nextcloud	2025-10-12 07:53:05.557655	2025-10-12 07:53:05.557655	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2023	179	https://n8n.io/workflows/179-convert-typeform-data-into-spreadsheet	2025-10-12 07:53:05.644193	2025-10-12 07:53:05.644193	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2024	199	https://n8n.io/workflows/199-rss-telegram-bot	2025-10-12 07:53:05.734843	2025-10-12 07:53:05.734843	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2025	216	https://n8n.io/workflows/216-api-queries-data-from-graphql	2025-10-12 07:53:05.813772	2025-10-12 07:53:05.813772	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2026	225	https://n8n.io/workflows/225-send-trending-show-hn-to-email	2025-10-12 07:53:05.897984	2025-10-12 07:53:05.897984	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2027	226	https://n8n.io/workflows/226-receive-google-sheet-data-via-rest-api	2025-10-12 07:53:06.120865	2025-10-12 07:53:06.120865	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2028	342	https://n8n.io/workflows/342-send-daily-affirmations-to-telegram	2025-10-12 07:53:06.210184	2025-10-12 07:53:06.210184	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2029	346	https://n8n.io/workflows/346-get-weather-forecast-via-telegram	2025-10-12 07:53:06.285414	2025-10-12 07:53:06.285414	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2030	351	https://n8n.io/workflows/351-webhooks-with-mattermost	2025-10-12 07:53:06.384026	2025-10-12 07:53:06.384026	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2031	353	https://n8n.io/workflows/353-manage-custom-incident-response-in-pagerduty-and-jira	2025-10-12 07:53:06.468635	2025-10-12 07:53:06.468635	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2032	354	https://n8n.io/workflows/354-incident-response-workflow-part-2	2025-10-12 07:53:06.554126	2025-10-12 07:53:06.554126	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2033	355	https://n8n.io/workflows/355-incident-response-workflow-part-3	2025-10-12 07:53:06.632218	2025-10-12 07:53:06.632218	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2034	356	https://n8n.io/workflows/356-generate-and-insert-data-into-a-postgres-database	2025-10-12 07:53:06.725811	2025-10-12 07:53:06.725811	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2035	357	https://n8n.io/workflows/357-send-sms-alerts-based-on-database-queries-twilio-and-postgres	2025-10-12 07:53:06.811046	2025-10-12 07:53:06.811046	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2036	359	https://n8n.io/workflows/359-sample-error-workflow	2025-10-12 07:53:06.890731	2025-10-12 07:53:06.890731	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2037	365	https://n8n.io/workflows/365-render-custom-text-over-images	2025-10-12 07:53:06.98088	2025-10-12 07:53:06.98088	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2038	368	https://n8n.io/workflows/368-create-ticket-on-specific-customer-messages-in-telegram	2025-10-12 07:53:07.065288	2025-10-12 07:53:07.065288	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2039	371	https://n8n.io/workflows/371-notify-a-team-channel-about-new-software-releases-via-slack-and-github	2025-10-12 07:53:07.334761	2025-10-12 07:53:07.334761	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2040	378	https://n8n.io/workflows/378-tiny-tiny-rss-aka-tt-rss-feed-to-mastodon	2025-10-12 07:53:07.485928	2025-10-12 07:53:07.485928	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2041	384	https://n8n.io/workflows/384-save-typeform-survey-results-to-airtable	2025-10-12 07:53:07.605099	2025-10-12 07:53:07.605099	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2042	385	https://n8n.io/workflows/385-send-airtable-data-as-tasks-to-trello	2025-10-12 07:53:07.737821	2025-10-12 07:53:07.737821	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2043	398	https://n8n.io/workflows/398-create-an-invoice-in-google-sheets-based-on-typeform-submission	2025-10-12 07:53:07.825649	2025-10-12 07:53:07.825649	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2044	401	https://n8n.io/workflows/401-send-an-smswhatsapp-message-with-twilio	2025-10-12 07:53:07.90569	2025-10-12 07:53:07.90569	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2045	404	https://n8n.io/workflows/404-notify-about-google-sheet-changes-in-slack-and-email	2025-10-12 07:53:07.985459	2025-10-12 07:53:07.985459	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2046	409	https://n8n.io/workflows/409-get-daily-sms-updates-about-weather	2025-10-12 07:53:08.105395	2025-10-12 07:53:08.105395	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2047	410	https://n8n.io/workflows/410-send-a-message-with-a-discord-bot	2025-10-12 07:53:08.198052	2025-10-12 07:53:08.198052	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2048	411	https://n8n.io/workflows/411-create-update-and-get-an-incident-on-pagerduty	2025-10-12 07:53:08.280038	2025-10-12 07:53:08.280038	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2049	412	https://n8n.io/workflows/412-create-a-contact-in-activecampaign	2025-10-12 07:53:08.359809	2025-10-12 07:53:08.359809	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2050	413	https://n8n.io/workflows/413-create-a-new-member-on-mailchimp	2025-10-12 07:53:08.448628	2025-10-12 07:53:08.448628	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2051	418	https://n8n.io/workflows/418-cross-post-your-blog-posts	2025-10-12 07:53:08.5447	2025-10-12 07:53:08.5447	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2052	426	https://n8n.io/workflows/426-set-alert-on-the-website-changes	2025-10-12 07:53:08.630861	2025-10-12 07:53:08.630861	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2053	427	https://n8n.io/workflows/427-add-a-event-to-google-calendar-automatically	2025-10-12 07:53:08.710225	2025-10-12 07:53:08.710225	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2054	428	https://n8n.io/workflows/428-add-a-task-to-google-tasks	2025-10-12 07:53:08.793016	2025-10-12 07:53:08.793016	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2055	429	https://n8n.io/workflows/429-gather-leads-in-google-sheet-and-mailchimp	2025-10-12 07:53:08.892537	2025-10-12 07:53:08.892537	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2056	434	https://n8n.io/workflows/434-extract-post-titles-from-a-blog	2025-10-12 07:53:08.964816	2025-10-12 07:53:08.964816	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2057	435	https://n8n.io/workflows/435-create-a-new-digitalocean-droplet	2025-10-12 07:53:09.033996	2025-10-12 07:53:09.033996	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2058	437	https://n8n.io/workflows/437-perform-speech-to-text-on-recorded-audio-clips-using-witai	2025-10-12 07:53:09.121694	2025-10-12 07:53:09.121694	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2059	438	https://n8n.io/workflows/438-create-a-paypal-batch-payout	2025-10-12 07:53:09.201026	2025-10-12 07:53:09.201026	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2060	440	https://n8n.io/workflows/440-add-a-song-to-your-spotify-queue	2025-10-12 07:53:09.278954	2025-10-12 07:53:09.278954	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2061	441	https://n8n.io/workflows/441-create-an-alert-on-signl4	2025-10-12 07:53:09.356355	2025-10-12 07:53:09.356355	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2062	442	https://n8n.io/workflows/442-create-a-url-on-bitly	2025-10-12 07:53:09.485737	2025-10-12 07:53:09.485737	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2063	445	https://n8n.io/workflows/445-send-a-tweet-to-twitter	2025-10-12 07:53:09.605311	2025-10-12 07:53:09.605311	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2064	448	https://n8n.io/workflows/448-create-a-new-freshdesk-ticket	2025-10-12 07:53:09.702535	2025-10-12 07:53:09.702535	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2065	450	https://n8n.io/workflows/450-get-the-community-profile-of-a-repository	2025-10-12 07:53:09.790929	2025-10-12 07:53:09.790929	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2066	453	https://n8n.io/workflows/453-create-a-meeting-in-zoom-automatically	2025-10-12 07:53:09.867835	2025-10-12 07:53:09.867835	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2067	454	https://n8n.io/workflows/454-get-a-pipeline-in-circleci	2025-10-12 07:53:09.942873	2025-10-12 07:53:09.942873	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2068	455	https://n8n.io/workflows/455-sending-an-sms-with-messagebird	2025-10-12 07:53:10.018297	2025-10-12 07:53:10.018297	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2069	458	https://n8n.io/workflows/458-run-a-sql-query-on-postgres	2025-10-12 07:53:10.114964	2025-10-12 07:53:10.114964	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2070	459	https://n8n.io/workflows/459-create-a-new-issue-in-jira	2025-10-12 07:53:10.245911	2025-10-12 07:53:10.245911	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2071	460	https://n8n.io/workflows/460-get-the-current-weather-data-for-a-city	2025-10-12 07:53:10.333436	2025-10-12 07:53:10.333436	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2072	461	https://n8n.io/workflows/461-create-a-new-card-in-trello	2025-10-12 07:53:10.407314	2025-10-12 07:53:10.407314	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2073	462	https://n8n.io/workflows/462-post-a-message-to-a-channel-in-rocketchat	2025-10-12 07:53:10.484357	2025-10-12 07:53:10.484357	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2074	464	https://n8n.io/workflows/464-create-a-new-user-in-intercom	2025-10-12 07:53:10.573234	2025-10-12 07:53:10.573234	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2075	465	https://n8n.io/workflows/465-get-details-of-a-gitlab-repository	2025-10-12 07:53:10.668344	2025-10-12 07:53:10.668344	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2076	466	https://n8n.io/workflows/466-get-all-contacts-of-hubspot-account	2025-10-12 07:53:10.808742	2025-10-12 07:53:10.808742	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2077	467	https://n8n.io/workflows/467-send-sales-data-from-webhook-to-mautic	2025-10-12 07:53:10.883265	2025-10-12 07:53:10.883265	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2078	469	https://n8n.io/workflows/469-sending-an-sms-using-sms77	2025-10-12 07:53:10.977892	2025-10-12 07:53:10.977892	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2079	471	https://n8n.io/workflows/471-send-github-notifications-to-discord-webhook	2025-10-12 07:53:11.070502	2025-10-12 07:53:11.070502	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2080	474	https://n8n.io/workflows/474-create-a-new-contact-in-agile-crm	2025-10-12 07:53:11.147692	2025-10-12 07:53:11.147692	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2081	476	https://n8n.io/workflows/476-create-an-organization-in-affinity	2025-10-12 07:53:11.22306	2025-10-12 07:53:11.22306	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2082	478	https://n8n.io/workflows/478-create-a-new-task-in-asana	2025-10-12 07:53:11.299823	2025-10-12 07:53:11.299823	\N	\N	f	f	f	\N	0	\N	2025-10-12 08:51:53.757644
2170	invalid_url	https://invalid-domain-that-does-not-exist.com/workflow	2025-10-12 15:43:51.219955	2025-10-12 15:52:20.419656	3.1881229877471924	0	f	f	f	\N	0	\N	2025-10-12 15:43:17.57983
2171	abc123	https://n8n.io/workflows/abc123	2025-10-12 15:43:51.219959	2025-10-12 15:52:20.419657	13.184077739715576	20	t	f	t	\N	0	\N	2025-10-12 15:43:17.57983
2172	999999	https://n8n.io/workflows/999999	2025-10-12 15:43:51.21996	2025-10-12 15:52:20.419657	13.282096862792969	20	t	f	t	\N	0	\N	2025-10-12 15:43:17.57983
2173	9999999	https://n8n.io/workflows/9999999	2025-10-12 15:43:51.21996	2025-10-12 15:52:20.419662	11.828850030899048	20	t	f	t	\N	0	\N	2025-10-12 15:43:17.57983
2174	500000	https://n8n.io/workflows/500000	2025-10-12 15:43:51.219961	2025-10-12 15:52:20.419663	11.665162563323975	20	t	f	t	\N	0	\N	2025-10-12 15:43:17.57983
2095	493	https://n8n.io/workflows/493-get-details-of-a-forum-in-disqus	2025-10-12 07:53:13.47813	2025-10-12 12:40:55.006327	25.277559518814087	44.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2100	498	https://n8n.io/workflows/498-send-a-private-message-on-zulip	2025-10-12 07:53:17.43928	2025-10-12 12:39:55.433643	21.56902527809143	44.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2001	2462	https://n8n.io/workflows/2462	2025-10-12 07:43:40.865317	2025-10-12 14:44:15.276572	38.43302893638611	70	t	t	t	\N	0	2025-10-12 07:43:40.865317	2025-10-12 08:51:53.757644
2099	497	https://n8n.io/workflows/497-create-a-contact-in-drift	2025-10-12 07:53:17.138707	2025-10-12 12:40:29.678577	29.202369213104248	47.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2097	495	https://n8n.io/workflows/495-track-an-event-in-segment	2025-10-12 07:53:13.700202	2025-10-12 12:40:29.69703	29.221631050109863	47.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2098	496	https://n8n.io/workflows/496-create-a-ticket-in-zendesk	2025-10-12 07:53:16.889215	2025-10-12 12:40:29.718241	29.240052700042725	47.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2096	494	https://n8n.io/workflows/494-create-a-client-in-harvest	2025-10-12 07:53:13.572523	2025-10-12 12:40:54.396718	24.660612106323242	47.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2094	491	https://n8n.io/workflows/491-receive-updates-for-changes-in-the-specified-list-in-trello	2025-10-12 07:53:13.378319	2025-10-12 12:40:54.85559	25.126002073287964	38.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2093	490	https://n8n.io/workflows/490-receive-updates-for-all-changes-in-pipedrive	2025-10-12 07:53:13.272769	2025-10-12 12:41:12.171105	17.14608120918274	38.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2091	488	https://n8n.io/workflows/488-receive-updates-when-a-new-account-is-added-by-an-admin-in-activecampaign	2025-10-12 07:53:12.24838	2025-10-12 12:41:13.154749	18.140565395355225	38.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2092	489	https://n8n.io/workflows/489-create-a-deal-in-pipedrive	2025-10-12 07:53:13.172486	2025-10-12 12:41:17.548922	22.532657384872437	47.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2090	487	https://n8n.io/workflows/487-receive-updates-for-events-in-clickup	2025-10-12 07:53:11.938321	2025-10-12 12:41:40.343113	22.732075691223145	38.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2089	486	https://n8n.io/workflows/486-receive-updates-for-events-in-chargebee	2025-10-12 07:53:11.86535	2025-10-12 12:41:40.357357	22.79952907562256	38.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2088	485	https://n8n.io/workflows/485-create-a-task-in-clickup	2025-10-12 07:53:11.786615	2025-10-12 12:41:46.46706	28.908928871154785	47.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2086	483	https://n8n.io/workflows/483-create-a-new-customer-in-chargebee	2025-10-12 07:53:11.620421	2025-10-12 12:42:03.893853	17.408771514892578	47.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2085	482	https://n8n.io/workflows/482-insert-data-into-a-new-row-for-a-table-in-coda	2025-10-12 07:53:11.545169	2025-10-12 12:42:04.637896	18.161150455474854	49	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2087	484	https://n8n.io/workflows/484-look-up-a-person-using-their-email-in-clearbit	2025-10-12 07:53:11.698675	2025-10-12 12:42:05.587652	19.111007928848267	47.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2083	479	https://n8n.io/workflows/479-execute-an-sql-query-in-microsoft-sql	2025-10-12 07:53:11.377053	2025-10-12 12:42:20.398377	14.795103549957275	47.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2084	481	https://n8n.io/workflows/481-create-a-new-task-in-todoist	2025-10-12 07:53:11.470678	2025-10-12 12:42:20.996005	15.39680027961731	47.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2169	1000	https://n8n.io/workflows/1000	2025-10-12 15:27:07.206184	2025-10-12 15:57:21.941963	10.930305480957031	20	t	f	t	\N	0	\N	2025-10-12 15:26:34.816306
2129	3006	https://n8n.io/workflows/3006	2025-10-12 15:07:48.095699	2025-10-12 15:29:55.151037	30.55026078224182	20	t	f	t	\N	0	\N	2025-10-12 15:06:16.108503
2101	499	https://n8n.io/workflows/499-create-a-user-profile-in-vero	2025-10-12 07:53:17.696673	2025-10-12 12:39:54.507538	20.6184024810791	44.5	t	t	t	\N	0	\N	2025-10-12 08:51:53.757644
2130	3003	https://n8n.io/workflows/3003	2025-10-12 15:07:48.095703	2025-10-12 15:29:55.151039	31.17704486846924	70	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
2131	3007	https://n8n.io/workflows/3007	2025-10-12 15:07:48.095705	2025-10-12 15:29:55.151039	31.93058490753174	70	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
2132	3005	https://n8n.io/workflows/3005	2025-10-12 15:07:48.095706	2025-10-12 15:29:55.15104	31.925616025924683	70	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
2122	2463	https://n8n.io/workflows/2463	2025-10-12 14:22:36.384296	2025-10-12 14:44:15.276575	37.746734857559204	70	t	t	t	\N	0	\N	2025-10-12 14:22:34.364505
2123	2465	https://n8n.io/workflows/2465	2025-10-12 14:22:36.3843	2025-10-12 14:44:15.276575	38.4371235370636	70	t	t	t	\N	0	\N	2025-10-12 14:22:34.364505
2124	2464	https://n8n.io/workflows/2464	2025-10-12 14:22:36.384301	2025-10-12 14:44:15.276575	38.4420166015625	70	t	t	t	\N	0	\N	2025-10-12 14:22:34.364505
2125	2466	https://n8n.io/workflows/2466	2025-10-12 14:22:36.384301	2025-10-12 14:44:15.276577	39.03776717185974	70	t	t	t	\N	0	\N	2025-10-12 14:22:34.364505
2126	3000	https://n8n.io/workflows/3000	2025-10-12 14:46:17.93695	2025-10-12 15:03:14.092327	14.332122087478638	20	t	f	t	\N	0	\N	2025-10-12 14:46:15.277612
2127	3001	https://n8n.io/workflows/3001	2025-10-12 14:46:17.936954	2025-10-12 15:03:14.09233	14.186708450317383	20	t	f	t	\N	0	\N	2025-10-12 14:46:15.277612
2128	3002	https://n8n.io/workflows/3002	2025-10-12 14:46:17.936956	2025-10-12 15:03:14.09233	16.172876596450806	70	t	t	t	\N	0	\N	2025-10-12 14:46:15.277612
2138	3008	https://n8n.io/workflows/3008	2025-10-12 15:07:48.095709	2025-10-12 15:29:55.151045	33.42610788345337	70	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
2139	3015	https://n8n.io/workflows/3015	2025-10-12 15:07:48.095709	2025-10-12 15:29:55.151046	26.91770577430725	20	t	f	t	\N	0	\N	2025-10-12 15:06:16.108503
2140	3013	https://n8n.io/workflows/3013	2025-10-12 15:07:48.09571	2025-10-12 15:29:55.151046	26.803892374038696	20	t	f	t	\N	0	\N	2025-10-12 15:06:16.108503
2141	3017	https://n8n.io/workflows/3017	2025-10-12 15:07:48.09571	2025-10-12 15:29:55.151046	26.904314279556274	20	t	f	t	\N	0	\N	2025-10-12 15:06:16.108503
2142	3016	https://n8n.io/workflows/3016	2025-10-12 15:07:48.095711	2025-10-12 15:29:55.151046	27.487059831619263	70	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
2143	3014	https://n8n.io/workflows/3014	2025-10-12 15:07:48.095711	2025-10-12 15:29:55.151046	27.431798696517944	70	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
2156	40010	https://n8n.io/workflows/40010	2025-10-12 15:23:57.360033	2025-10-12 15:25:43.396642	96.61427879333496	20	t	f	t	\N	0	\N	2025-10-12 15:23:50.831059
2144	3019	https://n8n.io/workflows/3019	2025-10-12 15:07:48.095712	2025-10-12 15:29:55.151046	27.270375728607178	20	t	f	t	\N	0	\N	2025-10-12 15:06:16.108503
2145	3022	https://n8n.io/workflows/3022	2025-10-12 15:07:48.095712	2025-10-12 15:29:55.151047	28.618967533111572	20	t	f	t	\N	0	\N	2025-10-12 15:06:16.108503
2159	40013	https://n8n.io/workflows/40013	2025-10-12 15:25:43.398986	2025-10-12 15:25:43.398989	96.13472127914429	20	t	f	t	\N	0	\N	2025-10-12 15:25:36.127151
2160	40014	https://n8n.io/workflows/40014	2025-10-12 15:25:43.398989	2025-10-12 15:25:43.398989	98.83300304412842	20	t	f	t	\N	0	\N	2025-10-12 15:25:36.127151
2161	40011	https://n8n.io/workflows/40011	2025-10-12 15:25:43.39899	2025-10-12 15:25:43.39899	98.82122802734375	20	t	f	t	\N	0	\N	2025-10-12 15:25:36.127151
2162	40015	https://n8n.io/workflows/40015	2025-10-12 15:25:43.39899	2025-10-12 15:25:43.39899	99.1145007610321	20	t	f	t	\N	0	\N	2025-10-12 15:25:36.127151
2163	40012	https://n8n.io/workflows/40012	2025-10-12 15:25:43.39899	2025-10-12 15:25:43.398991	99.50963068008423	20	t	f	t	\N	0	\N	2025-10-12 15:25:36.127151
2133	3004	https://n8n.io/workflows/3004	2025-10-12 15:07:48.095706	2025-10-12 15:29:55.151041	31.941476106643677	70	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
2134	3010	https://n8n.io/workflows/3010	2025-10-12 15:07:48.095707	2025-10-12 15:29:55.151042	33.41483283042908	70	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
2135	3011	https://n8n.io/workflows/3011	2025-10-12 15:07:48.095707	2025-10-12 15:29:55.151045	33.3965790271759	20	t	f	t	\N	0	\N	2025-10-12 15:06:16.108503
2136	3012	https://n8n.io/workflows/3012	2025-10-12 15:07:48.095708	2025-10-12 15:29:55.151045	32.39038562774658	70	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
2137	3009	https://n8n.io/workflows/3009	2025-10-12 15:07:48.095708	2025-10-12 15:29:55.151045	33.50188755989075	70	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
2146	3021	https://n8n.io/workflows/3021	2025-10-12 15:07:48.095712	2025-10-12 15:29:55.151047	30.48692297935486	70	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
2147	3020	https://n8n.io/workflows/3020	2025-10-12 15:07:48.095713	2025-10-12 15:29:55.151047	30.47849988937378	67	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
2148	3018	https://n8n.io/workflows/3018	2025-10-12 15:07:48.095713	2025-10-12 15:29:55.151047	28.37707829475403	70	t	t	t	\N	0	\N	2025-10-12 15:06:16.108503
\.


--
-- Name: video_transcripts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: scraper_user
--

SELECT pg_catalog.setval('public.video_transcripts_id_seq', 1, false);


--
-- Name: workflow_content_id_seq; Type: SEQUENCE SET; Schema: public; Owner: scraper_user
--

SELECT pg_catalog.setval('public.workflow_content_id_seq', 2049, true);


--
-- Name: workflow_metadata_id_seq; Type: SEQUENCE SET; Schema: public; Owner: scraper_user
--

SELECT pg_catalog.setval('public.workflow_metadata_id_seq', 2061, true);


--
-- Name: workflow_structure_id_seq; Type: SEQUENCE SET; Schema: public; Owner: scraper_user
--

SELECT pg_catalog.setval('public.workflow_structure_id_seq', 1462, true);


--
-- Name: workflows_id_seq; Type: SEQUENCE SET; Schema: public; Owner: scraper_user
--

SELECT pg_catalog.setval('public.workflows_id_seq', 2177, true);


--
-- Name: video_transcripts video_transcripts_pkey; Type: CONSTRAINT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.video_transcripts
    ADD CONSTRAINT video_transcripts_pkey PRIMARY KEY (id);


--
-- Name: workflow_content workflow_content_pkey; Type: CONSTRAINT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflow_content
    ADD CONSTRAINT workflow_content_pkey PRIMARY KEY (id);


--
-- Name: workflow_content workflow_content_workflow_id_key; Type: CONSTRAINT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflow_content
    ADD CONSTRAINT workflow_content_workflow_id_key UNIQUE (workflow_id);


--
-- Name: workflow_metadata workflow_metadata_pkey; Type: CONSTRAINT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflow_metadata
    ADD CONSTRAINT workflow_metadata_pkey PRIMARY KEY (id);


--
-- Name: workflow_metadata workflow_metadata_workflow_id_key; Type: CONSTRAINT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflow_metadata
    ADD CONSTRAINT workflow_metadata_workflow_id_key UNIQUE (workflow_id);


--
-- Name: workflow_structure workflow_structure_pkey; Type: CONSTRAINT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflow_structure
    ADD CONSTRAINT workflow_structure_pkey PRIMARY KEY (id);


--
-- Name: workflow_structure workflow_structure_workflow_id_key; Type: CONSTRAINT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflow_structure
    ADD CONSTRAINT workflow_structure_workflow_id_key UNIQUE (workflow_id);


--
-- Name: workflows workflows_pkey; Type: CONSTRAINT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflows
    ADD CONSTRAINT workflows_pkey PRIMARY KEY (id);


--
-- Name: idx_categories_gin; Type: INDEX; Schema: public; Owner: scraper_user
--

CREATE INDEX idx_categories_gin ON public.workflow_metadata USING gin (categories);


--
-- Name: idx_node_types_gin; Type: INDEX; Schema: public; Owner: scraper_user
--

CREATE INDEX idx_node_types_gin ON public.workflow_structure USING gin (node_types);


--
-- Name: ix_video_transcripts_platform; Type: INDEX; Schema: public; Owner: scraper_user
--

CREATE INDEX ix_video_transcripts_platform ON public.video_transcripts USING btree (platform);


--
-- Name: ix_video_transcripts_workflow_id; Type: INDEX; Schema: public; Owner: scraper_user
--

CREATE INDEX ix_video_transcripts_workflow_id ON public.video_transcripts USING btree (workflow_id);


--
-- Name: ix_workflow_content_has_videos; Type: INDEX; Schema: public; Owner: scraper_user
--

CREATE INDEX ix_workflow_content_has_videos ON public.workflow_content USING btree (has_videos);


--
-- Name: ix_workflow_metadata_title; Type: INDEX; Schema: public; Owner: scraper_user
--

CREATE INDEX ix_workflow_metadata_title ON public.workflow_metadata USING btree (title);


--
-- Name: ix_workflow_structure_node_count; Type: INDEX; Schema: public; Owner: scraper_user
--

CREATE INDEX ix_workflow_structure_node_count ON public.workflow_structure USING btree (node_count);


--
-- Name: ix_workflows_extracted_at; Type: INDEX; Schema: public; Owner: scraper_user
--

CREATE INDEX ix_workflows_extracted_at ON public.workflows USING btree (extracted_at);


--
-- Name: ix_workflows_quality_score; Type: INDEX; Schema: public; Owner: scraper_user
--

CREATE INDEX ix_workflows_quality_score ON public.workflows USING btree (quality_score);


--
-- Name: ix_workflows_workflow_id; Type: INDEX; Schema: public; Owner: scraper_user
--

CREATE UNIQUE INDEX ix_workflows_workflow_id ON public.workflows USING btree (workflow_id);


--
-- Name: video_transcripts video_transcripts_workflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.video_transcripts
    ADD CONSTRAINT video_transcripts_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(workflow_id) ON DELETE CASCADE;


--
-- Name: workflow_content workflow_content_workflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflow_content
    ADD CONSTRAINT workflow_content_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(workflow_id) ON DELETE CASCADE;


--
-- Name: workflow_metadata workflow_metadata_workflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflow_metadata
    ADD CONSTRAINT workflow_metadata_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(workflow_id) ON DELETE CASCADE;


--
-- Name: workflow_structure workflow_structure_workflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: scraper_user
--

ALTER TABLE ONLY public.workflow_structure
    ADD CONSTRAINT workflow_structure_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(workflow_id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

\unrestrict ppwpAMzO7vZqnGFRu4TKYfzStOt33CeJC1KvnqV7qhBuKR6Vfj8m178wnCFbsCG

