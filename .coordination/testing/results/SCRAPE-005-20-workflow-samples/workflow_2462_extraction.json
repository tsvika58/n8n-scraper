{
  "success": true,
  "data": {
    "introduction": "How it works:This project creates a personal AI assistant named Angie that operates through Telegram. Angie can summarize daily emails, look up calendar entries, remind users of upcoming tasks, and retrieve contact information. The assistant can interact with users via both voice and text inputs.Step-by-step:Telegram Trigger: The workflow starts with a Telegram trigger that listens for incoming message events. The system determines if the incoming message is voice or text. If voice, the voice file is retrieved and transcribed to text using OpenAI's API Speech to TextAI Assistant: The telegram request is passed to the AI assistant (Angie).Tools Integration: The AI assistant is equipped with several tools:Get Email: Uses Gmail API to fetch recent emails, filtering by date.Get Calendar: Retrieves calendar entries for specified dates.Get Tasks: Connects to a Baserow (open-source Airtable alternative) database to fetch to-do list items.Get Contacts: Also uses Baserow to retrieve contact information.Response Generation: The AI formulates a response based on the gathered information and sends back to the user on Telegram",
    "overview": "",
    "tutorial_text": "How it works:This project creates a personal AI assistant named Angie that operates through Telegram. Angie can summarize daily emails, look up calendar entries, remind users of upcoming tasks, and retrieve contact information. The assistant can interact with users via both voice and text inputs.Step-by-step:Telegram Trigger: The workflow starts with a Telegram trigger that listens for incoming message events. The system determines if the incoming message is voice or text. If voice, the voice file is retrieved and transcribed to text using OpenAI's API Speech to TextAI Assistant: The telegram request is passed to the AI assistant (Angie).Tools Integration: The AI assistant is equipped with several tools:Get Email: Uses Gmail API to fetch recent emails, filtering by date.Get Calendar: Retrieves calendar entries for specified dates.Get Tasks: Connects to a Baserow (open-source Airtable alternative) database to fetch to-do list items.Get Contacts: Also uses Baserow to retrieve contact information.Response Generation: The AI formulates a response based on the gathered information and sends back to the user on Telegram",
    "tutorial_sections": [],
    "step_by_step": [],
    "best_practices": [],
    "common_pitfalls": [],
    "image_urls": [
      "https://n8n.io/nodes/telegram.svg",
      "https://gravatar.com/avatar/1d8dbb30401a76425734d4319abbaa38548b7572064ca080740bbfe60324772a?r=pg&d=retro&size=200",
      "https://n8n.io/nodes/http-request.svg",
      "https://n8n.io/nodes/telegram-trigger.svg",
      "https://n8n.io/nodes/merge.svg",
      "https://n8n.io/nodes/openai-chat-model.svg",
      "https://gravatar.com/avatar/b3d1a47322f05a8be3d2e7bad6a80c29161bd58b91e4762cbb3ac25e5d0db5a8?r=pg&d=retro&size=200",
      "https://gravatar.com/avatar/74234187cf4a650d53f6a86e7b03d1bcb8cfef4cbd0552eabd8d966cd808cc54?r=pg&d=retro&size=200",
      "https://gravatar.com/avatar/4ab99e51473df76838beeaac908747f7928c625f869794815cabe34016967d51?r=pg&d=retro&size=200",
      "https://gravatar.com/avatar/a551e67c6fe7affd5f882a527dee154bb6c3ac90cf878326accb3fb3ec77c8a6?r=pg&d=retro&size=200",
      "https://n8n.io/images/stars-footer.svg",
      "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_igordisco_9243b86232_cd9a5c94ce.jpg",
      "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/neutral_avatar_purple_fee36bffe3.PNG",
      "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_anderoav_589989fc39_ceb1c71a0c.jpg",
      "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_maxim_poulsen_48f450887b_852d0439bc.jpeg",
      "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Felix_Leber_f7a5b3c776_130aeca79d.jpeg",
      "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/avatar_Ironben_0a4b3e7d12_e35805265c.jpg",
      "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Francois_lassl_d5cfb504c7_710c87121d.jpeg",
      "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/twitter_x_62a44e965e.svg",
      "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/github_e1f217d7a3_b9a271324f.svg",
      "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/discord_253947c90b_191e8f60fa.svg",
      "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/linkedin_d710e84d63_6ed0dc28aa.svg",
      "https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/youtube_de4bdef50a_4b3a8b8aac.svg"
    ],
    "video_urls": [],
    "code_snippets": [],
    "conclusion": "",
    "troubleshooting": {
      "common_issues": [],
      "error_messages": []
    },
    "related_workflows": []
  },
  "errors": [],
  "extraction_time": 5.529508,
  "metadata": {
    "workflow_id": "2462",
    "url": "https://n8n.io/workflows/2462",
    "extracted_at": "2025-10-09T21:51:36.206475",
    "extractor_version": "1.0.0"
  }
}